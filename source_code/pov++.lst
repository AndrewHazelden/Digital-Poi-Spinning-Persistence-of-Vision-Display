;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/6/2010 11:21:07 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF007EF48  	GOTO        3728
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_printChar:
;pov++.c,463 :: 		void printChar(char letter){
;pov++.c,465 :: 		digit_counter++;
0x001C	0x4A15      	INFSNZ      _digit_counter, 1 
0x001E	0x2A16      	INCF        _digit_counter+1, 1 
;pov++.c,466 :: 		for(n=0;n<8;n++){
0x0020	0x6A01      	CLRF        R1 
0x0022	0x6A02      	CLRF        R2 
L_printChar71:
0x0024	0x0E80      	MOVLW       128
0x0026	0x1802      	XORWF       R2, 0 
0x0028	0x6E00      	MOVWF       R0 
0x002A	0x0E80      	MOVLW       128
0x002C	0x5C00      	SUBWF       R0, 0 
0x002E	0xE102      	BNZ         L__printChar290
0x0030	0x0E08      	MOVLW       8
0x0032	0x5C01      	SUBWF       R1, 0 
L__printChar290:
0x0034	0xB0D8      	BTFSC       STATUS, 0 
0x0036	0xF006EF49  	GOTO        L_printChar72
;pov++.c,468 :: 		if(letter == 'A') PORTA = letter_A[n];
0x003A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x003C	0x0A41      	XORLW       65
0x003E	0xE111      	BNZ         L_printChar74
0x0040	0x0EFB      	MOVLW       _letter_A
0x0042	0x2401      	ADDWF       R1, 0 
0x0044	0x6EF6      	MOVWF       4086 
0x0046	0x0E16      	MOVLW       hi_addr(_letter_A)
0x0048	0x2002      	ADDWFC      R2, 0 
0x004A	0x6EF7      	MOVWF       TBLPTRH 
0x004C	0x0E00      	MOVLW       higher_addr(_letter_A)
0x004E	0x6EF8      	MOVWF       TBLPTRU 
0x0050	0x0E00      	MOVLW       0
0x0052	0xBE02      	BTFSC       R2, 7 
0x0054	0x0EFF      	MOVLW       255
0x0056	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0058	0x0009      	TBLRD*+
0x005A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x005E	0xF006EF22  	GOTO        L_printChar75
L_printChar74:
;pov++.c,469 :: 		else if(letter == 'B') PORTA = letter_B[n];
0x0062	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0064	0x0A42      	XORLW       66
0x0066	0xE111      	BNZ         L_printChar76
0x0068	0x0E03      	MOVLW       _letter_B
0x006A	0x2401      	ADDWF       R1, 0 
0x006C	0x6EF6      	MOVWF       4086 
0x006E	0x0E17      	MOVLW       hi_addr(_letter_B)
0x0070	0x2002      	ADDWFC      R2, 0 
0x0072	0x6EF7      	MOVWF       TBLPTRH 
0x0074	0x0E00      	MOVLW       higher_addr(_letter_B)
0x0076	0x6EF8      	MOVWF       TBLPTRU 
0x0078	0x0E00      	MOVLW       0
0x007A	0xBE02      	BTFSC       R2, 7 
0x007C	0x0EFF      	MOVLW       255
0x007E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0080	0x0009      	TBLRD*+
0x0082	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0086	0xF006EF22  	GOTO        L_printChar77
L_printChar76:
;pov++.c,470 :: 		else if(letter == 'C') PORTA = letter_C[n];
0x008A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x008C	0x0A43      	XORLW       67
0x008E	0xE111      	BNZ         L_printChar78
0x0090	0x0EF3      	MOVLW       _letter_C
0x0092	0x2401      	ADDWF       R1, 0 
0x0094	0x6EF6      	MOVWF       4086 
0x0096	0x0E16      	MOVLW       hi_addr(_letter_C)
0x0098	0x2002      	ADDWFC      R2, 0 
0x009A	0x6EF7      	MOVWF       TBLPTRH 
0x009C	0x0E00      	MOVLW       higher_addr(_letter_C)
0x009E	0x6EF8      	MOVWF       TBLPTRU 
0x00A0	0x0E00      	MOVLW       0
0x00A2	0xBE02      	BTFSC       R2, 7 
0x00A4	0x0EFF      	MOVLW       255
0x00A6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x00A8	0x0009      	TBLRD*+
0x00AA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x00AE	0xF006EF22  	GOTO        L_printChar79
L_printChar78:
;pov++.c,471 :: 		else if(letter == 'D') PORTA = letter_D[n];
0x00B2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x00B4	0x0A44      	XORLW       68
0x00B6	0xE111      	BNZ         L_printChar80
0x00B8	0x0EE3      	MOVLW       _letter_D
0x00BA	0x2401      	ADDWF       R1, 0 
0x00BC	0x6EF6      	MOVWF       4086 
0x00BE	0x0E16      	MOVLW       hi_addr(_letter_D)
0x00C0	0x2002      	ADDWFC      R2, 0 
0x00C2	0x6EF7      	MOVWF       TBLPTRH 
0x00C4	0x0E00      	MOVLW       higher_addr(_letter_D)
0x00C6	0x6EF8      	MOVWF       TBLPTRU 
0x00C8	0x0E00      	MOVLW       0
0x00CA	0xBE02      	BTFSC       R2, 7 
0x00CC	0x0EFF      	MOVLW       255
0x00CE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x00D0	0x0009      	TBLRD*+
0x00D2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x00D6	0xF006EF22  	GOTO        L_printChar81
L_printChar80:
;pov++.c,472 :: 		else if(letter == 'E') PORTA = letter_E[n];
0x00DA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x00DC	0x0A45      	XORLW       69
0x00DE	0xE111      	BNZ         L_printChar82
0x00E0	0x0EEB      	MOVLW       _letter_E
0x00E2	0x2401      	ADDWF       R1, 0 
0x00E4	0x6EF6      	MOVWF       4086 
0x00E6	0x0E16      	MOVLW       hi_addr(_letter_E)
0x00E8	0x2002      	ADDWFC      R2, 0 
0x00EA	0x6EF7      	MOVWF       TBLPTRH 
0x00EC	0x0E00      	MOVLW       higher_addr(_letter_E)
0x00EE	0x6EF8      	MOVWF       TBLPTRU 
0x00F0	0x0E00      	MOVLW       0
0x00F2	0xBE02      	BTFSC       R2, 7 
0x00F4	0x0EFF      	MOVLW       255
0x00F6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x00F8	0x0009      	TBLRD*+
0x00FA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x00FE	0xF006EF22  	GOTO        L_printChar83
L_printChar82:
;pov++.c,473 :: 		else if(letter == 'F') PORTA = letter_F[n];
0x0102	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0104	0x0A46      	XORLW       70
0x0106	0xE111      	BNZ         L_printChar84
0x0108	0x0E23      	MOVLW       _letter_F
0x010A	0x2401      	ADDWF       R1, 0 
0x010C	0x6EF6      	MOVWF       4086 
0x010E	0x0E17      	MOVLW       hi_addr(_letter_F)
0x0110	0x2002      	ADDWFC      R2, 0 
0x0112	0x6EF7      	MOVWF       TBLPTRH 
0x0114	0x0E00      	MOVLW       higher_addr(_letter_F)
0x0116	0x6EF8      	MOVWF       TBLPTRU 
0x0118	0x0E00      	MOVLW       0
0x011A	0xBE02      	BTFSC       R2, 7 
0x011C	0x0EFF      	MOVLW       255
0x011E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0120	0x0009      	TBLRD*+
0x0122	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0126	0xF006EF22  	GOTO        L_printChar85
L_printChar84:
;pov++.c,474 :: 		else if(letter == 'G') PORTA = letter_G[n];
0x012A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x012C	0x0A47      	XORLW       71
0x012E	0xE111      	BNZ         L_printChar86
0x0130	0x0E2B      	MOVLW       _letter_G
0x0132	0x2401      	ADDWF       R1, 0 
0x0134	0x6EF6      	MOVWF       4086 
0x0136	0x0E17      	MOVLW       hi_addr(_letter_G)
0x0138	0x2002      	ADDWFC      R2, 0 
0x013A	0x6EF7      	MOVWF       TBLPTRH 
0x013C	0x0E00      	MOVLW       higher_addr(_letter_G)
0x013E	0x6EF8      	MOVWF       TBLPTRU 
0x0140	0x0E00      	MOVLW       0
0x0142	0xBE02      	BTFSC       R2, 7 
0x0144	0x0EFF      	MOVLW       255
0x0146	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0148	0x0009      	TBLRD*+
0x014A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x014E	0xF006EF22  	GOTO        L_printChar87
L_printChar86:
;pov++.c,475 :: 		else if(letter == 'H') PORTA = letter_H[n];
0x0152	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0154	0x0A48      	XORLW       72
0x0156	0xE111      	BNZ         L_printChar88
0x0158	0x0E1B      	MOVLW       _letter_H
0x015A	0x2401      	ADDWF       R1, 0 
0x015C	0x6EF6      	MOVWF       4086 
0x015E	0x0E17      	MOVLW       hi_addr(_letter_H)
0x0160	0x2002      	ADDWFC      R2, 0 
0x0162	0x6EF7      	MOVWF       TBLPTRH 
0x0164	0x0E00      	MOVLW       higher_addr(_letter_H)
0x0166	0x6EF8      	MOVWF       TBLPTRU 
0x0168	0x0E00      	MOVLW       0
0x016A	0xBE02      	BTFSC       R2, 7 
0x016C	0x0EFF      	MOVLW       255
0x016E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0170	0x0009      	TBLRD*+
0x0172	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0176	0xF006EF22  	GOTO        L_printChar89
L_printChar88:
;pov++.c,476 :: 		else if(letter == 'I') PORTA = letter_I[n];
0x017A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x017C	0x0A49      	XORLW       73
0x017E	0xE111      	BNZ         L_printChar90
0x0180	0x0E0B      	MOVLW       _letter_I
0x0182	0x2401      	ADDWF       R1, 0 
0x0184	0x6EF6      	MOVWF       4086 
0x0186	0x0E17      	MOVLW       hi_addr(_letter_I)
0x0188	0x2002      	ADDWFC      R2, 0 
0x018A	0x6EF7      	MOVWF       TBLPTRH 
0x018C	0x0E00      	MOVLW       higher_addr(_letter_I)
0x018E	0x6EF8      	MOVWF       TBLPTRU 
0x0190	0x0E00      	MOVLW       0
0x0192	0xBE02      	BTFSC       R2, 7 
0x0194	0x0EFF      	MOVLW       255
0x0196	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0198	0x0009      	TBLRD*+
0x019A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x019E	0xF006EF22  	GOTO        L_printChar91
L_printChar90:
;pov++.c,477 :: 		else if(letter == 'J') PORTA = letter_J[n];
0x01A2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x01A4	0x0A4A      	XORLW       74
0x01A6	0xE111      	BNZ         L_printChar92
0x01A8	0x0E13      	MOVLW       _letter_J
0x01AA	0x2401      	ADDWF       R1, 0 
0x01AC	0x6EF6      	MOVWF       4086 
0x01AE	0x0E17      	MOVLW       hi_addr(_letter_J)
0x01B0	0x2002      	ADDWFC      R2, 0 
0x01B2	0x6EF7      	MOVWF       TBLPTRH 
0x01B4	0x0E00      	MOVLW       higher_addr(_letter_J)
0x01B6	0x6EF8      	MOVWF       TBLPTRU 
0x01B8	0x0E00      	MOVLW       0
0x01BA	0xBE02      	BTFSC       R2, 7 
0x01BC	0x0EFF      	MOVLW       255
0x01BE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x01C0	0x0009      	TBLRD*+
0x01C2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x01C6	0xF006EF22  	GOTO        L_printChar93
L_printChar92:
;pov++.c,478 :: 		else if(letter == 'K') PORTA = letter_K[n];
0x01CA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x01CC	0x0A4B      	XORLW       75
0x01CE	0xE111      	BNZ         L_printChar94
0x01D0	0x0EDB      	MOVLW       _letter_K
0x01D2	0x2401      	ADDWF       R1, 0 
0x01D4	0x6EF6      	MOVWF       4086 
0x01D6	0x0E16      	MOVLW       hi_addr(_letter_K)
0x01D8	0x2002      	ADDWFC      R2, 0 
0x01DA	0x6EF7      	MOVWF       TBLPTRH 
0x01DC	0x0E00      	MOVLW       higher_addr(_letter_K)
0x01DE	0x6EF8      	MOVWF       TBLPTRU 
0x01E0	0x0E00      	MOVLW       0
0x01E2	0xBE02      	BTFSC       R2, 7 
0x01E4	0x0EFF      	MOVLW       255
0x01E6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x01E8	0x0009      	TBLRD*+
0x01EA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x01EE	0xF006EF22  	GOTO        L_printChar95
L_printChar94:
;pov++.c,479 :: 		else if(letter == 'L') PORTA = letter_L[n];
0x01F2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x01F4	0x0A4C      	XORLW       76
0x01F6	0xE111      	BNZ         L_printChar96
0x01F8	0x0EA3      	MOVLW       _letter_L
0x01FA	0x2401      	ADDWF       R1, 0 
0x01FC	0x6EF6      	MOVWF       4086 
0x01FE	0x0E16      	MOVLW       hi_addr(_letter_L)
0x0200	0x2002      	ADDWFC      R2, 0 
0x0202	0x6EF7      	MOVWF       TBLPTRH 
0x0204	0x0E00      	MOVLW       higher_addr(_letter_L)
0x0206	0x6EF8      	MOVWF       TBLPTRU 
0x0208	0x0E00      	MOVLW       0
0x020A	0xBE02      	BTFSC       R2, 7 
0x020C	0x0EFF      	MOVLW       255
0x020E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0210	0x0009      	TBLRD*+
0x0212	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0216	0xF006EF22  	GOTO        L_printChar97
L_printChar96:
;pov++.c,480 :: 		else if(letter == 'M') PORTA = letter_M[n];
0x021A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x021C	0x0A4D      	XORLW       77
0x021E	0xE111      	BNZ         L_printChar98
0x0220	0x0EAB      	MOVLW       _letter_M
0x0222	0x2401      	ADDWF       R1, 0 
0x0224	0x6EF6      	MOVWF       4086 
0x0226	0x0E16      	MOVLW       hi_addr(_letter_M)
0x0228	0x2002      	ADDWFC      R2, 0 
0x022A	0x6EF7      	MOVWF       TBLPTRH 
0x022C	0x0E00      	MOVLW       higher_addr(_letter_M)
0x022E	0x6EF8      	MOVWF       TBLPTRU 
0x0230	0x0E00      	MOVLW       0
0x0232	0xBE02      	BTFSC       R2, 7 
0x0234	0x0EFF      	MOVLW       255
0x0236	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0238	0x0009      	TBLRD*+
0x023A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x023E	0xF006EF22  	GOTO        L_printChar99
L_printChar98:
;pov++.c,481 :: 		else if(letter == 'N') PORTA = letter_N[n];
0x0242	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0244	0x0A4E      	XORLW       78
0x0246	0xE111      	BNZ         L_printChar100
0x0248	0x0E9B      	MOVLW       _letter_N
0x024A	0x2401      	ADDWF       R1, 0 
0x024C	0x6EF6      	MOVWF       4086 
0x024E	0x0E16      	MOVLW       hi_addr(_letter_N)
0x0250	0x2002      	ADDWFC      R2, 0 
0x0252	0x6EF7      	MOVWF       TBLPTRH 
0x0254	0x0E00      	MOVLW       higher_addr(_letter_N)
0x0256	0x6EF8      	MOVWF       TBLPTRU 
0x0258	0x0E00      	MOVLW       0
0x025A	0xBE02      	BTFSC       R2, 7 
0x025C	0x0EFF      	MOVLW       255
0x025E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0260	0x0009      	TBLRD*+
0x0262	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0266	0xF006EF22  	GOTO        L_printChar101
L_printChar100:
;pov++.c,482 :: 		else if(letter == 'O') PORTA = letter_O[n];
0x026A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x026C	0x0A4F      	XORLW       79
0x026E	0xE111      	BNZ         L_printChar102
0x0270	0x0E8B      	MOVLW       _letter_O
0x0272	0x2401      	ADDWF       R1, 0 
0x0274	0x6EF6      	MOVWF       4086 
0x0276	0x0E16      	MOVLW       hi_addr(_letter_O)
0x0278	0x2002      	ADDWFC      R2, 0 
0x027A	0x6EF7      	MOVWF       TBLPTRH 
0x027C	0x0E00      	MOVLW       higher_addr(_letter_O)
0x027E	0x6EF8      	MOVWF       TBLPTRU 
0x0280	0x0E00      	MOVLW       0
0x0282	0xBE02      	BTFSC       R2, 7 
0x0284	0x0EFF      	MOVLW       255
0x0286	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0288	0x0009      	TBLRD*+
0x028A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x028E	0xF006EF22  	GOTO        L_printChar103
L_printChar102:
;pov++.c,483 :: 		else if(letter == 'P') PORTA = letter_P[n];
0x0292	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0294	0x0A50      	XORLW       80
0x0296	0xE111      	BNZ         L_printChar104
0x0298	0x0E93      	MOVLW       _letter_P
0x029A	0x2401      	ADDWF       R1, 0 
0x029C	0x6EF6      	MOVWF       4086 
0x029E	0x0E16      	MOVLW       hi_addr(_letter_P)
0x02A0	0x2002      	ADDWFC      R2, 0 
0x02A2	0x6EF7      	MOVWF       TBLPTRH 
0x02A4	0x0E00      	MOVLW       higher_addr(_letter_P)
0x02A6	0x6EF8      	MOVWF       TBLPTRU 
0x02A8	0x0E00      	MOVLW       0
0x02AA	0xBE02      	BTFSC       R2, 7 
0x02AC	0x0EFF      	MOVLW       255
0x02AE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x02B0	0x0009      	TBLRD*+
0x02B2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x02B6	0xF006EF22  	GOTO        L_printChar105
L_printChar104:
;pov++.c,484 :: 		else if(letter == 'Q') PORTA = letter_Q[n];
0x02BA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x02BC	0x0A51      	XORLW       81
0x02BE	0xE111      	BNZ         L_printChar106
0x02C0	0x0ECB      	MOVLW       _letter_Q
0x02C2	0x2401      	ADDWF       R1, 0 
0x02C4	0x6EF6      	MOVWF       4086 
0x02C6	0x0E16      	MOVLW       hi_addr(_letter_Q)
0x02C8	0x2002      	ADDWFC      R2, 0 
0x02CA	0x6EF7      	MOVWF       TBLPTRH 
0x02CC	0x0E00      	MOVLW       higher_addr(_letter_Q)
0x02CE	0x6EF8      	MOVWF       TBLPTRU 
0x02D0	0x0E00      	MOVLW       0
0x02D2	0xBE02      	BTFSC       R2, 7 
0x02D4	0x0EFF      	MOVLW       255
0x02D6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x02D8	0x0009      	TBLRD*+
0x02DA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x02DE	0xF006EF22  	GOTO        L_printChar107
L_printChar106:
;pov++.c,485 :: 		else if(letter == 'R') PORTA = letter_R[n];
0x02E2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x02E4	0x0A52      	XORLW       82
0x02E6	0xE111      	BNZ         L_printChar108
0x02E8	0x0ED3      	MOVLW       _letter_R
0x02EA	0x2401      	ADDWF       R1, 0 
0x02EC	0x6EF6      	MOVWF       4086 
0x02EE	0x0E16      	MOVLW       hi_addr(_letter_R)
0x02F0	0x2002      	ADDWFC      R2, 0 
0x02F2	0x6EF7      	MOVWF       TBLPTRH 
0x02F4	0x0E00      	MOVLW       higher_addr(_letter_R)
0x02F6	0x6EF8      	MOVWF       TBLPTRU 
0x02F8	0x0E00      	MOVLW       0
0x02FA	0xBE02      	BTFSC       R2, 7 
0x02FC	0x0EFF      	MOVLW       255
0x02FE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0300	0x0009      	TBLRD*+
0x0302	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0306	0xF006EF22  	GOTO        L_printChar109
L_printChar108:
;pov++.c,486 :: 		else if(letter == 'S') PORTA = letter_S[n];
0x030A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x030C	0x0A53      	XORLW       83
0x030E	0xE111      	BNZ         L_printChar110
0x0310	0x0EC3      	MOVLW       _letter_S
0x0312	0x2401      	ADDWF       R1, 0 
0x0314	0x6EF6      	MOVWF       4086 
0x0316	0x0E16      	MOVLW       hi_addr(_letter_S)
0x0318	0x2002      	ADDWFC      R2, 0 
0x031A	0x6EF7      	MOVWF       TBLPTRH 
0x031C	0x0E00      	MOVLW       higher_addr(_letter_S)
0x031E	0x6EF8      	MOVWF       TBLPTRU 
0x0320	0x0E00      	MOVLW       0
0x0322	0xBE02      	BTFSC       R2, 7 
0x0324	0x0EFF      	MOVLW       255
0x0326	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0328	0x0009      	TBLRD*+
0x032A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x032E	0xF006EF22  	GOTO        L_printChar111
L_printChar110:
;pov++.c,487 :: 		else if(letter == 'T') PORTA = letter_T[n];
0x0332	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0334	0x0A54      	XORLW       84
0x0336	0xE111      	BNZ         L_printChar112
0x0338	0x0EB3      	MOVLW       _letter_T
0x033A	0x2401      	ADDWF       R1, 0 
0x033C	0x6EF6      	MOVWF       4086 
0x033E	0x0E16      	MOVLW       hi_addr(_letter_T)
0x0340	0x2002      	ADDWFC      R2, 0 
0x0342	0x6EF7      	MOVWF       TBLPTRH 
0x0344	0x0E00      	MOVLW       higher_addr(_letter_T)
0x0346	0x6EF8      	MOVWF       TBLPTRU 
0x0348	0x0E00      	MOVLW       0
0x034A	0xBE02      	BTFSC       R2, 7 
0x034C	0x0EFF      	MOVLW       255
0x034E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0350	0x0009      	TBLRD*+
0x0352	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0356	0xF006EF22  	GOTO        L_printChar113
L_printChar112:
;pov++.c,488 :: 		else if(letter == 'U') PORTA = letter_U[n];
0x035A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x035C	0x0A55      	XORLW       85
0x035E	0xE111      	BNZ         L_printChar114
0x0360	0x0EBB      	MOVLW       _letter_U
0x0362	0x2401      	ADDWF       R1, 0 
0x0364	0x6EF6      	MOVWF       4086 
0x0366	0x0E16      	MOVLW       hi_addr(_letter_U)
0x0368	0x2002      	ADDWFC      R2, 0 
0x036A	0x6EF7      	MOVWF       TBLPTRH 
0x036C	0x0E00      	MOVLW       higher_addr(_letter_U)
0x036E	0x6EF8      	MOVWF       TBLPTRU 
0x0370	0x0E00      	MOVLW       0
0x0372	0xBE02      	BTFSC       R2, 7 
0x0374	0x0EFF      	MOVLW       255
0x0376	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0378	0x0009      	TBLRD*+
0x037A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x037E	0xF006EF22  	GOTO        L_printChar115
L_printChar114:
;pov++.c,489 :: 		else if(letter == 'V') PORTA = letter_V[n];
0x0382	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0384	0x0A56      	XORLW       86
0x0386	0xE111      	BNZ         L_printChar116
0x0388	0x0EA3      	MOVLW       _letter_V
0x038A	0x2401      	ADDWF       R1, 0 
0x038C	0x6EF6      	MOVWF       4086 
0x038E	0x0E17      	MOVLW       hi_addr(_letter_V)
0x0390	0x2002      	ADDWFC      R2, 0 
0x0392	0x6EF7      	MOVWF       TBLPTRH 
0x0394	0x0E00      	MOVLW       higher_addr(_letter_V)
0x0396	0x6EF8      	MOVWF       TBLPTRU 
0x0398	0x0E00      	MOVLW       0
0x039A	0xBE02      	BTFSC       R2, 7 
0x039C	0x0EFF      	MOVLW       255
0x039E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x03A0	0x0009      	TBLRD*+
0x03A2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x03A6	0xF006EF22  	GOTO        L_printChar117
L_printChar116:
;pov++.c,490 :: 		else if(letter == 'W') PORTA = letter_W[n];
0x03AA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x03AC	0x0A57      	XORLW       87
0x03AE	0xE111      	BNZ         L_printChar118
0x03B0	0x0EAB      	MOVLW       _letter_W
0x03B2	0x2401      	ADDWF       R1, 0 
0x03B4	0x6EF6      	MOVWF       4086 
0x03B6	0x0E17      	MOVLW       hi_addr(_letter_W)
0x03B8	0x2002      	ADDWFC      R2, 0 
0x03BA	0x6EF7      	MOVWF       TBLPTRH 
0x03BC	0x0E00      	MOVLW       higher_addr(_letter_W)
0x03BE	0x6EF8      	MOVWF       TBLPTRU 
0x03C0	0x0E00      	MOVLW       0
0x03C2	0xBE02      	BTFSC       R2, 7 
0x03C4	0x0EFF      	MOVLW       255
0x03C6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x03C8	0x0009      	TBLRD*+
0x03CA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x03CE	0xF006EF22  	GOTO        L_printChar119
L_printChar118:
;pov++.c,491 :: 		else if(letter == 'X') PORTA = letter_X[n];
0x03D2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x03D4	0x0A58      	XORLW       88
0x03D6	0xE111      	BNZ         L_printChar120
0x03D8	0x0E9B      	MOVLW       _letter_X
0x03DA	0x2401      	ADDWF       R1, 0 
0x03DC	0x6EF6      	MOVWF       4086 
0x03DE	0x0E17      	MOVLW       hi_addr(_letter_X)
0x03E0	0x2002      	ADDWFC      R2, 0 
0x03E2	0x6EF7      	MOVWF       TBLPTRH 
0x03E4	0x0E00      	MOVLW       higher_addr(_letter_X)
0x03E6	0x6EF8      	MOVWF       TBLPTRU 
0x03E8	0x0E00      	MOVLW       0
0x03EA	0xBE02      	BTFSC       R2, 7 
0x03EC	0x0EFF      	MOVLW       255
0x03EE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x03F0	0x0009      	TBLRD*+
0x03F2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x03F6	0xF006EF22  	GOTO        L_printChar121
L_printChar120:
;pov++.c,492 :: 		else if(letter == 'Y') PORTA = letter_Y[n];
0x03FA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x03FC	0x0A59      	XORLW       89
0x03FE	0xE111      	BNZ         L_printChar122
0x0400	0x0E8B      	MOVLW       _letter_Y
0x0402	0x2401      	ADDWF       R1, 0 
0x0404	0x6EF6      	MOVWF       4086 
0x0406	0x0E17      	MOVLW       hi_addr(_letter_Y)
0x0408	0x2002      	ADDWFC      R2, 0 
0x040A	0x6EF7      	MOVWF       TBLPTRH 
0x040C	0x0E00      	MOVLW       higher_addr(_letter_Y)
0x040E	0x6EF8      	MOVWF       TBLPTRU 
0x0410	0x0E00      	MOVLW       0
0x0412	0xBE02      	BTFSC       R2, 7 
0x0414	0x0EFF      	MOVLW       255
0x0416	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0418	0x0009      	TBLRD*+
0x041A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x041E	0xF006EF22  	GOTO        L_printChar123
L_printChar122:
;pov++.c,493 :: 		else if(letter == 'Z') PORTA = letter_Z[n];
0x0422	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0424	0x0A5A      	XORLW       90
0x0426	0xE110      	BNZ         L_printChar124
0x0428	0x0E93      	MOVLW       _letter_Z
0x042A	0x2401      	ADDWF       R1, 0 
0x042C	0x6EF6      	MOVWF       4086 
0x042E	0x0E17      	MOVLW       hi_addr(_letter_Z)
0x0430	0x2002      	ADDWFC      R2, 0 
0x0432	0x6EF7      	MOVWF       TBLPTRH 
0x0434	0x0E00      	MOVLW       higher_addr(_letter_Z)
0x0436	0x6EF8      	MOVWF       TBLPTRU 
0x0438	0x0E00      	MOVLW       0
0x043A	0xBE02      	BTFSC       R2, 7 
0x043C	0x0EFF      	MOVLW       255
0x043E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0440	0x0009      	TBLRD*+
0x0442	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0446	0xD3FE      	BRA         L_printChar125
L_printChar124:
;pov++.c,494 :: 		else if(letter == '0') PORTA = letter_0[n];
0x0448	0x501D      	MOVF        FARG_printChar_letter, 0 
0x044A	0x0A30      	XORLW       48
0x044C	0xE110      	BNZ         L_printChar126
0x044E	0x0ECB      	MOVLW       _letter_0
0x0450	0x2401      	ADDWF       R1, 0 
0x0452	0x6EF6      	MOVWF       4086 
0x0454	0x0E17      	MOVLW       hi_addr(_letter_0)
0x0456	0x2002      	ADDWFC      R2, 0 
0x0458	0x6EF7      	MOVWF       TBLPTRH 
0x045A	0x0E00      	MOVLW       higher_addr(_letter_0)
0x045C	0x6EF8      	MOVWF       TBLPTRU 
0x045E	0x0E00      	MOVLW       0
0x0460	0xBE02      	BTFSC       R2, 7 
0x0462	0x0EFF      	MOVLW       255
0x0464	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0466	0x0009      	TBLRD*+
0x0468	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x046C	0xD3EB      	BRA         L_printChar127
L_printChar126:
;pov++.c,495 :: 		else if(letter == '1') PORTA = letter_1[n];
0x046E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0470	0x0A31      	XORLW       49
0x0472	0xE110      	BNZ         L_printChar128
0x0474	0x0ED3      	MOVLW       _letter_1
0x0476	0x2401      	ADDWF       R1, 0 
0x0478	0x6EF6      	MOVWF       4086 
0x047A	0x0E17      	MOVLW       hi_addr(_letter_1)
0x047C	0x2002      	ADDWFC      R2, 0 
0x047E	0x6EF7      	MOVWF       TBLPTRH 
0x0480	0x0E00      	MOVLW       higher_addr(_letter_1)
0x0482	0x6EF8      	MOVWF       TBLPTRU 
0x0484	0x0E00      	MOVLW       0
0x0486	0xBE02      	BTFSC       R2, 7 
0x0488	0x0EFF      	MOVLW       255
0x048A	0x22F8      	ADDWFC      TBLPTRU, 1 
0x048C	0x0009      	TBLRD*+
0x048E	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0492	0xD3D8      	BRA         L_printChar129
L_printChar128:
;pov++.c,496 :: 		else if(letter == '2') PORTA = letter_2[n];
0x0494	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0496	0x0A32      	XORLW       50
0x0498	0xE110      	BNZ         L_printChar130
0x049A	0x0EC3      	MOVLW       _letter_2
0x049C	0x2401      	ADDWF       R1, 0 
0x049E	0x6EF6      	MOVWF       4086 
0x04A0	0x0E17      	MOVLW       hi_addr(_letter_2)
0x04A2	0x2002      	ADDWFC      R2, 0 
0x04A4	0x6EF7      	MOVWF       TBLPTRH 
0x04A6	0x0E00      	MOVLW       higher_addr(_letter_2)
0x04A8	0x6EF8      	MOVWF       TBLPTRU 
0x04AA	0x0E00      	MOVLW       0
0x04AC	0xBE02      	BTFSC       R2, 7 
0x04AE	0x0EFF      	MOVLW       255
0x04B0	0x22F8      	ADDWFC      TBLPTRU, 1 
0x04B2	0x0009      	TBLRD*+
0x04B4	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x04B8	0xD3C5      	BRA         L_printChar131
L_printChar130:
;pov++.c,497 :: 		else if(letter == '3') PORTA = letter_3[n];
0x04BA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x04BC	0x0A33      	XORLW       51
0x04BE	0xE110      	BNZ         L_printChar132
0x04C0	0x0EB3      	MOVLW       _letter_3
0x04C2	0x2401      	ADDWF       R1, 0 
0x04C4	0x6EF6      	MOVWF       4086 
0x04C6	0x0E17      	MOVLW       hi_addr(_letter_3)
0x04C8	0x2002      	ADDWFC      R2, 0 
0x04CA	0x6EF7      	MOVWF       TBLPTRH 
0x04CC	0x0E00      	MOVLW       higher_addr(_letter_3)
0x04CE	0x6EF8      	MOVWF       TBLPTRU 
0x04D0	0x0E00      	MOVLW       0
0x04D2	0xBE02      	BTFSC       R2, 7 
0x04D4	0x0EFF      	MOVLW       255
0x04D6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x04D8	0x0009      	TBLRD*+
0x04DA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x04DE	0xD3B2      	BRA         L_printChar133
L_printChar132:
;pov++.c,498 :: 		else if(letter == '4') PORTA = letter_4[n];
0x04E0	0x501D      	MOVF        FARG_printChar_letter, 0 
0x04E2	0x0A34      	XORLW       52
0x04E4	0xE110      	BNZ         L_printChar134
0x04E6	0x0EBB      	MOVLW       _letter_4
0x04E8	0x2401      	ADDWF       R1, 0 
0x04EA	0x6EF6      	MOVWF       4086 
0x04EC	0x0E17      	MOVLW       hi_addr(_letter_4)
0x04EE	0x2002      	ADDWFC      R2, 0 
0x04F0	0x6EF7      	MOVWF       TBLPTRH 
0x04F2	0x0E00      	MOVLW       higher_addr(_letter_4)
0x04F4	0x6EF8      	MOVWF       TBLPTRU 
0x04F6	0x0E00      	MOVLW       0
0x04F8	0xBE02      	BTFSC       R2, 7 
0x04FA	0x0EFF      	MOVLW       255
0x04FC	0x22F8      	ADDWFC      TBLPTRU, 1 
0x04FE	0x0009      	TBLRD*+
0x0500	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0504	0xD39F      	BRA         L_printChar135
L_printChar134:
;pov++.c,499 :: 		else if(letter == '5') PORTA = letter_5[n];
0x0506	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0508	0x0A35      	XORLW       53
0x050A	0xE110      	BNZ         L_printChar136
0x050C	0x0E83      	MOVLW       _letter_5
0x050E	0x2401      	ADDWF       R1, 0 
0x0510	0x6EF6      	MOVWF       4086 
0x0512	0x0E17      	MOVLW       hi_addr(_letter_5)
0x0514	0x2002      	ADDWFC      R2, 0 
0x0516	0x6EF7      	MOVWF       TBLPTRH 
0x0518	0x0E00      	MOVLW       higher_addr(_letter_5)
0x051A	0x6EF8      	MOVWF       TBLPTRU 
0x051C	0x0E00      	MOVLW       0
0x051E	0xBE02      	BTFSC       R2, 7 
0x0520	0x0EFF      	MOVLW       255
0x0522	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0524	0x0009      	TBLRD*+
0x0526	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x052A	0xD38C      	BRA         L_printChar137
L_printChar136:
;pov++.c,500 :: 		else if(letter == '6') PORTA = letter_6[n];
0x052C	0x501D      	MOVF        FARG_printChar_letter, 0 
0x052E	0x0A36      	XORLW       54
0x0530	0xE110      	BNZ         L_printChar138
0x0532	0x0E4B      	MOVLW       _letter_6
0x0534	0x2401      	ADDWF       R1, 0 
0x0536	0x6EF6      	MOVWF       4086 
0x0538	0x0E17      	MOVLW       hi_addr(_letter_6)
0x053A	0x2002      	ADDWFC      R2, 0 
0x053C	0x6EF7      	MOVWF       TBLPTRH 
0x053E	0x0E00      	MOVLW       higher_addr(_letter_6)
0x0540	0x6EF8      	MOVWF       TBLPTRU 
0x0542	0x0E00      	MOVLW       0
0x0544	0xBE02      	BTFSC       R2, 7 
0x0546	0x0EFF      	MOVLW       255
0x0548	0x22F8      	ADDWFC      TBLPTRU, 1 
0x054A	0x0009      	TBLRD*+
0x054C	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0550	0xD379      	BRA         L_printChar139
L_printChar138:
;pov++.c,501 :: 		else if(letter == '7') PORTA = letter_7[n];
0x0552	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0554	0x0A37      	XORLW       55
0x0556	0xE110      	BNZ         L_printChar140
0x0558	0x0E53      	MOVLW       _letter_7
0x055A	0x2401      	ADDWF       R1, 0 
0x055C	0x6EF6      	MOVWF       4086 
0x055E	0x0E17      	MOVLW       hi_addr(_letter_7)
0x0560	0x2002      	ADDWFC      R2, 0 
0x0562	0x6EF7      	MOVWF       TBLPTRH 
0x0564	0x0E00      	MOVLW       higher_addr(_letter_7)
0x0566	0x6EF8      	MOVWF       TBLPTRU 
0x0568	0x0E00      	MOVLW       0
0x056A	0xBE02      	BTFSC       R2, 7 
0x056C	0x0EFF      	MOVLW       255
0x056E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0570	0x0009      	TBLRD*+
0x0572	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0576	0xD366      	BRA         L_printChar141
L_printChar140:
;pov++.c,502 :: 		else if(letter == '8') PORTA = letter_8[n];
0x0578	0x501D      	MOVF        FARG_printChar_letter, 0 
0x057A	0x0A38      	XORLW       56
0x057C	0xE110      	BNZ         L_printChar142
0x057E	0x0E43      	MOVLW       _letter_8
0x0580	0x2401      	ADDWF       R1, 0 
0x0582	0x6EF6      	MOVWF       4086 
0x0584	0x0E17      	MOVLW       hi_addr(_letter_8)
0x0586	0x2002      	ADDWFC      R2, 0 
0x0588	0x6EF7      	MOVWF       TBLPTRH 
0x058A	0x0E00      	MOVLW       higher_addr(_letter_8)
0x058C	0x6EF8      	MOVWF       TBLPTRU 
0x058E	0x0E00      	MOVLW       0
0x0590	0xBE02      	BTFSC       R2, 7 
0x0592	0x0EFF      	MOVLW       255
0x0594	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0596	0x0009      	TBLRD*+
0x0598	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x059C	0xD353      	BRA         L_printChar143
L_printChar142:
;pov++.c,503 :: 		else if(letter == '9') PORTA = letter_9[n];
0x059E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x05A0	0x0A39      	XORLW       57
0x05A2	0xE110      	BNZ         L_printChar144
0x05A4	0x0E33      	MOVLW       _letter_9
0x05A6	0x2401      	ADDWF       R1, 0 
0x05A8	0x6EF6      	MOVWF       4086 
0x05AA	0x0E17      	MOVLW       hi_addr(_letter_9)
0x05AC	0x2002      	ADDWFC      R2, 0 
0x05AE	0x6EF7      	MOVWF       TBLPTRH 
0x05B0	0x0E00      	MOVLW       higher_addr(_letter_9)
0x05B2	0x6EF8      	MOVWF       TBLPTRU 
0x05B4	0x0E00      	MOVLW       0
0x05B6	0xBE02      	BTFSC       R2, 7 
0x05B8	0x0EFF      	MOVLW       255
0x05BA	0x22F8      	ADDWFC      TBLPTRU, 1 
0x05BC	0x0009      	TBLRD*+
0x05BE	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x05C2	0xD340      	BRA         L_printChar145
L_printChar144:
;pov++.c,504 :: 		else if(letter == '.') PORTA = letter_PERIOD[n];
0x05C4	0x501D      	MOVF        FARG_printChar_letter, 0 
0x05C6	0x0A2E      	XORLW       46
0x05C8	0xE110      	BNZ         L_printChar146
0x05CA	0x0E3B      	MOVLW       _letter_PERIOD
0x05CC	0x2401      	ADDWF       R1, 0 
0x05CE	0x6EF6      	MOVWF       4086 
0x05D0	0x0E17      	MOVLW       hi_addr(_letter_PERIOD)
0x05D2	0x2002      	ADDWFC      R2, 0 
0x05D4	0x6EF7      	MOVWF       TBLPTRH 
0x05D6	0x0E00      	MOVLW       higher_addr(_letter_PERIOD)
0x05D8	0x6EF8      	MOVWF       TBLPTRU 
0x05DA	0x0E00      	MOVLW       0
0x05DC	0xBE02      	BTFSC       R2, 7 
0x05DE	0x0EFF      	MOVLW       255
0x05E0	0x22F8      	ADDWFC      TBLPTRU, 1 
0x05E2	0x0009      	TBLRD*+
0x05E4	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x05E8	0xD32D      	BRA         L_printChar147
L_printChar146:
;pov++.c,505 :: 		else if(letter == ',') PORTA = letter_COMMA[n];
0x05EA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x05EC	0x0A2C      	XORLW       44
0x05EE	0xE110      	BNZ         L_printChar148
0x05F0	0x0E73      	MOVLW       _letter_COMMA
0x05F2	0x2401      	ADDWF       R1, 0 
0x05F4	0x6EF6      	MOVWF       4086 
0x05F6	0x0E17      	MOVLW       hi_addr(_letter_COMMA)
0x05F8	0x2002      	ADDWFC      R2, 0 
0x05FA	0x6EF7      	MOVWF       TBLPTRH 
0x05FC	0x0E00      	MOVLW       higher_addr(_letter_COMMA)
0x05FE	0x6EF8      	MOVWF       TBLPTRU 
0x0600	0x0E00      	MOVLW       0
0x0602	0xBE02      	BTFSC       R2, 7 
0x0604	0x0EFF      	MOVLW       255
0x0606	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0608	0x0009      	TBLRD*+
0x060A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x060E	0xD31A      	BRA         L_printChar149
L_printChar148:
;pov++.c,506 :: 		else if(letter == 34 ) PORTA = letter_QUOTE[n];  //standard straight quote
0x0610	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0612	0x0A22      	XORLW       34
0x0614	0xE110      	BNZ         L_printChar150
0x0616	0x0E7B      	MOVLW       _letter_QUOTE
0x0618	0x2401      	ADDWF       R1, 0 
0x061A	0x6EF6      	MOVWF       4086 
0x061C	0x0E17      	MOVLW       hi_addr(_letter_QUOTE)
0x061E	0x2002      	ADDWFC      R2, 0 
0x0620	0x6EF7      	MOVWF       TBLPTRH 
0x0622	0x0E00      	MOVLW       higher_addr(_letter_QUOTE)
0x0624	0x6EF8      	MOVWF       TBLPTRU 
0x0626	0x0E00      	MOVLW       0
0x0628	0xBE02      	BTFSC       R2, 7 
0x062A	0x0EFF      	MOVLW       255
0x062C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x062E	0x0009      	TBLRD*+
0x0630	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0634	0xD307      	BRA         L_printChar151
L_printChar150:
;pov++.c,507 :: 		else if(letter == 147 ) PORTA = letter_QUOTE[n]; //left quote
0x0636	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0638	0x0A93      	XORLW       147
0x063A	0xE110      	BNZ         L_printChar152
0x063C	0x0E7B      	MOVLW       _letter_QUOTE
0x063E	0x2401      	ADDWF       R1, 0 
0x0640	0x6EF6      	MOVWF       4086 
0x0642	0x0E17      	MOVLW       hi_addr(_letter_QUOTE)
0x0644	0x2002      	ADDWFC      R2, 0 
0x0646	0x6EF7      	MOVWF       TBLPTRH 
0x0648	0x0E00      	MOVLW       higher_addr(_letter_QUOTE)
0x064A	0x6EF8      	MOVWF       TBLPTRU 
0x064C	0x0E00      	MOVLW       0
0x064E	0xBE02      	BTFSC       R2, 7 
0x0650	0x0EFF      	MOVLW       255
0x0652	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0654	0x0009      	TBLRD*+
0x0656	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x065A	0xD2F4      	BRA         L_printChar153
L_printChar152:
;pov++.c,508 :: 		else if(letter == 148 ) PORTA = letter_QUOTE[n]; //right quote
0x065C	0x501D      	MOVF        FARG_printChar_letter, 0 
0x065E	0x0A94      	XORLW       148
0x0660	0xE110      	BNZ         L_printChar154
0x0662	0x0E7B      	MOVLW       _letter_QUOTE
0x0664	0x2401      	ADDWF       R1, 0 
0x0666	0x6EF6      	MOVWF       4086 
0x0668	0x0E17      	MOVLW       hi_addr(_letter_QUOTE)
0x066A	0x2002      	ADDWFC      R2, 0 
0x066C	0x6EF7      	MOVWF       TBLPTRH 
0x066E	0x0E00      	MOVLW       higher_addr(_letter_QUOTE)
0x0670	0x6EF8      	MOVWF       TBLPTRU 
0x0672	0x0E00      	MOVLW       0
0x0674	0xBE02      	BTFSC       R2, 7 
0x0676	0x0EFF      	MOVLW       255
0x0678	0x22F8      	ADDWFC      TBLPTRU, 1 
0x067A	0x0009      	TBLRD*+
0x067C	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0680	0xD2E1      	BRA         L_printChar155
L_printChar154:
;pov++.c,509 :: 		else if(letter == 39 ) PORTA = letter_SINGLE_QUOTE[n];  //straight single quote
0x0682	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0684	0x0A27      	XORLW       39
0x0686	0xE110      	BNZ         L_printChar156
0x0688	0x0E6B      	MOVLW       _letter_SINGLE_QUOTE
0x068A	0x2401      	ADDWF       R1, 0 
0x068C	0x6EF6      	MOVWF       4086 
0x068E	0x0E17      	MOVLW       hi_addr(_letter_SINGLE_QUOTE)
0x0690	0x2002      	ADDWFC      R2, 0 
0x0692	0x6EF7      	MOVWF       TBLPTRH 
0x0694	0x0E00      	MOVLW       higher_addr(_letter_SINGLE_QUOTE)
0x0696	0x6EF8      	MOVWF       TBLPTRU 
0x0698	0x0E00      	MOVLW       0
0x069A	0xBE02      	BTFSC       R2, 7 
0x069C	0x0EFF      	MOVLW       255
0x069E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x06A0	0x0009      	TBLRD*+
0x06A2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x06A6	0xD2CE      	BRA         L_printChar157
L_printChar156:
;pov++.c,510 :: 		else if(letter == 145 ) PORTA = letter_SINGLE_QUOTE[n]; //left single quote
0x06A8	0x501D      	MOVF        FARG_printChar_letter, 0 
0x06AA	0x0A91      	XORLW       145
0x06AC	0xE110      	BNZ         L_printChar158
0x06AE	0x0E6B      	MOVLW       _letter_SINGLE_QUOTE
0x06B0	0x2401      	ADDWF       R1, 0 
0x06B2	0x6EF6      	MOVWF       4086 
0x06B4	0x0E17      	MOVLW       hi_addr(_letter_SINGLE_QUOTE)
0x06B6	0x2002      	ADDWFC      R2, 0 
0x06B8	0x6EF7      	MOVWF       TBLPTRH 
0x06BA	0x0E00      	MOVLW       higher_addr(_letter_SINGLE_QUOTE)
0x06BC	0x6EF8      	MOVWF       TBLPTRU 
0x06BE	0x0E00      	MOVLW       0
0x06C0	0xBE02      	BTFSC       R2, 7 
0x06C2	0x0EFF      	MOVLW       255
0x06C4	0x22F8      	ADDWFC      TBLPTRU, 1 
0x06C6	0x0009      	TBLRD*+
0x06C8	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x06CC	0xD2BB      	BRA         L_printChar159
L_printChar158:
;pov++.c,511 :: 		else if(letter == 146 ) PORTA = letter_SINGLE_QUOTE[n]; //right single quote
0x06CE	0x501D      	MOVF        FARG_printChar_letter, 0 
0x06D0	0x0A92      	XORLW       146
0x06D2	0xE110      	BNZ         L_printChar160
0x06D4	0x0E6B      	MOVLW       _letter_SINGLE_QUOTE
0x06D6	0x2401      	ADDWF       R1, 0 
0x06D8	0x6EF6      	MOVWF       4086 
0x06DA	0x0E17      	MOVLW       hi_addr(_letter_SINGLE_QUOTE)
0x06DC	0x2002      	ADDWFC      R2, 0 
0x06DE	0x6EF7      	MOVWF       TBLPTRH 
0x06E0	0x0E00      	MOVLW       higher_addr(_letter_SINGLE_QUOTE)
0x06E2	0x6EF8      	MOVWF       TBLPTRU 
0x06E4	0x0E00      	MOVLW       0
0x06E6	0xBE02      	BTFSC       R2, 7 
0x06E8	0x0EFF      	MOVLW       255
0x06EA	0x22F8      	ADDWFC      TBLPTRU, 1 
0x06EC	0x0009      	TBLRD*+
0x06EE	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x06F2	0xD2A8      	BRA         L_printChar161
L_printChar160:
;pov++.c,512 :: 		else if(letter == '?') PORTA = letter_QUESTION[n];
0x06F4	0x501D      	MOVF        FARG_printChar_letter, 0 
0x06F6	0x0A3F      	XORLW       63
0x06F8	0xE110      	BNZ         L_printChar162
0x06FA	0x0E5B      	MOVLW       _letter_QUESTION
0x06FC	0x2401      	ADDWF       R1, 0 
0x06FE	0x6EF6      	MOVWF       4086 
0x0700	0x0E17      	MOVLW       hi_addr(_letter_QUESTION)
0x0702	0x2002      	ADDWFC      R2, 0 
0x0704	0x6EF7      	MOVWF       TBLPTRH 
0x0706	0x0E00      	MOVLW       higher_addr(_letter_QUESTION)
0x0708	0x6EF8      	MOVWF       TBLPTRU 
0x070A	0x0E00      	MOVLW       0
0x070C	0xBE02      	BTFSC       R2, 7 
0x070E	0x0EFF      	MOVLW       255
0x0710	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0712	0x0009      	TBLRD*+
0x0714	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0718	0xD295      	BRA         L_printChar163
L_printChar162:
;pov++.c,513 :: 		else if(letter == '!') PORTA = letter_EXCLAIM[n];
0x071A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x071C	0x0A21      	XORLW       33
0x071E	0xE110      	BNZ         L_printChar164
0x0720	0x0E63      	MOVLW       _letter_EXCLAIM
0x0722	0x2401      	ADDWF       R1, 0 
0x0724	0x6EF6      	MOVWF       4086 
0x0726	0x0E17      	MOVLW       hi_addr(_letter_EXCLAIM)
0x0728	0x2002      	ADDWFC      R2, 0 
0x072A	0x6EF7      	MOVWF       TBLPTRH 
0x072C	0x0E00      	MOVLW       higher_addr(_letter_EXCLAIM)
0x072E	0x6EF8      	MOVWF       TBLPTRU 
0x0730	0x0E00      	MOVLW       0
0x0732	0xBE02      	BTFSC       R2, 7 
0x0734	0x0EFF      	MOVLW       255
0x0736	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0738	0x0009      	TBLRD*+
0x073A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x073E	0xD282      	BRA         L_printChar165
L_printChar164:
;pov++.c,514 :: 		else if(letter == '@') PORTA = letter_AT[n];
0x0740	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0742	0x0A40      	XORLW       64
0x0744	0xE110      	BNZ         L_printChar166
0x0746	0x0ED3      	MOVLW       _letter_AT
0x0748	0x2401      	ADDWF       R1, 0 
0x074A	0x6EF6      	MOVWF       4086 
0x074C	0x0E15      	MOVLW       hi_addr(_letter_AT)
0x074E	0x2002      	ADDWFC      R2, 0 
0x0750	0x6EF7      	MOVWF       TBLPTRH 
0x0752	0x0E00      	MOVLW       higher_addr(_letter_AT)
0x0754	0x6EF8      	MOVWF       TBLPTRU 
0x0756	0x0E00      	MOVLW       0
0x0758	0xBE02      	BTFSC       R2, 7 
0x075A	0x0EFF      	MOVLW       255
0x075C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x075E	0x0009      	TBLRD*+
0x0760	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0764	0xD26F      	BRA         L_printChar167
L_printChar166:
;pov++.c,515 :: 		else if(letter == '#') PORTA = letter_NUM[n];
0x0766	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0768	0x0A23      	XORLW       35
0x076A	0xE110      	BNZ         L_printChar168
0x076C	0x0EDB      	MOVLW       _letter_NUM
0x076E	0x2401      	ADDWF       R1, 0 
0x0770	0x6EF6      	MOVWF       4086 
0x0772	0x0E15      	MOVLW       hi_addr(_letter_NUM)
0x0774	0x2002      	ADDWFC      R2, 0 
0x0776	0x6EF7      	MOVWF       TBLPTRH 
0x0778	0x0E00      	MOVLW       higher_addr(_letter_NUM)
0x077A	0x6EF8      	MOVWF       TBLPTRU 
0x077C	0x0E00      	MOVLW       0
0x077E	0xBE02      	BTFSC       R2, 7 
0x0780	0x0EFF      	MOVLW       255
0x0782	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0784	0x0009      	TBLRD*+
0x0786	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x078A	0xD25C      	BRA         L_printChar169
L_printChar168:
;pov++.c,516 :: 		else if(letter == '$') PORTA = letter_DOLLAR[n];
0x078C	0x501D      	MOVF        FARG_printChar_letter, 0 
0x078E	0x0A24      	XORLW       36
0x0790	0xE110      	BNZ         L_printChar170
0x0792	0x0EC3      	MOVLW       _letter_DOLLAR
0x0794	0x2401      	ADDWF       R1, 0 
0x0796	0x6EF6      	MOVWF       4086 
0x0798	0x0E15      	MOVLW       hi_addr(_letter_DOLLAR)
0x079A	0x2002      	ADDWFC      R2, 0 
0x079C	0x6EF7      	MOVWF       TBLPTRH 
0x079E	0x0E00      	MOVLW       higher_addr(_letter_DOLLAR)
0x07A0	0x6EF8      	MOVWF       TBLPTRU 
0x07A2	0x0E00      	MOVLW       0
0x07A4	0xBE02      	BTFSC       R2, 7 
0x07A6	0x0EFF      	MOVLW       255
0x07A8	0x22F8      	ADDWFC      TBLPTRU, 1 
0x07AA	0x0009      	TBLRD*+
0x07AC	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x07B0	0xD249      	BRA         L_printChar171
L_printChar170:
;pov++.c,517 :: 		else if(letter == '%') PORTA = letter_PERCENT[n];
0x07B2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x07B4	0x0A25      	XORLW       37
0x07B6	0xE110      	BNZ         L_printChar172
0x07B8	0x0ECB      	MOVLW       _letter_PERCENT
0x07BA	0x2401      	ADDWF       R1, 0 
0x07BC	0x6EF6      	MOVWF       4086 
0x07BE	0x0E15      	MOVLW       hi_addr(_letter_PERCENT)
0x07C0	0x2002      	ADDWFC      R2, 0 
0x07C2	0x6EF7      	MOVWF       TBLPTRH 
0x07C4	0x0E00      	MOVLW       higher_addr(_letter_PERCENT)
0x07C6	0x6EF8      	MOVWF       TBLPTRU 
0x07C8	0x0E00      	MOVLW       0
0x07CA	0xBE02      	BTFSC       R2, 7 
0x07CC	0x0EFF      	MOVLW       255
0x07CE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x07D0	0x0009      	TBLRD*+
0x07D2	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x07D6	0xD236      	BRA         L_printChar173
L_printChar172:
;pov++.c,518 :: 		else if(letter == '^') PORTA = letter_CARRAT[n];
0x07D8	0x501D      	MOVF        FARG_printChar_letter, 0 
0x07DA	0x0A5E      	XORLW       94
0x07DC	0xE110      	BNZ         L_printChar174
0x07DE	0x0EF3      	MOVLW       _letter_CARRAT
0x07E0	0x2401      	ADDWF       R1, 0 
0x07E2	0x6EF6      	MOVWF       4086 
0x07E4	0x0E15      	MOVLW       hi_addr(_letter_CARRAT)
0x07E6	0x2002      	ADDWFC      R2, 0 
0x07E8	0x6EF7      	MOVWF       TBLPTRH 
0x07EA	0x0E00      	MOVLW       higher_addr(_letter_CARRAT)
0x07EC	0x6EF8      	MOVWF       TBLPTRU 
0x07EE	0x0E00      	MOVLW       0
0x07F0	0xBE02      	BTFSC       R2, 7 
0x07F2	0x0EFF      	MOVLW       255
0x07F4	0x22F8      	ADDWFC      TBLPTRU, 1 
0x07F6	0x0009      	TBLRD*+
0x07F8	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x07FC	0xD223      	BRA         L_printChar175
L_printChar174:
;pov++.c,519 :: 		else if(letter == '&') PORTA = letter_AMPERSAND[n];
0x07FE	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0800	0x0A26      	XORLW       38
0x0802	0xE110      	BNZ         L_printChar176
0x0804	0x0EFB      	MOVLW       _letter_AMPERSAND
0x0806	0x2401      	ADDWF       R1, 0 
0x0808	0x6EF6      	MOVWF       4086 
0x080A	0x0E15      	MOVLW       hi_addr(_letter_AMPERSAND)
0x080C	0x2002      	ADDWFC      R2, 0 
0x080E	0x6EF7      	MOVWF       TBLPTRH 
0x0810	0x0E00      	MOVLW       higher_addr(_letter_AMPERSAND)
0x0812	0x6EF8      	MOVWF       TBLPTRU 
0x0814	0x0E00      	MOVLW       0
0x0816	0xBE02      	BTFSC       R2, 7 
0x0818	0x0EFF      	MOVLW       255
0x081A	0x22F8      	ADDWFC      TBLPTRU, 1 
0x081C	0x0009      	TBLRD*+
0x081E	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0822	0xD210      	BRA         L_printChar177
L_printChar176:
;pov++.c,520 :: 		else if(letter == '*') PORTA = letter_ASTERISK[n];
0x0824	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0826	0x0A2A      	XORLW       42
0x0828	0xE110      	BNZ         L_printChar178
0x082A	0x0EE3      	MOVLW       _letter_ASTERISK
0x082C	0x2401      	ADDWF       R1, 0 
0x082E	0x6EF6      	MOVWF       4086 
0x0830	0x0E15      	MOVLW       hi_addr(_letter_ASTERISK)
0x0832	0x2002      	ADDWFC      R2, 0 
0x0834	0x6EF7      	MOVWF       TBLPTRH 
0x0836	0x0E00      	MOVLW       higher_addr(_letter_ASTERISK)
0x0838	0x6EF8      	MOVWF       TBLPTRU 
0x083A	0x0E00      	MOVLW       0
0x083C	0xBE02      	BTFSC       R2, 7 
0x083E	0x0EFF      	MOVLW       255
0x0840	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0842	0x0009      	TBLRD*+
0x0844	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0848	0xD1FD      	BRA         L_printChar179
L_printChar178:
;pov++.c,521 :: 		else if(letter == '(') PORTA = letter_LEFT_PAREN[n];
0x084A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x084C	0x0A28      	XORLW       40
0x084E	0xE110      	BNZ         L_printChar180
0x0850	0x0EEB      	MOVLW       _letter_LEFT_PAREN
0x0852	0x2401      	ADDWF       R1, 0 
0x0854	0x6EF6      	MOVWF       4086 
0x0856	0x0E15      	MOVLW       hi_addr(_letter_LEFT_PAREN)
0x0858	0x2002      	ADDWFC      R2, 0 
0x085A	0x6EF7      	MOVWF       TBLPTRH 
0x085C	0x0E00      	MOVLW       higher_addr(_letter_LEFT_PAREN)
0x085E	0x6EF8      	MOVWF       TBLPTRU 
0x0860	0x0E00      	MOVLW       0
0x0862	0xBE02      	BTFSC       R2, 7 
0x0864	0x0EFF      	MOVLW       255
0x0866	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0868	0x0009      	TBLRD*+
0x086A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x086E	0xD1EA      	BRA         L_printChar181
L_printChar180:
;pov++.c,522 :: 		else if(letter == ')') PORTA = letter_RIGHT_PAREN[n];
0x0870	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0872	0x0A29      	XORLW       41
0x0874	0xE110      	BNZ         L_printChar182
0x0876	0x0E93      	MOVLW       _letter_RIGHT_PAREN
0x0878	0x2401      	ADDWF       R1, 0 
0x087A	0x6EF6      	MOVWF       4086 
0x087C	0x0E15      	MOVLW       hi_addr(_letter_RIGHT_PAREN)
0x087E	0x2002      	ADDWFC      R2, 0 
0x0880	0x6EF7      	MOVWF       TBLPTRH 
0x0882	0x0E00      	MOVLW       higher_addr(_letter_RIGHT_PAREN)
0x0884	0x6EF8      	MOVWF       TBLPTRU 
0x0886	0x0E00      	MOVLW       0
0x0888	0xBE02      	BTFSC       R2, 7 
0x088A	0x0EFF      	MOVLW       255
0x088C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x088E	0x0009      	TBLRD*+
0x0890	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0894	0xD1D7      	BRA         L_printChar183
L_printChar182:
;pov++.c,523 :: 		else if(letter == '-') PORTA = letter_DASH[n];
0x0896	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0898	0x0A2D      	XORLW       45
0x089A	0xE110      	BNZ         L_printChar184
0x089C	0x0E9B      	MOVLW       _letter_DASH
0x089E	0x2401      	ADDWF       R1, 0 
0x08A0	0x6EF6      	MOVWF       4086 
0x08A2	0x0E15      	MOVLW       hi_addr(_letter_DASH)
0x08A4	0x2002      	ADDWFC      R2, 0 
0x08A6	0x6EF7      	MOVWF       TBLPTRH 
0x08A8	0x0E00      	MOVLW       higher_addr(_letter_DASH)
0x08AA	0x6EF8      	MOVWF       TBLPTRU 
0x08AC	0x0E00      	MOVLW       0
0x08AE	0xBE02      	BTFSC       R2, 7 
0x08B0	0x0EFF      	MOVLW       255
0x08B2	0x22F8      	ADDWFC      TBLPTRU, 1 
0x08B4	0x0009      	TBLRD*+
0x08B6	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x08BA	0xD1C4      	BRA         L_printChar185
L_printChar184:
;pov++.c,524 :: 		else if(letter == '_') PORTA = letter_UNDERSCORE[n];
0x08BC	0x501D      	MOVF        FARG_printChar_letter, 0 
0x08BE	0x0A5F      	XORLW       95
0x08C0	0xE110      	BNZ         L_printChar186
0x08C2	0x0E83      	MOVLW       _letter_UNDERSCORE
0x08C4	0x2401      	ADDWF       R1, 0 
0x08C6	0x6EF6      	MOVWF       4086 
0x08C8	0x0E15      	MOVLW       hi_addr(_letter_UNDERSCORE)
0x08CA	0x2002      	ADDWFC      R2, 0 
0x08CC	0x6EF7      	MOVWF       TBLPTRH 
0x08CE	0x0E00      	MOVLW       higher_addr(_letter_UNDERSCORE)
0x08D0	0x6EF8      	MOVWF       TBLPTRU 
0x08D2	0x0E00      	MOVLW       0
0x08D4	0xBE02      	BTFSC       R2, 7 
0x08D6	0x0EFF      	MOVLW       255
0x08D8	0x22F8      	ADDWFC      TBLPTRU, 1 
0x08DA	0x0009      	TBLRD*+
0x08DC	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x08E0	0xD1B1      	BRA         L_printChar187
L_printChar186:
;pov++.c,525 :: 		else if(letter == '+') PORTA = letter_PLUS[n];
0x08E2	0x501D      	MOVF        FARG_printChar_letter, 0 
0x08E4	0x0A2B      	XORLW       43
0x08E6	0xE110      	BNZ         L_printChar188
0x08E8	0x0E8B      	MOVLW       _letter_PLUS
0x08EA	0x2401      	ADDWF       R1, 0 
0x08EC	0x6EF6      	MOVWF       4086 
0x08EE	0x0E15      	MOVLW       hi_addr(_letter_PLUS)
0x08F0	0x2002      	ADDWFC      R2, 0 
0x08F2	0x6EF7      	MOVWF       TBLPTRH 
0x08F4	0x0E00      	MOVLW       higher_addr(_letter_PLUS)
0x08F6	0x6EF8      	MOVWF       TBLPTRU 
0x08F8	0x0E00      	MOVLW       0
0x08FA	0xBE02      	BTFSC       R2, 7 
0x08FC	0x0EFF      	MOVLW       255
0x08FE	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0900	0x0009      	TBLRD*+
0x0902	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0906	0xD19E      	BRA         L_printChar189
L_printChar188:
;pov++.c,526 :: 		else if(letter == '=') PORTA = letter_EQUALS[n];
0x0908	0x501D      	MOVF        FARG_printChar_letter, 0 
0x090A	0x0A3D      	XORLW       61
0x090C	0xE110      	BNZ         L_printChar190
0x090E	0x0EB3      	MOVLW       _letter_EQUALS
0x0910	0x2401      	ADDWF       R1, 0 
0x0912	0x6EF6      	MOVWF       4086 
0x0914	0x0E15      	MOVLW       hi_addr(_letter_EQUALS)
0x0916	0x2002      	ADDWFC      R2, 0 
0x0918	0x6EF7      	MOVWF       TBLPTRH 
0x091A	0x0E00      	MOVLW       higher_addr(_letter_EQUALS)
0x091C	0x6EF8      	MOVWF       TBLPTRU 
0x091E	0x0E00      	MOVLW       0
0x0920	0xBE02      	BTFSC       R2, 7 
0x0922	0x0EFF      	MOVLW       255
0x0924	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0926	0x0009      	TBLRD*+
0x0928	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x092C	0xD18B      	BRA         L_printChar191
L_printChar190:
;pov++.c,527 :: 		else if(letter == '~') PORTA = letter_TILDE[n];
0x092E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0930	0x0A7E      	XORLW       126
0x0932	0xE110      	BNZ         L_printChar192
0x0934	0x0EBB      	MOVLW       _letter_TILDE
0x0936	0x2401      	ADDWF       R1, 0 
0x0938	0x6EF6      	MOVWF       4086 
0x093A	0x0E15      	MOVLW       hi_addr(_letter_TILDE)
0x093C	0x2002      	ADDWFC      R2, 0 
0x093E	0x6EF7      	MOVWF       TBLPTRH 
0x0940	0x0E00      	MOVLW       higher_addr(_letter_TILDE)
0x0942	0x6EF8      	MOVWF       TBLPTRU 
0x0944	0x0E00      	MOVLW       0
0x0946	0xBE02      	BTFSC       R2, 7 
0x0948	0x0EFF      	MOVLW       255
0x094A	0x22F8      	ADDWFC      TBLPTRU, 1 
0x094C	0x0009      	TBLRD*+
0x094E	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0952	0xD178      	BRA         L_printChar193
L_printChar192:
;pov++.c,528 :: 		else if(letter == '`') PORTA = letter_TICK[n];
0x0954	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0956	0x0A60      	XORLW       96
0x0958	0xE110      	BNZ         L_printChar194
0x095A	0x0EA3      	MOVLW       _letter_TICK
0x095C	0x2401      	ADDWF       R1, 0 
0x095E	0x6EF6      	MOVWF       4086 
0x0960	0x0E15      	MOVLW       hi_addr(_letter_TICK)
0x0962	0x2002      	ADDWFC      R2, 0 
0x0964	0x6EF7      	MOVWF       TBLPTRH 
0x0966	0x0E00      	MOVLW       higher_addr(_letter_TICK)
0x0968	0x6EF8      	MOVWF       TBLPTRU 
0x096A	0x0E00      	MOVLW       0
0x096C	0xBE02      	BTFSC       R2, 7 
0x096E	0x0EFF      	MOVLW       255
0x0970	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0972	0x0009      	TBLRD*+
0x0974	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0978	0xD165      	BRA         L_printChar195
L_printChar194:
;pov++.c,529 :: 		else if(letter == ':') PORTA = letter_COLON[n];
0x097A	0x501D      	MOVF        FARG_printChar_letter, 0 
0x097C	0x0A3A      	XORLW       58
0x097E	0xE110      	BNZ         L_printChar196
0x0980	0x0EAB      	MOVLW       _letter_COLON
0x0982	0x2401      	ADDWF       R1, 0 
0x0984	0x6EF6      	MOVWF       4086 
0x0986	0x0E15      	MOVLW       hi_addr(_letter_COLON)
0x0988	0x2002      	ADDWFC      R2, 0 
0x098A	0x6EF7      	MOVWF       TBLPTRH 
0x098C	0x0E00      	MOVLW       higher_addr(_letter_COLON)
0x098E	0x6EF8      	MOVWF       TBLPTRU 
0x0990	0x0E00      	MOVLW       0
0x0992	0xBE02      	BTFSC       R2, 7 
0x0994	0x0EFF      	MOVLW       255
0x0996	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0998	0x0009      	TBLRD*+
0x099A	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x099E	0xD152      	BRA         L_printChar197
L_printChar196:
;pov++.c,530 :: 		else if(letter == ';') PORTA = letter_SEMICOLON[n];
0x09A0	0x501D      	MOVF        FARG_printChar_letter, 0 
0x09A2	0x0A3B      	XORLW       59
0x09A4	0xE110      	BNZ         L_printChar198
0x09A6	0x0E03      	MOVLW       _letter_SEMICOLON
0x09A8	0x2401      	ADDWF       R1, 0 
0x09AA	0x6EF6      	MOVWF       4086 
0x09AC	0x0E16      	MOVLW       hi_addr(_letter_SEMICOLON)
0x09AE	0x2002      	ADDWFC      R2, 0 
0x09B0	0x6EF7      	MOVWF       TBLPTRH 
0x09B2	0x0E00      	MOVLW       higher_addr(_letter_SEMICOLON)
0x09B4	0x6EF8      	MOVWF       TBLPTRU 
0x09B6	0x0E00      	MOVLW       0
0x09B8	0xBE02      	BTFSC       R2, 7 
0x09BA	0x0EFF      	MOVLW       255
0x09BC	0x22F8      	ADDWFC      TBLPTRU, 1 
0x09BE	0x0009      	TBLRD*+
0x09C0	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x09C4	0xD13F      	BRA         L_printChar199
L_printChar198:
;pov++.c,531 :: 		else if(letter == 92 ) PORTA = letter_BACK_SLASH[n];
0x09C6	0x501D      	MOVF        FARG_printChar_letter, 0 
0x09C8	0x0A5C      	XORLW       92
0x09CA	0xE110      	BNZ         L_printChar200
0x09CC	0x0E5B      	MOVLW       _letter_BACK_SLASH
0x09CE	0x2401      	ADDWF       R1, 0 
0x09D0	0x6EF6      	MOVWF       4086 
0x09D2	0x0E16      	MOVLW       hi_addr(_letter_BACK_SLASH)
0x09D4	0x2002      	ADDWFC      R2, 0 
0x09D6	0x6EF7      	MOVWF       TBLPTRH 
0x09D8	0x0E00      	MOVLW       higher_addr(_letter_BACK_SLASH)
0x09DA	0x6EF8      	MOVWF       TBLPTRU 
0x09DC	0x0E00      	MOVLW       0
0x09DE	0xBE02      	BTFSC       R2, 7 
0x09E0	0x0EFF      	MOVLW       255
0x09E2	0x22F8      	ADDWFC      TBLPTRU, 1 
0x09E4	0x0009      	TBLRD*+
0x09E6	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x09EA	0xD12C      	BRA         L_printChar201
L_printChar200:
;pov++.c,532 :: 		else if(letter == '/') PORTA = letter_FORWARD_SLASH[n];
0x09EC	0x501D      	MOVF        FARG_printChar_letter, 0 
0x09EE	0x0A2F      	XORLW       47
0x09F0	0xE110      	BNZ         L_printChar202
0x09F2	0x0E63      	MOVLW       _letter_FORWARD_SLASH
0x09F4	0x2401      	ADDWF       R1, 0 
0x09F6	0x6EF6      	MOVWF       4086 
0x09F8	0x0E16      	MOVLW       hi_addr(_letter_FORWARD_SLASH)
0x09FA	0x2002      	ADDWFC      R2, 0 
0x09FC	0x6EF7      	MOVWF       TBLPTRH 
0x09FE	0x0E00      	MOVLW       higher_addr(_letter_FORWARD_SLASH)
0x0A00	0x6EF8      	MOVWF       TBLPTRU 
0x0A02	0x0E00      	MOVLW       0
0x0A04	0xBE02      	BTFSC       R2, 7 
0x0A06	0x0EFF      	MOVLW       255
0x0A08	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0A0A	0x0009      	TBLRD*+
0x0A0C	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0A10	0xD119      	BRA         L_printChar203
L_printChar202:
;pov++.c,533 :: 		else if(letter == '<') PORTA = letter_LEFT_CHEVRON[n];
0x0A12	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0A14	0x0A3C      	XORLW       60
0x0A16	0xE110      	BNZ         L_printChar204
0x0A18	0x0E4B      	MOVLW       _letter_LEFT_CHEVRON
0x0A1A	0x2401      	ADDWF       R1, 0 
0x0A1C	0x6EF6      	MOVWF       4086 
0x0A1E	0x0E16      	MOVLW       hi_addr(_letter_LEFT_CHEVRON)
0x0A20	0x2002      	ADDWFC      R2, 0 
0x0A22	0x6EF7      	MOVWF       TBLPTRH 
0x0A24	0x0E00      	MOVLW       higher_addr(_letter_LEFT_CHEVRON)
0x0A26	0x6EF8      	MOVWF       TBLPTRU 
0x0A28	0x0E00      	MOVLW       0
0x0A2A	0xBE02      	BTFSC       R2, 7 
0x0A2C	0x0EFF      	MOVLW       255
0x0A2E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0A30	0x0009      	TBLRD*+
0x0A32	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0A36	0xD106      	BRA         L_printChar205
L_printChar204:
;pov++.c,534 :: 		else if(letter == '>') PORTA = letter_RIGHT_CHEVRON[n];
0x0A38	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0A3A	0x0A3E      	XORLW       62
0x0A3C	0xE110      	BNZ         L_printChar206
0x0A3E	0x0E53      	MOVLW       _letter_RIGHT_CHEVRON
0x0A40	0x2401      	ADDWF       R1, 0 
0x0A42	0x6EF6      	MOVWF       4086 
0x0A44	0x0E16      	MOVLW       hi_addr(_letter_RIGHT_CHEVRON)
0x0A46	0x2002      	ADDWFC      R2, 0 
0x0A48	0x6EF7      	MOVWF       TBLPTRH 
0x0A4A	0x0E00      	MOVLW       higher_addr(_letter_RIGHT_CHEVRON)
0x0A4C	0x6EF8      	MOVWF       TBLPTRU 
0x0A4E	0x0E00      	MOVLW       0
0x0A50	0xBE02      	BTFSC       R2, 7 
0x0A52	0x0EFF      	MOVLW       255
0x0A54	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0A56	0x0009      	TBLRD*+
0x0A58	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0A5C	0xD0F3      	BRA         L_printChar207
L_printChar206:
;pov++.c,535 :: 		else if(letter ==  9 ) PORTA = letter_TAB[n];    // The tab character makes a solid block.
0x0A5E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0A60	0x0A09      	XORLW       9
0x0A62	0xE110      	BNZ         L_printChar208
0x0A64	0x0E7B      	MOVLW       _letter_TAB
0x0A66	0x2401      	ADDWF       R1, 0 
0x0A68	0x6EF6      	MOVWF       4086 
0x0A6A	0x0E16      	MOVLW       hi_addr(_letter_TAB)
0x0A6C	0x2002      	ADDWFC      R2, 0 
0x0A6E	0x6EF7      	MOVWF       TBLPTRH 
0x0A70	0x0E00      	MOVLW       higher_addr(_letter_TAB)
0x0A72	0x6EF8      	MOVWF       TBLPTRU 
0x0A74	0x0E00      	MOVLW       0
0x0A76	0xBE02      	BTFSC       R2, 7 
0x0A78	0x0EFF      	MOVLW       255
0x0A7A	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0A7C	0x0009      	TBLRD*+
0x0A7E	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0A82	0xD0E0      	BRA         L_printChar209
L_printChar208:
;pov++.c,536 :: 		else if(letter == '[' ) PORTA = letter_LEFT_BRACKET[n];
0x0A84	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0A86	0x0A5B      	XORLW       91
0x0A88	0xE110      	BNZ         L_printChar210
0x0A8A	0x0E83      	MOVLW       _letter_LEFT_BRACKET
0x0A8C	0x2401      	ADDWF       R1, 0 
0x0A8E	0x6EF6      	MOVWF       4086 
0x0A90	0x0E16      	MOVLW       hi_addr(_letter_LEFT_BRACKET)
0x0A92	0x2002      	ADDWFC      R2, 0 
0x0A94	0x6EF7      	MOVWF       TBLPTRH 
0x0A96	0x0E00      	MOVLW       higher_addr(_letter_LEFT_BRACKET)
0x0A98	0x6EF8      	MOVWF       TBLPTRU 
0x0A9A	0x0E00      	MOVLW       0
0x0A9C	0xBE02      	BTFSC       R2, 7 
0x0A9E	0x0EFF      	MOVLW       255
0x0AA0	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0AA2	0x0009      	TBLRD*+
0x0AA4	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0AA8	0xD0CD      	BRA         L_printChar211
L_printChar210:
;pov++.c,537 :: 		else if(letter == ']' ) PORTA = letter_RIGHT_BRACKET[n];
0x0AAA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0AAC	0x0A5D      	XORLW       93
0x0AAE	0xE110      	BNZ         L_printChar212
0x0AB0	0x0E6B      	MOVLW       _letter_RIGHT_BRACKET
0x0AB2	0x2401      	ADDWF       R1, 0 
0x0AB4	0x6EF6      	MOVWF       4086 
0x0AB6	0x0E16      	MOVLW       hi_addr(_letter_RIGHT_BRACKET)
0x0AB8	0x2002      	ADDWFC      R2, 0 
0x0ABA	0x6EF7      	MOVWF       TBLPTRH 
0x0ABC	0x0E00      	MOVLW       higher_addr(_letter_RIGHT_BRACKET)
0x0ABE	0x6EF8      	MOVWF       TBLPTRU 
0x0AC0	0x0E00      	MOVLW       0
0x0AC2	0xBE02      	BTFSC       R2, 7 
0x0AC4	0x0EFF      	MOVLW       255
0x0AC6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0AC8	0x0009      	TBLRD*+
0x0ACA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0ACE	0xD0BA      	BRA         L_printChar213
L_printChar212:
;pov++.c,538 :: 		else if(letter == ' ') PORTA = letter_SPC[n];
0x0AD0	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0AD2	0x0A20      	XORLW       32
0x0AD4	0xE110      	BNZ         L_printChar214
0x0AD6	0x0E73      	MOVLW       _letter_SPC
0x0AD8	0x2401      	ADDWF       R1, 0 
0x0ADA	0x6EF6      	MOVWF       4086 
0x0ADC	0x0E16      	MOVLW       hi_addr(_letter_SPC)
0x0ADE	0x2002      	ADDWFC      R2, 0 
0x0AE0	0x6EF7      	MOVWF       TBLPTRH 
0x0AE2	0x0E00      	MOVLW       higher_addr(_letter_SPC)
0x0AE4	0x6EF8      	MOVWF       TBLPTRU 
0x0AE6	0x0E00      	MOVLW       0
0x0AE8	0xBE02      	BTFSC       R2, 7 
0x0AEA	0x0EFF      	MOVLW       255
0x0AEC	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0AEE	0x0009      	TBLRD*+
0x0AF0	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0AF4	0xD0A7      	BRA         L_printChar215
L_printChar214:
;pov++.c,539 :: 		else if(letter == 169) PORTA = letter_SMILIE[n]; // SMILIE WAS PLACED IN THE COPYRIGHT ASCII CHARACTER
0x0AF6	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0AF8	0x0AA9      	XORLW       169
0x0AFA	0xE110      	BNZ         L_printChar216
0x0AFC	0x0E1B      	MOVLW       _letter_SMILIE
0x0AFE	0x2401      	ADDWF       R1, 0 
0x0B00	0x6EF6      	MOVWF       4086 
0x0B02	0x0E16      	MOVLW       hi_addr(_letter_SMILIE)
0x0B04	0x2002      	ADDWFC      R2, 0 
0x0B06	0x6EF7      	MOVWF       TBLPTRH 
0x0B08	0x0E00      	MOVLW       higher_addr(_letter_SMILIE)
0x0B0A	0x6EF8      	MOVWF       TBLPTRU 
0x0B0C	0x0E00      	MOVLW       0
0x0B0E	0xBE02      	BTFSC       R2, 7 
0x0B10	0x0EFF      	MOVLW       255
0x0B12	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0B14	0x0009      	TBLRD*+
0x0B16	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0B1A	0xD094      	BRA         L_printChar217
L_printChar216:
;pov++.c,540 :: 		else if(letter == 174) PORTA = letter_HEART[n];  // HEART WAS PLACED IN THE REGISTERED TRADEMARK ASCII SYMBOL
0x0B1C	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0B1E	0x0AAE      	XORLW       174
0x0B20	0xE110      	BNZ         L_printChar218
0x0B22	0x0E23      	MOVLW       _letter_HEART
0x0B24	0x2401      	ADDWF       R1, 0 
0x0B26	0x6EF6      	MOVWF       4086 
0x0B28	0x0E16      	MOVLW       hi_addr(_letter_HEART)
0x0B2A	0x2002      	ADDWFC      R2, 0 
0x0B2C	0x6EF7      	MOVWF       TBLPTRH 
0x0B2E	0x0E00      	MOVLW       higher_addr(_letter_HEART)
0x0B30	0x6EF8      	MOVWF       TBLPTRU 
0x0B32	0x0E00      	MOVLW       0
0x0B34	0xBE02      	BTFSC       R2, 7 
0x0B36	0x0EFF      	MOVLW       255
0x0B38	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0B3A	0x0009      	TBLRD*+
0x0B3C	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0B40	0xD081      	BRA         L_printChar219
L_printChar218:
;pov++.c,541 :: 		else if(letter == '\n') PORTA = letter_newline[n];
0x0B42	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0B44	0x0A0A      	XORLW       10
0x0B46	0xE110      	BNZ         L_printChar220
0x0B48	0x0E0B      	MOVLW       _letter_newline
0x0B4A	0x2401      	ADDWF       R1, 0 
0x0B4C	0x6EF6      	MOVWF       4086 
0x0B4E	0x0E16      	MOVLW       hi_addr(_letter_newline)
0x0B50	0x2002      	ADDWFC      R2, 0 
0x0B52	0x6EF7      	MOVWF       TBLPTRH 
0x0B54	0x0E00      	MOVLW       higher_addr(_letter_newline)
0x0B56	0x6EF8      	MOVWF       TBLPTRU 
0x0B58	0x0E00      	MOVLW       0
0x0B5A	0xBE02      	BTFSC       R2, 7 
0x0B5C	0x0EFF      	MOVLW       255
0x0B5E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0B60	0x0009      	TBLRD*+
0x0B62	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0B66	0xD06E      	BRA         L_printChar221
L_printChar220:
;pov++.c,542 :: 		else if(letter == 162) PORTA = letter_CENTS[n];  //cents symbol
0x0B68	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0B6A	0x0AA2      	XORLW       162
0x0B6C	0xE110      	BNZ         L_printChar222
0x0B6E	0x0E13      	MOVLW       _letter_CENTS
0x0B70	0x2401      	ADDWF       R1, 0 
0x0B72	0x6EF6      	MOVWF       4086 
0x0B74	0x0E16      	MOVLW       hi_addr(_letter_CENTS)
0x0B76	0x2002      	ADDWFC      R2, 0 
0x0B78	0x6EF7      	MOVWF       TBLPTRH 
0x0B7A	0x0E00      	MOVLW       higher_addr(_letter_CENTS)
0x0B7C	0x6EF8      	MOVWF       TBLPTRU 
0x0B7E	0x0E00      	MOVLW       0
0x0B80	0xBE02      	BTFSC       R2, 7 
0x0B82	0x0EFF      	MOVLW       255
0x0B84	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0B86	0x0009      	TBLRD*+
0x0B88	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0B8C	0xD05B      	BRA         L_printChar223
L_printChar222:
;pov++.c,543 :: 		else if(letter == 176) PORTA = letter_DEGREE[n]; //degree symbol
0x0B8E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0B90	0x0AB0      	XORLW       176
0x0B92	0xE110      	BNZ         L_printChar224
0x0B94	0x0E3B      	MOVLW       _letter_DEGREE
0x0B96	0x2401      	ADDWF       R1, 0 
0x0B98	0x6EF6      	MOVWF       4086 
0x0B9A	0x0E16      	MOVLW       hi_addr(_letter_DEGREE)
0x0B9C	0x2002      	ADDWFC      R2, 0 
0x0B9E	0x6EF7      	MOVWF       TBLPTRH 
0x0BA0	0x0E00      	MOVLW       higher_addr(_letter_DEGREE)
0x0BA2	0x6EF8      	MOVWF       TBLPTRU 
0x0BA4	0x0E00      	MOVLW       0
0x0BA6	0xBE02      	BTFSC       R2, 7 
0x0BA8	0x0EFF      	MOVLW       255
0x0BAA	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0BAC	0x0009      	TBLRD*+
0x0BAE	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0BB2	0xD048      	BRA         L_printChar225
L_printChar224:
;pov++.c,544 :: 		else if(letter == 128) PORTA = letter_EURO[n];   //euro symbol
0x0BB4	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0BB6	0x0A80      	XORLW       128
0x0BB8	0xE110      	BNZ         L_printChar226
0x0BBA	0x0E43      	MOVLW       _letter_EURO
0x0BBC	0x2401      	ADDWF       R1, 0 
0x0BBE	0x6EF6      	MOVWF       4086 
0x0BC0	0x0E16      	MOVLW       hi_addr(_letter_EURO)
0x0BC2	0x2002      	ADDWFC      R2, 0 
0x0BC4	0x6EF7      	MOVWF       TBLPTRH 
0x0BC6	0x0E00      	MOVLW       higher_addr(_letter_EURO)
0x0BC8	0x6EF8      	MOVWF       TBLPTRU 
0x0BCA	0x0E00      	MOVLW       0
0x0BCC	0xBE02      	BTFSC       R2, 7 
0x0BCE	0x0EFF      	MOVLW       255
0x0BD0	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0BD2	0x0009      	TBLRD*+
0x0BD4	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0BD8	0xD035      	BRA         L_printChar227
L_printChar226:
;pov++.c,545 :: 		else if(letter == 182) PORTA = letter_PILCROW[n];//pilcrow paragraph symbol
0x0BDA	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0BDC	0x0AB6      	XORLW       182
0x0BDE	0xE110      	BNZ         L_printChar228
0x0BE0	0x0E2B      	MOVLW       _letter_PILCROW
0x0BE2	0x2401      	ADDWF       R1, 0 
0x0BE4	0x6EF6      	MOVWF       4086 
0x0BE6	0x0E16      	MOVLW       hi_addr(_letter_PILCROW)
0x0BE8	0x2002      	ADDWFC      R2, 0 
0x0BEA	0x6EF7      	MOVWF       TBLPTRH 
0x0BEC	0x0E00      	MOVLW       higher_addr(_letter_PILCROW)
0x0BEE	0x6EF8      	MOVWF       TBLPTRU 
0x0BF0	0x0E00      	MOVLW       0
0x0BF2	0xBE02      	BTFSC       R2, 7 
0x0BF4	0x0EFF      	MOVLW       255
0x0BF6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0BF8	0x0009      	TBLRD*+
0x0BFA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0BFE	0xD022      	BRA         L_printChar229
L_printChar228:
;pov++.c,546 :: 		else if(letter == 149) PORTA = letter_BULLET[n]; //bullet character
0x0C00	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0C02	0x0A95      	XORLW       149
0x0C04	0xE110      	BNZ         L_printChar230
0x0C06	0x0E33      	MOVLW       _letter_BULLET
0x0C08	0x2401      	ADDWF       R1, 0 
0x0C0A	0x6EF6      	MOVWF       4086 
0x0C0C	0x0E16      	MOVLW       hi_addr(_letter_BULLET)
0x0C0E	0x2002      	ADDWFC      R2, 0 
0x0C10	0x6EF7      	MOVWF       TBLPTRH 
0x0C12	0x0E00      	MOVLW       higher_addr(_letter_BULLET)
0x0C14	0x6EF8      	MOVWF       TBLPTRU 
0x0C16	0x0E00      	MOVLW       0
0x0C18	0xBE02      	BTFSC       R2, 7 
0x0C1A	0x0EFF      	MOVLW       255
0x0C1C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0C1E	0x0009      	TBLRD*+
0x0C20	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0C24	0xD00F      	BRA         L_printChar231
L_printChar230:
;pov++.c,547 :: 		else PORTA = letter_newline[n];  //If an invalid ascii character is selected put an empty box.
0x0C26	0x0E0B      	MOVLW       _letter_newline
0x0C28	0x2401      	ADDWF       R1, 0 
0x0C2A	0x6EF6      	MOVWF       4086 
0x0C2C	0x0E16      	MOVLW       hi_addr(_letter_newline)
0x0C2E	0x2002      	ADDWFC      R2, 0 
0x0C30	0x6EF7      	MOVWF       TBLPTRH 
0x0C32	0x0E00      	MOVLW       higher_addr(_letter_newline)
0x0C34	0x6EF8      	MOVWF       TBLPTRU 
0x0C36	0x0E00      	MOVLW       0
0x0C38	0xBE02      	BTFSC       R2, 7 
0x0C3A	0x0EFF      	MOVLW       255
0x0C3C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0C3E	0x0009      	TBLRD*+
0x0C40	0xFF80CFF5  	MOVFF       TABLAT, PORTA
L_printChar231:
L_printChar229:
L_printChar227:
L_printChar225:
L_printChar223:
L_printChar221:
L_printChar219:
L_printChar217:
L_printChar215:
L_printChar213:
L_printChar211:
L_printChar209:
L_printChar207:
L_printChar205:
L_printChar203:
L_printChar201:
L_printChar199:
L_printChar197:
L_printChar195:
L_printChar193:
L_printChar191:
L_printChar189:
L_printChar187:
L_printChar185:
L_printChar183:
L_printChar181:
L_printChar179:
L_printChar177:
L_printChar175:
L_printChar173:
L_printChar171:
L_printChar169:
L_printChar167:
L_printChar165:
L_printChar163:
L_printChar161:
L_printChar159:
L_printChar157:
L_printChar155:
L_printChar153:
L_printChar151:
L_printChar149:
L_printChar147:
L_printChar145:
L_printChar143:
L_printChar141:
L_printChar139:
L_printChar137:
L_printChar135:
L_printChar133:
L_printChar131:
L_printChar129:
L_printChar127:
L_printChar125:
L_printChar123:
L_printChar121:
L_printChar119:
L_printChar117:
L_printChar115:
L_printChar113:
L_printChar111:
L_printChar109:
L_printChar107:
L_printChar105:
L_printChar103:
L_printChar101:
L_printChar99:
L_printChar97:
L_printChar95:
L_printChar93:
L_printChar91:
L_printChar89:
L_printChar87:
L_printChar85:
L_printChar83:
L_printChar81:
L_printChar79:
L_printChar77:
L_printChar75:
;pov++.c,550 :: 		if (letter == 169) Delay_ms(2);        //letter_SMILIE is printed double wide
0x0C44	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0C46	0x0AA9      	XORLW       169
0x0C48	0xE10A      	BNZ         L_printChar232
0x0C4A	0x0E15      	MOVLW       21
0x0C4C	0x6E0C      	MOVWF       R12, 0
0x0C4E	0x0EC6      	MOVLW       198
0x0C50	0x6E0D      	MOVWF       R13, 0
L_printChar233:
0x0C52	0x2E0D      	DECFSZ      R13, 1, 0
0x0C54	0xD7FE      	BRA         L_printChar233
0x0C56	0x2E0C      	DECFSZ      R12, 1, 0
0x0C58	0xD7FC      	BRA         L_printChar233
0x0C5A	0x0000      	NOP
0x0C5C	0xD016      	BRA         L_printChar234
L_printChar232:
;pov++.c,551 :: 		else if(letter == 174) Delay_ms(2);    // letter_HEART is printed double wide
0x0C5E	0x501D      	MOVF        FARG_printChar_letter, 0 
0x0C60	0x0AAE      	XORLW       174
0x0C62	0xE10A      	BNZ         L_printChar235
0x0C64	0x0E15      	MOVLW       21
0x0C66	0x6E0C      	MOVWF       R12, 0
0x0C68	0x0EC6      	MOVLW       198
0x0C6A	0x6E0D      	MOVWF       R13, 0
L_printChar236:
0x0C6C	0x2E0D      	DECFSZ      R13, 1, 0
0x0C6E	0xD7FE      	BRA         L_printChar236
0x0C70	0x2E0C      	DECFSZ      R12, 1, 0
0x0C72	0xD7FC      	BRA         L_printChar236
0x0C74	0x0000      	NOP
0x0C76	0xD009      	BRA         L_printChar237
L_printChar235:
;pov++.c,552 :: 		else Delay_ms(1); // 600 positions per rev @ 1 ms per pixel column - adjust this to compensate for rpm differences
0x0C78	0x0E0B      	MOVLW       11
0x0C7A	0x6E0C      	MOVWF       R12, 0
0x0C7C	0x0E62      	MOVLW       98
0x0C7E	0x6E0D      	MOVWF       R13, 0
L_printChar238:
0x0C80	0x2E0D      	DECFSZ      R13, 1, 0
0x0C82	0xD7FE      	BRA         L_printChar238
0x0C84	0x2E0C      	DECFSZ      R12, 1, 0
0x0C86	0xD7FC      	BRA         L_printChar238
0x0C88	0x0000      	NOP
L_printChar237:
L_printChar234:
;pov++.c,466 :: 		for(n=0;n<8;n++){
0x0C8A	0x4A01      	INFSNZ      R1, 1 
0x0C8C	0x2A02      	INCF        R2, 1 
;pov++.c,554 :: 		}
0x0C8E	0xF000EF12  	GOTO        L_printChar71
L_printChar72:
;pov++.c,556 :: 		PORTA = 0;
0x0C92	0x6A80      	CLRF        PORTA 
;pov++.c,557 :: 		Delay_ms(2);  // adjust this to compensate for rpm differences
0x0C94	0x0E15      	MOVLW       21
0x0C96	0x6E0C      	MOVWF       R12, 0
0x0C98	0x0EC6      	MOVLW       198
0x0C9A	0x6E0D      	MOVWF       R13, 0
L_printChar239:
0x0C9C	0x2E0D      	DECFSZ      R13, 1, 0
0x0C9E	0xD7FE      	BRA         L_printChar239
0x0CA0	0x2E0C      	DECFSZ      R12, 1, 0
0x0CA2	0xD7FC      	BRA         L_printChar239
0x0CA4	0x0000      	NOP
;pov++.c,559 :: 		} //end printChar function
0x0CA6	0x0012      	RETURN      0
; end of _printChar
_printIcon:
;pov++.c,573 :: 		void printIcon(char icon, int wide){
;pov++.c,577 :: 		for(n=0;n<18;n++){
0x0CA8	0x6A01      	CLRF        R1 
0x0CAA	0x6A02      	CLRF        R2 
L_printIcon240:
0x0CAC	0x0E80      	MOVLW       128
0x0CAE	0x1802      	XORWF       R2, 0 
0x0CB0	0x6E00      	MOVWF       R0 
0x0CB2	0x0E80      	MOVLW       128
0x0CB4	0x5C00      	SUBWF       R0, 0 
0x0CB6	0xE102      	BNZ         L__printIcon291
0x0CB8	0x0E12      	MOVLW       18
0x0CBA	0x5C01      	SUBWF       R1, 0 
L__printIcon291:
0x0CBC	0xB0D8      	BTFSC       STATUS, 0 
0x0CBE	0xD0D3      	BRA         L_printIcon241
;pov++.c,579 :: 		if(icon == space) PORTA = icon_SPC[n];
0x0CC0	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0CC2	0x0A00      	XORLW       0
0x0CC4	0xE110      	BNZ         L_printIcon243
0x0CC6	0x0EFE      	MOVLW       _icon_SPC
0x0CC8	0x2401      	ADDWF       R1, 0 
0x0CCA	0x6EF6      	MOVWF       4086 
0x0CCC	0x0E14      	MOVLW       hi_addr(_icon_SPC)
0x0CCE	0x2002      	ADDWFC      R2, 0 
0x0CD0	0x6EF7      	MOVWF       TBLPTRH 
0x0CD2	0x0E00      	MOVLW       higher_addr(_icon_SPC)
0x0CD4	0x6EF8      	MOVWF       TBLPTRU 
0x0CD6	0x0E00      	MOVLW       0
0x0CD8	0xBE02      	BTFSC       R2, 7 
0x0CDA	0x0EFF      	MOVLW       255
0x0CDC	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0CDE	0x0009      	TBLRD*+
0x0CE0	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0CE4	0xD0A7      	BRA         L_printIcon244
L_printIcon243:
;pov++.c,580 :: 		else if(icon == mountain) PORTA = icon_MOUNTAINS[n];
0x0CE6	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0CE8	0x0A01      	XORLW       1
0x0CEA	0xE110      	BNZ         L_printIcon245
0x0CEC	0x0E11      	MOVLW       _icon_MOUNTAINS
0x0CEE	0x2401      	ADDWF       R1, 0 
0x0CF0	0x6EF6      	MOVWF       4086 
0x0CF2	0x0E15      	MOVLW       hi_addr(_icon_MOUNTAINS)
0x0CF4	0x2002      	ADDWFC      R2, 0 
0x0CF6	0x6EF7      	MOVWF       TBLPTRH 
0x0CF8	0x0E00      	MOVLW       higher_addr(_icon_MOUNTAINS)
0x0CFA	0x6EF8      	MOVWF       TBLPTRU 
0x0CFC	0x0E00      	MOVLW       0
0x0CFE	0xBE02      	BTFSC       R2, 7 
0x0D00	0x0EFF      	MOVLW       255
0x0D02	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0D04	0x0009      	TBLRD*+
0x0D06	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0D0A	0xD094      	BRA         L_printIcon246
L_printIcon245:
;pov++.c,581 :: 		else if(icon == inverted_mountain) PORTA = icon_INVERTED_MOUNTAINS[n];
0x0D0C	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0D0E	0x0A02      	XORLW       2
0x0D10	0xE110      	BNZ         L_printIcon247
0x0D12	0x0ED8      	MOVLW       _icon_INVERTED_MOUNTAINS
0x0D14	0x2401      	ADDWF       R1, 0 
0x0D16	0x6EF6      	MOVWF       4086 
0x0D18	0x0E14      	MOVLW       hi_addr(_icon_INVERTED_MOUNTAINS)
0x0D1A	0x2002      	ADDWFC      R2, 0 
0x0D1C	0x6EF7      	MOVWF       TBLPTRH 
0x0D1E	0x0E00      	MOVLW       higher_addr(_icon_INVERTED_MOUNTAINS)
0x0D20	0x6EF8      	MOVWF       TBLPTRU 
0x0D22	0x0E00      	MOVLW       0
0x0D24	0xBE02      	BTFSC       R2, 7 
0x0D26	0x0EFF      	MOVLW       255
0x0D28	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0D2A	0x0009      	TBLRD*+
0x0D2C	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0D30	0xD081      	BRA         L_printIcon248
L_printIcon247:
;pov++.c,582 :: 		else if(icon == checker) PORTA = icon_CHECKER[n];
0x0D32	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0D34	0x0A03      	XORLW       3
0x0D36	0xE110      	BNZ         L_printIcon249
0x0D38	0x0EEB      	MOVLW       _icon_CHECKER
0x0D3A	0x2401      	ADDWF       R1, 0 
0x0D3C	0x6EF6      	MOVWF       4086 
0x0D3E	0x0E14      	MOVLW       hi_addr(_icon_CHECKER)
0x0D40	0x2002      	ADDWFC      R2, 0 
0x0D42	0x6EF7      	MOVWF       TBLPTRH 
0x0D44	0x0E00      	MOVLW       higher_addr(_icon_CHECKER)
0x0D46	0x6EF8      	MOVWF       TBLPTRU 
0x0D48	0x0E00      	MOVLW       0
0x0D4A	0xBE02      	BTFSC       R2, 7 
0x0D4C	0x0EFF      	MOVLW       255
0x0D4E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0D50	0x0009      	TBLRD*+
0x0D52	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0D56	0xD06E      	BRA         L_printIcon250
L_printIcon249:
;pov++.c,583 :: 		else if(icon == block) PORTA = icon_BLOCK[n];
0x0D58	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0D5A	0x0A04      	XORLW       4
0x0D5C	0xE110      	BNZ         L_printIcon251
0x0D5E	0x0E24      	MOVLW       _icon_BLOCK
0x0D60	0x2401      	ADDWF       R1, 0 
0x0D62	0x6EF6      	MOVWF       4086 
0x0D64	0x0E15      	MOVLW       hi_addr(_icon_BLOCK)
0x0D66	0x2002      	ADDWFC      R2, 0 
0x0D68	0x6EF7      	MOVWF       TBLPTRH 
0x0D6A	0x0E00      	MOVLW       higher_addr(_icon_BLOCK)
0x0D6C	0x6EF8      	MOVWF       TBLPTRU 
0x0D6E	0x0E00      	MOVLW       0
0x0D70	0xBE02      	BTFSC       R2, 7 
0x0D72	0x0EFF      	MOVLW       255
0x0D74	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0D76	0x0009      	TBLRD*+
0x0D78	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0D7C	0xD05B      	BRA         L_printIcon252
L_printIcon251:
;pov++.c,584 :: 		else if(icon == smiley) PORTA = icon_SMILEY[n];
0x0D7E	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0D80	0x0A05      	XORLW       5
0x0D82	0xE110      	BNZ         L_printIcon253
0x0D84	0x0E5D      	MOVLW       _icon_SMILEY
0x0D86	0x2401      	ADDWF       R1, 0 
0x0D88	0x6EF6      	MOVWF       4086 
0x0D8A	0x0E15      	MOVLW       hi_addr(_icon_SMILEY)
0x0D8C	0x2002      	ADDWFC      R2, 0 
0x0D8E	0x6EF7      	MOVWF       TBLPTRH 
0x0D90	0x0E00      	MOVLW       higher_addr(_icon_SMILEY)
0x0D92	0x6EF8      	MOVWF       TBLPTRU 
0x0D94	0x0E00      	MOVLW       0
0x0D96	0xBE02      	BTFSC       R2, 7 
0x0D98	0x0EFF      	MOVLW       255
0x0D9A	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0D9C	0x0009      	TBLRD*+
0x0D9E	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0DA2	0xD048      	BRA         L_printIcon254
L_printIcon253:
;pov++.c,585 :: 		else if(icon == greek) PORTA = icon_GREEK[n];
0x0DA4	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0DA6	0x0A06      	XORLW       6
0x0DA8	0xE110      	BNZ         L_printIcon255
0x0DAA	0x0E70      	MOVLW       _icon_GREEK
0x0DAC	0x2401      	ADDWF       R1, 0 
0x0DAE	0x6EF6      	MOVWF       4086 
0x0DB0	0x0E15      	MOVLW       hi_addr(_icon_GREEK)
0x0DB2	0x2002      	ADDWFC      R2, 0 
0x0DB4	0x6EF7      	MOVWF       TBLPTRH 
0x0DB6	0x0E00      	MOVLW       higher_addr(_icon_GREEK)
0x0DB8	0x6EF8      	MOVWF       TBLPTRU 
0x0DBA	0x0E00      	MOVLW       0
0x0DBC	0xBE02      	BTFSC       R2, 7 
0x0DBE	0x0EFF      	MOVLW       255
0x0DC0	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0DC2	0x0009      	TBLRD*+
0x0DC4	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0DC8	0xD035      	BRA         L_printIcon256
L_printIcon255:
;pov++.c,586 :: 		else if(icon == helical) PORTA = icon_HELICAL[n];
0x0DCA	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0DCC	0x0A07      	XORLW       7
0x0DCE	0xE110      	BNZ         L_printIcon257
0x0DD0	0x0E37      	MOVLW       _icon_HELICAL
0x0DD2	0x2401      	ADDWF       R1, 0 
0x0DD4	0x6EF6      	MOVWF       4086 
0x0DD6	0x0E15      	MOVLW       hi_addr(_icon_HELICAL)
0x0DD8	0x2002      	ADDWFC      R2, 0 
0x0DDA	0x6EF7      	MOVWF       TBLPTRH 
0x0DDC	0x0E00      	MOVLW       higher_addr(_icon_HELICAL)
0x0DDE	0x6EF8      	MOVWF       TBLPTRU 
0x0DE0	0x0E00      	MOVLW       0
0x0DE2	0xBE02      	BTFSC       R2, 7 
0x0DE4	0x0EFF      	MOVLW       255
0x0DE6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0DE8	0x0009      	TBLRD*+
0x0DEA	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0DEE	0xD022      	BRA         L_printIcon258
L_printIcon257:
;pov++.c,587 :: 		else if(icon == inverted_helical) PORTA = icon_INVERTED_HELICAL[n];
0x0DF0	0x501D      	MOVF        FARG_printIcon_icon, 0 
0x0DF2	0x0A08      	XORLW       8
0x0DF4	0xE110      	BNZ         L_printIcon259
0x0DF6	0x0E4A      	MOVLW       _icon_INVERTED_HELICAL
0x0DF8	0x2401      	ADDWF       R1, 0 
0x0DFA	0x6EF6      	MOVWF       4086 
0x0DFC	0x0E15      	MOVLW       hi_addr(_icon_INVERTED_HELICAL)
0x0DFE	0x2002      	ADDWFC      R2, 0 
0x0E00	0x6EF7      	MOVWF       TBLPTRH 
0x0E02	0x0E00      	MOVLW       higher_addr(_icon_INVERTED_HELICAL)
0x0E04	0x6EF8      	MOVWF       TBLPTRU 
0x0E06	0x0E00      	MOVLW       0
0x0E08	0xBE02      	BTFSC       R2, 7 
0x0E0A	0x0EFF      	MOVLW       255
0x0E0C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0E0E	0x0009      	TBLRD*+
0x0E10	0xFF80CFF5  	MOVFF       TABLAT, PORTA
0x0E14	0xD00F      	BRA         L_printIcon260
L_printIcon259:
;pov++.c,590 :: 		else PORTA = icon_SPC[n];
0x0E16	0x0EFE      	MOVLW       _icon_SPC
0x0E18	0x2401      	ADDWF       R1, 0 
0x0E1A	0x6EF6      	MOVWF       4086 
0x0E1C	0x0E14      	MOVLW       hi_addr(_icon_SPC)
0x0E1E	0x2002      	ADDWFC      R2, 0 
0x0E20	0x6EF7      	MOVWF       TBLPTRH 
0x0E22	0x0E00      	MOVLW       higher_addr(_icon_SPC)
0x0E24	0x6EF8      	MOVWF       TBLPTRU 
0x0E26	0x0E00      	MOVLW       0
0x0E28	0xBE02      	BTFSC       R2, 7 
0x0E2A	0x0EFF      	MOVLW       255
0x0E2C	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0E2E	0x0009      	TBLRD*+
0x0E30	0xFF80CFF5  	MOVFF       TABLAT, PORTA
L_printIcon260:
L_printIcon258:
L_printIcon256:
L_printIcon254:
L_printIcon252:
L_printIcon250:
L_printIcon248:
L_printIcon246:
L_printIcon244:
;pov++.c,593 :: 		if (wide) Delay_ms(2); // adjust this to compensate for rpm differences
0x0E34	0x501E      	MOVF        FARG_printIcon_wide, 0 
0x0E36	0x101F      	IORWF       FARG_printIcon_wide+1, 0 
0x0E38	0xE00A      	BZ          L_printIcon261
0x0E3A	0x0E15      	MOVLW       21
0x0E3C	0x6E0C      	MOVWF       R12, 0
0x0E3E	0x0EC6      	MOVLW       198
0x0E40	0x6E0D      	MOVWF       R13, 0
L_printIcon262:
0x0E42	0x2E0D      	DECFSZ      R13, 1, 0
0x0E44	0xD7FE      	BRA         L_printIcon262
0x0E46	0x2E0C      	DECFSZ      R12, 1, 0
0x0E48	0xD7FC      	BRA         L_printIcon262
0x0E4A	0x0000      	NOP
0x0E4C	0xD009      	BRA         L_printIcon263
L_printIcon261:
;pov++.c,594 :: 		else Delay_ms(1); // 600 positions per rev @ 1 ms per pixel column - adjust this to compensate for rpm differences
0x0E4E	0x0E0B      	MOVLW       11
0x0E50	0x6E0C      	MOVWF       R12, 0
0x0E52	0x0E62      	MOVLW       98
0x0E54	0x6E0D      	MOVWF       R13, 0
L_printIcon264:
0x0E56	0x2E0D      	DECFSZ      R13, 1, 0
0x0E58	0xD7FE      	BRA         L_printIcon264
0x0E5A	0x2E0C      	DECFSZ      R12, 1, 0
0x0E5C	0xD7FC      	BRA         L_printIcon264
0x0E5E	0x0000      	NOP
L_printIcon263:
;pov++.c,577 :: 		for(n=0;n<18;n++){
0x0E60	0x4A01      	INFSNZ      R1, 1 
0x0E62	0x2A02      	INCF        R2, 1 
;pov++.c,596 :: 		}
0x0E64	0xD723      	BRA         L_printIcon240
L_printIcon241:
;pov++.c,599 :: 		if (wide) digit_counter += 4;
0x0E66	0x501E      	MOVF        FARG_printIcon_wide, 0 
0x0E68	0x101F      	IORWF       FARG_printIcon_wide+1, 0 
0x0E6A	0xE005      	BZ          L_printIcon265
0x0E6C	0x0E04      	MOVLW       4
0x0E6E	0x2615      	ADDWF       _digit_counter, 1 
0x0E70	0x0E00      	MOVLW       0
0x0E72	0x2216      	ADDWFC      _digit_counter+1, 1 
0x0E74	0xD004      	BRA         L_printIcon266
L_printIcon265:
;pov++.c,600 :: 		else digit_counter += 2;
0x0E76	0x0E02      	MOVLW       2
0x0E78	0x2615      	ADDWF       _digit_counter, 1 
0x0E7A	0x0E00      	MOVLW       0
0x0E7C	0x2216      	ADDWFC      _digit_counter+1, 1 
L_printIcon266:
;pov++.c,602 :: 		} //end printIcon function
0x0E7E	0x0012      	RETURN      0
; end of _printIcon
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0E80	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0E82	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0E86	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0E88	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0E8A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0E8C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x0E8E	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0E90	0x6A15      	CLRF        _digit_counter 
0x0E92	0x6A16      	CLRF        22 
;pov++.c,158 :: 		void main() {
;pov++.c,167 :: 		OSCCON.IDLEN = 0 ;
0x0E94	0x9ED3      	BCF         OSCCON, 7 
;pov++.c,174 :: 		OSCCON.IRCF2 = 1 ;
0x0E96	0x8CD3      	BSF         OSCCON, 6 
;pov++.c,175 :: 		OSCCON.IRCF1 = 1 ;
0x0E98	0x8AD3      	BSF         OSCCON, 5 
;pov++.c,176 :: 		OSCCON.IRCF0 = 1 ;
0x0E9A	0x88D3      	BSF         OSCCON, 4 
;pov++.c,187 :: 		OSCTUNE.PLLEN = 1 ;
0x0E9C	0x8C9B      	BSF         OSCTUNE, 6 
;pov++.c,193 :: 		TRISA = 0x00;                                  // set direction to be output
0x0E9E	0x6A92      	CLRF        TRISA 
;pov++.c,194 :: 		PORTA = 0x00;                                  // turn OFF the PORTD leds
0x0EA0	0x6A80      	CLRF        PORTA 
;pov++.c,196 :: 		while (1) {
L_main0:
;pov++.c,202 :: 		for (repeat=0;repeat<24;repeat++){
0x0EA2	0x6A1B      	CLRF        main_repeat_L0 
0x0EA4	0x6A1C      	CLRF        main_repeat_L0+1 
L_main2:
0x0EA6	0x0E80      	MOVLW       128
0x0EA8	0x181C      	XORWF       main_repeat_L0+1, 0 
0x0EAA	0x6E00      	MOVWF       R0 
0x0EAC	0x0E80      	MOVLW       128
0x0EAE	0x5C00      	SUBWF       R0, 0 
0x0EB0	0xE102      	BNZ         L__main267
0x0EB2	0x0E18      	MOVLW       24
0x0EB4	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main267:
0x0EB6	0xE250      	BC          L_main3
;pov++.c,205 :: 		for(n=0;n<6;n++){
0x0EB8	0x6A17      	CLRF        main_n_L0 
0x0EBA	0x6A18      	CLRF        main_n_L0+1 
L_main5:
0x0EBC	0x0E80      	MOVLW       128
0x0EBE	0x1818      	XORWF       main_n_L0+1, 0 
0x0EC0	0x6E00      	MOVWF       R0 
0x0EC2	0x0E80      	MOVLW       128
0x0EC4	0x5C00      	SUBWF       R0, 0 
0x0EC6	0xE102      	BNZ         L__main268
0x0EC8	0x0E06      	MOVLW       6
0x0ECA	0x5C17      	SUBWF       main_n_L0, 0 
L__main268:
0x0ECC	0xE242      	BC          L_main6
;pov++.c,207 :: 		digit_counter = 0;
0x0ECE	0x6A15      	CLRF        _digit_counter 
0x0ED0	0x6A16      	CLRF        _digit_counter+1 
;pov++.c,208 :: 		printChar('A');
0x0ED2	0x0E41      	MOVLW       65
0x0ED4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0ED6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,209 :: 		printChar('N');
0x0EDA	0x0E4E      	MOVLW       78
0x0EDC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0EDE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,210 :: 		printChar('D');
0x0EE2	0x0E44      	MOVLW       68
0x0EE4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0EE6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,211 :: 		printChar('R');
0x0EEA	0x0E52      	MOVLW       82
0x0EEC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0EEE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,212 :: 		printChar('E');
0x0EF2	0x0E45      	MOVLW       69
0x0EF4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0EF6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,213 :: 		printChar('W');
0x0EFA	0x0E57      	MOVLW       87
0x0EFC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0EFE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,214 :: 		printChar(' ');
0x0F02	0x0E20      	MOVLW       32
0x0F04	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0F06	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,215 :: 		printChar('\t');
0x0F0A	0x0E09      	MOVLW       9
0x0F0C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0F0E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,218 :: 		if(digit_counter<10)  {
0x0F12	0x0E80      	MOVLW       128
0x0F14	0x1816      	XORWF       _digit_counter+1, 0 
0x0F16	0x6E00      	MOVWF       R0 
0x0F18	0x0E80      	MOVLW       128
0x0F1A	0x5C00      	SUBWF       R0, 0 
0x0F1C	0xE102      	BNZ         L__main269
0x0F1E	0x0E0A      	MOVLW       10
0x0F20	0x5C15      	SUBWF       _digit_counter, 0 
L__main269:
0x0F22	0xE214      	BC          L_main8
;pov++.c,219 :: 		for (i=digit_counter;i<10;i++){
0x0F24	0xF019C015  	MOVFF       _digit_counter, main_i_L0
0x0F28	0xF01AC016  	MOVFF       _digit_counter+1, main_i_L0+1
L_main9:
0x0F2C	0x0E80      	MOVLW       128
0x0F2E	0x181A      	XORWF       main_i_L0+1, 0 
0x0F30	0x6E00      	MOVWF       R0 
0x0F32	0x0E80      	MOVLW       128
0x0F34	0x5C00      	SUBWF       R0, 0 
0x0F36	0xE102      	BNZ         L__main270
0x0F38	0x0E0A      	MOVLW       10
0x0F3A	0x5C19      	SUBWF       main_i_L0, 0 
L__main270:
0x0F3C	0xE207      	BC          L_main10
;pov++.c,220 :: 		printChar(' ');
0x0F3E	0x0E20      	MOVLW       32
0x0F40	0x6E1D      	MOVWF       FARG_printChar_letter 
0x0F42	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,219 :: 		for (i=digit_counter;i<10;i++){
0x0F46	0x4A19      	INFSNZ      main_i_L0, 1 
0x0F48	0x2A1A      	INCF        main_i_L0+1, 1 
;pov++.c,221 :: 		}
0x0F4A	0xD7F0      	BRA         L_main9
L_main10:
;pov++.c,222 :: 		}//end if digit counter
L_main8:
;pov++.c,205 :: 		for(n=0;n<6;n++){
0x0F4C	0x4A17      	INFSNZ      main_n_L0, 1 
0x0F4E	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,223 :: 		}//end for n
0x0F50	0xD7B5      	BRA         L_main5
L_main6:
;pov++.c,202 :: 		for (repeat=0;repeat<24;repeat++){
0x0F52	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x0F54	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,224 :: 		} //end for repeat
0x0F56	0xD7A7      	BRA         L_main2
L_main3:
;pov++.c,231 :: 		for (repeat=0;repeat<20;repeat++){
0x0F58	0x6A1B      	CLRF        main_repeat_L0 
0x0F5A	0x6A1C      	CLRF        main_repeat_L0+1 
L_main12:
0x0F5C	0x0E80      	MOVLW       128
0x0F5E	0x181C      	XORWF       main_repeat_L0+1, 0 
0x0F60	0x6E00      	MOVWF       R0 
0x0F62	0x0E80      	MOVLW       128
0x0F64	0x5C00      	SUBWF       R0, 0 
0x0F66	0xE102      	BNZ         L__main271
0x0F68	0x0E14      	MOVLW       20
0x0F6A	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main271:
0x0F6C	0xE218      	BC          L_main13
;pov++.c,233 :: 		for(n=0;n<15;n++){
0x0F6E	0x6A17      	CLRF        main_n_L0 
0x0F70	0x6A18      	CLRF        main_n_L0+1 
L_main15:
0x0F72	0x0E80      	MOVLW       128
0x0F74	0x1818      	XORWF       main_n_L0+1, 0 
0x0F76	0x6E00      	MOVWF       R0 
0x0F78	0x0E80      	MOVLW       128
0x0F7A	0x5C00      	SUBWF       R0, 0 
0x0F7C	0xE102      	BNZ         L__main272
0x0F7E	0x0E0F      	MOVLW       15
0x0F80	0x5C17      	SUBWF       main_n_L0, 0 
L__main272:
0x0F82	0xE20A      	BC          L_main16
;pov++.c,234 :: 		printIcon(inverted_helical, wide); //print helical pattern double wide
0x0F84	0x0E08      	MOVLW       8
0x0F86	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x0F88	0x0E01      	MOVLW       1
0x0F8A	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x0F8C	0x0E00      	MOVLW       0
0x0F8E	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x0F90	0xDE8B      	RCALL       _printIcon
;pov++.c,233 :: 		for(n=0;n<15;n++){
0x0F92	0x4A17      	INFSNZ      main_n_L0, 1 
0x0F94	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,235 :: 		}
0x0F96	0xD7ED      	BRA         L_main15
L_main16:
;pov++.c,231 :: 		for (repeat=0;repeat<20;repeat++){
0x0F98	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x0F9A	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,237 :: 		}   //end repeat
0x0F9C	0xD7DF      	BRA         L_main12
L_main13:
;pov++.c,242 :: 		for (repeat=0;repeat<20;repeat++){
0x0F9E	0x6A1B      	CLRF        main_repeat_L0 
0x0FA0	0x6A1C      	CLRF        main_repeat_L0+1 
L_main18:
0x0FA2	0x0E80      	MOVLW       128
0x0FA4	0x181C      	XORWF       main_repeat_L0+1, 0 
0x0FA6	0x6E00      	MOVWF       R0 
0x0FA8	0x0E80      	MOVLW       128
0x0FAA	0x5C00      	SUBWF       R0, 0 
0x0FAC	0xE102      	BNZ         L__main273
0x0FAE	0x0E14      	MOVLW       20
0x0FB0	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main273:
0x0FB2	0xE218      	BC          L_main19
;pov++.c,244 :: 		for(n=0;n<15;n++){
0x0FB4	0x6A17      	CLRF        main_n_L0 
0x0FB6	0x6A18      	CLRF        main_n_L0+1 
L_main21:
0x0FB8	0x0E80      	MOVLW       128
0x0FBA	0x1818      	XORWF       main_n_L0+1, 0 
0x0FBC	0x6E00      	MOVWF       R0 
0x0FBE	0x0E80      	MOVLW       128
0x0FC0	0x5C00      	SUBWF       R0, 0 
0x0FC2	0xE102      	BNZ         L__main274
0x0FC4	0x0E0F      	MOVLW       15
0x0FC6	0x5C17      	SUBWF       main_n_L0, 0 
L__main274:
0x0FC8	0xE20A      	BC          L_main22
;pov++.c,245 :: 		printIcon(helical, wide); //print helical pattern double wide
0x0FCA	0x0E07      	MOVLW       7
0x0FCC	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x0FCE	0x0E01      	MOVLW       1
0x0FD0	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x0FD2	0x0E00      	MOVLW       0
0x0FD4	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x0FD6	0xDE68      	RCALL       _printIcon
;pov++.c,244 :: 		for(n=0;n<15;n++){
0x0FD8	0x4A17      	INFSNZ      main_n_L0, 1 
0x0FDA	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,246 :: 		}
0x0FDC	0xD7ED      	BRA         L_main21
L_main22:
;pov++.c,242 :: 		for (repeat=0;repeat<20;repeat++){
0x0FDE	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x0FE0	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,248 :: 		}   //end repeat
0x0FE2	0xD7DF      	BRA         L_main18
L_main19:
;pov++.c,252 :: 		for (repeat=0;repeat<30;repeat++){
0x0FE4	0x6A1B      	CLRF        main_repeat_L0 
0x0FE6	0x6A1C      	CLRF        main_repeat_L0+1 
L_main24:
0x0FE8	0x0E80      	MOVLW       128
0x0FEA	0x181C      	XORWF       main_repeat_L0+1, 0 
0x0FEC	0x6E00      	MOVWF       R0 
0x0FEE	0x0E80      	MOVLW       128
0x0FF0	0x5C00      	SUBWF       R0, 0 
0x0FF2	0xE102      	BNZ         L__main275
0x0FF4	0x0E1E      	MOVLW       30
0x0FF6	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main275:
0x0FF8	0xE218      	BC          L_main25
;pov++.c,254 :: 		for(n=0;n<15;n++){
0x0FFA	0x6A17      	CLRF        main_n_L0 
0x0FFC	0x6A18      	CLRF        main_n_L0+1 
L_main27:
0x0FFE	0x0E80      	MOVLW       128
0x1000	0x1818      	XORWF       main_n_L0+1, 0 
0x1002	0x6E00      	MOVWF       R0 
0x1004	0x0E80      	MOVLW       128
0x1006	0x5C00      	SUBWF       R0, 0 
0x1008	0xE102      	BNZ         L__main276
0x100A	0x0E0F      	MOVLW       15
0x100C	0x5C17      	SUBWF       main_n_L0, 0 
L__main276:
0x100E	0xE20A      	BC          L_main28
;pov++.c,255 :: 		printIcon(greek, wide); //print greek pattern double wide
0x1010	0x0E06      	MOVLW       6
0x1012	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x1014	0x0E01      	MOVLW       1
0x1016	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x1018	0x0E00      	MOVLW       0
0x101A	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x101C	0xDE45      	RCALL       _printIcon
;pov++.c,254 :: 		for(n=0;n<15;n++){
0x101E	0x4A17      	INFSNZ      main_n_L0, 1 
0x1020	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,256 :: 		}
0x1022	0xD7ED      	BRA         L_main27
L_main28:
;pov++.c,252 :: 		for (repeat=0;repeat<30;repeat++){
0x1024	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x1026	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,258 :: 		}   //end repeat
0x1028	0xD7DF      	BRA         L_main24
L_main25:
;pov++.c,263 :: 		for (repeat=0;repeat<20;repeat++){
0x102A	0x6A1B      	CLRF        main_repeat_L0 
0x102C	0x6A1C      	CLRF        main_repeat_L0+1 
L_main30:
0x102E	0x0E80      	MOVLW       128
0x1030	0x181C      	XORWF       main_repeat_L0+1, 0 
0x1032	0x6E00      	MOVWF       R0 
0x1034	0x0E80      	MOVLW       128
0x1036	0x5C00      	SUBWF       R0, 0 
0x1038	0xE102      	BNZ         L__main277
0x103A	0x0E14      	MOVLW       20
0x103C	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main277:
0x103E	0xE22D      	BC          L_main31
;pov++.c,265 :: 		for(n=0;n<15;n++){
0x1040	0x6A17      	CLRF        main_n_L0 
0x1042	0x6A18      	CLRF        main_n_L0+1 
L_main33:
0x1044	0x0E80      	MOVLW       128
0x1046	0x1818      	XORWF       main_n_L0+1, 0 
0x1048	0x6E00      	MOVWF       R0 
0x104A	0x0E80      	MOVLW       128
0x104C	0x5C00      	SUBWF       R0, 0 
0x104E	0xE102      	BNZ         L__main278
0x1050	0x0E0F      	MOVLW       15
0x1052	0x5C17      	SUBWF       main_n_L0, 0 
L__main278:
0x1054	0xE20A      	BC          L_main34
;pov++.c,266 :: 		printIcon(mountain, wide); //print mountain_ICON shape double wide
0x1056	0x0E01      	MOVLW       1
0x1058	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x105A	0x0E01      	MOVLW       1
0x105C	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x105E	0x0E00      	MOVLW       0
0x1060	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x1062	0xDE22      	RCALL       _printIcon
;pov++.c,265 :: 		for(n=0;n<15;n++){
0x1064	0x4A17      	INFSNZ      main_n_L0, 1 
0x1066	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,267 :: 		}
0x1068	0xD7ED      	BRA         L_main33
L_main34:
;pov++.c,269 :: 		for(n=0;n<15;n++){
0x106A	0x6A17      	CLRF        main_n_L0 
0x106C	0x6A18      	CLRF        main_n_L0+1 
L_main36:
0x106E	0x0E80      	MOVLW       128
0x1070	0x1818      	XORWF       main_n_L0+1, 0 
0x1072	0x6E00      	MOVWF       R0 
0x1074	0x0E80      	MOVLW       128
0x1076	0x5C00      	SUBWF       R0, 0 
0x1078	0xE102      	BNZ         L__main279
0x107A	0x0E0F      	MOVLW       15
0x107C	0x5C17      	SUBWF       main_n_L0, 0 
L__main279:
0x107E	0xE20A      	BC          L_main37
;pov++.c,270 :: 		printIcon(inverted_mountain, wide); //print inverted mountain shape double wide
0x1080	0x0E02      	MOVLW       2
0x1082	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x1084	0x0E01      	MOVLW       1
0x1086	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x1088	0x0E00      	MOVLW       0
0x108A	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x108C	0xDE0D      	RCALL       _printIcon
;pov++.c,269 :: 		for(n=0;n<15;n++){
0x108E	0x4A17      	INFSNZ      main_n_L0, 1 
0x1090	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,271 :: 		}
0x1092	0xD7ED      	BRA         L_main36
L_main37:
;pov++.c,263 :: 		for (repeat=0;repeat<20;repeat++){
0x1094	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x1096	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,274 :: 		}   //end repeat
0x1098	0xD7CA      	BRA         L_main30
L_main31:
;pov++.c,280 :: 		for (repeat=0;repeat<20;repeat++){
0x109A	0x6A1B      	CLRF        main_repeat_L0 
0x109C	0x6A1C      	CLRF        main_repeat_L0+1 
L_main39:
0x109E	0x0E80      	MOVLW       128
0x10A0	0x181C      	XORWF       main_repeat_L0+1, 0 
0x10A2	0x6E00      	MOVWF       R0 
0x10A4	0x0E80      	MOVLW       128
0x10A6	0x5C00      	SUBWF       R0, 0 
0x10A8	0xE102      	BNZ         L__main280
0x10AA	0x0E14      	MOVLW       20
0x10AC	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main280:
0x10AE	0xE218      	BC          L_main40
;pov++.c,281 :: 		for(n=0;n<15;n++){
0x10B0	0x6A17      	CLRF        main_n_L0 
0x10B2	0x6A18      	CLRF        main_n_L0+1 
L_main42:
0x10B4	0x0E80      	MOVLW       128
0x10B6	0x1818      	XORWF       main_n_L0+1, 0 
0x10B8	0x6E00      	MOVWF       R0 
0x10BA	0x0E80      	MOVLW       128
0x10BC	0x5C00      	SUBWF       R0, 0 
0x10BE	0xE102      	BNZ         L__main281
0x10C0	0x0E0F      	MOVLW       15
0x10C2	0x5C17      	SUBWF       main_n_L0, 0 
L__main281:
0x10C4	0xE20A      	BC          L_main43
;pov++.c,283 :: 		printIcon(checker, wide); //print checker shape double wide
0x10C6	0x0E03      	MOVLW       3
0x10C8	0x6E1D      	MOVWF       FARG_printIcon_icon 
0x10CA	0x0E01      	MOVLW       1
0x10CC	0x6E1E      	MOVWF       FARG_printIcon_wide 
0x10CE	0x0E00      	MOVLW       0
0x10D0	0x6E1F      	MOVWF       FARG_printIcon_wide+1 
0x10D2	0xDDEA      	RCALL       _printIcon
;pov++.c,281 :: 		for(n=0;n<15;n++){
0x10D4	0x4A17      	INFSNZ      main_n_L0, 1 
0x10D6	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,285 :: 		}
0x10D8	0xD7ED      	BRA         L_main42
L_main43:
;pov++.c,280 :: 		for (repeat=0;repeat<20;repeat++){
0x10DA	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x10DC	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,286 :: 		}   //end repeat
0x10DE	0xD7DF      	BRA         L_main39
L_main40:
;pov++.c,296 :: 		for (repeat=0;repeat<24;repeat++){
0x10E0	0x6A1B      	CLRF        main_repeat_L0 
0x10E2	0x6A1C      	CLRF        main_repeat_L0+1 
L_main45:
0x10E4	0x0E80      	MOVLW       128
0x10E6	0x181C      	XORWF       main_repeat_L0+1, 0 
0x10E8	0x6E00      	MOVWF       R0 
0x10EA	0x0E80      	MOVLW       128
0x10EC	0x5C00      	SUBWF       R0, 0 
0x10EE	0xE102      	BNZ         L__main282
0x10F0	0x0E18      	MOVLW       24
0x10F2	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main282:
0x10F4	0xE24F      	BC          L_main46
;pov++.c,299 :: 		for(n=0;n<2;n++){
0x10F6	0x6A17      	CLRF        main_n_L0 
0x10F8	0x6A18      	CLRF        main_n_L0+1 
L_main48:
0x10FA	0x0E80      	MOVLW       128
0x10FC	0x1818      	XORWF       main_n_L0+1, 0 
0x10FE	0x6E00      	MOVWF       R0 
0x1100	0x0E80      	MOVLW       128
0x1102	0x5C00      	SUBWF       R0, 0 
0x1104	0xE102      	BNZ         L__main283
0x1106	0x0E02      	MOVLW       2
0x1108	0x5C17      	SUBWF       main_n_L0, 0 
L__main283:
0x110A	0xE241      	BC          L_main49
;pov++.c,301 :: 		digit_counter = 0;
0x110C	0x6A15      	CLRF        _digit_counter 
0x110E	0x6A16      	CLRF        _digit_counter+1 
;pov++.c,302 :: 		printChar(' ');
0x1110	0x0E20      	MOVLW       32
0x1112	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1114	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,303 :: 		printChar(' ');
0x1118	0x0E20      	MOVLW       32
0x111A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x111C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,304 :: 		printChar('P');
0x1120	0x0E50      	MOVLW       80
0x1122	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1124	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,305 :: 		printChar('O');
0x1128	0x0E4F      	MOVLW       79
0x112A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x112C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,306 :: 		printChar('V');
0x1130	0x0E56      	MOVLW       86
0x1132	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1134	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,307 :: 		printChar(' ');
0x1138	0x0E20      	MOVLW       32
0x113A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x113C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,308 :: 		printChar('D');
0x1140	0x0E44      	MOVLW       68
0x1142	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1144	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,309 :: 		printChar('I');
0x1148	0x0E49      	MOVLW       73
0x114A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x114C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,310 :: 		printChar('S');
0x1150	0x0E53      	MOVLW       83
0x1152	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1154	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,311 :: 		printChar('P');
0x1158	0x0E50      	MOVLW       80
0x115A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x115C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,312 :: 		printChar('L');
0x1160	0x0E4C      	MOVLW       76
0x1162	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1164	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,313 :: 		printChar('A');
0x1168	0x0E41      	MOVLW       65
0x116A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x116C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,314 :: 		printChar('Y');
0x1170	0x0E59      	MOVLW       89
0x1172	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1174	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,315 :: 		printChar(' ');
0x1178	0x0E20      	MOVLW       32
0x117A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x117C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,316 :: 		printChar('\t');
0x1180	0x0E09      	MOVLW       9
0x1182	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1184	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,299 :: 		for(n=0;n<2;n++){
0x1188	0x4A17      	INFSNZ      main_n_L0, 1 
0x118A	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,317 :: 		}//end for n
0x118C	0xD7B6      	BRA         L_main48
L_main49:
;pov++.c,296 :: 		for (repeat=0;repeat<24;repeat++){
0x118E	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x1190	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,318 :: 		} //end for repeat
0x1192	0xD7A8      	BRA         L_main45
L_main46:
;pov++.c,324 :: 		for (repeat=0;repeat<24;repeat++){
0x1194	0x6A1B      	CLRF        main_repeat_L0 
0x1196	0x6A1C      	CLRF        main_repeat_L0+1 
L_main51:
0x1198	0x0E80      	MOVLW       128
0x119A	0x181C      	XORWF       main_repeat_L0+1, 0 
0x119C	0x6E00      	MOVWF       R0 
0x119E	0x0E80      	MOVLW       128
0x11A0	0x5C00      	SUBWF       R0, 0 
0x11A2	0xE102      	BNZ         L__main284
0x11A4	0x0E18      	MOVLW       24
0x11A6	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main284:
0x11A8	0xB0D8      	BTFSC       STATUS, 0 
0x11AA	0xD081      	BRA         L_main52
;pov++.c,328 :: 		digit_counter = 0;
0x11AC	0x6A15      	CLRF        _digit_counter 
0x11AE	0x6A16      	CLRF        _digit_counter+1 
;pov++.c,329 :: 		printChar(' ');
0x11B0	0x0E20      	MOVLW       32
0x11B2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11B4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,330 :: 		printChar(' ');
0x11B8	0x0E20      	MOVLW       32
0x11BA	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11BC	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,331 :: 		printChar('A');
0x11C0	0x0E41      	MOVLW       65
0x11C2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11C4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,332 :: 		printChar('B');
0x11C8	0x0E42      	MOVLW       66
0x11CA	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11CC	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,333 :: 		printChar('C');
0x11D0	0x0E43      	MOVLW       67
0x11D2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11D4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,334 :: 		printChar('D');
0x11D8	0x0E44      	MOVLW       68
0x11DA	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11DC	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,335 :: 		printChar('E');
0x11E0	0x0E45      	MOVLW       69
0x11E2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11E4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,336 :: 		printChar('F');
0x11E8	0x0E46      	MOVLW       70
0x11EA	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11EC	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,337 :: 		printChar('G');
0x11F0	0x0E47      	MOVLW       71
0x11F2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11F4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,338 :: 		printChar('H');
0x11F8	0x0E48      	MOVLW       72
0x11FA	0x6E1D      	MOVWF       FARG_printChar_letter 
0x11FC	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,339 :: 		printChar('I');
0x1200	0x0E49      	MOVLW       73
0x1202	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1204	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,340 :: 		printChar('J');
0x1208	0x0E4A      	MOVLW       74
0x120A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x120C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,341 :: 		printChar('K');
0x1210	0x0E4B      	MOVLW       75
0x1212	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1214	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,342 :: 		printChar('L');
0x1218	0x0E4C      	MOVLW       76
0x121A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x121C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,343 :: 		printChar('M');
0x1220	0x0E4D      	MOVLW       77
0x1222	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1224	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,344 :: 		printChar('N');
0x1228	0x0E4E      	MOVLW       78
0x122A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x122C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,345 :: 		printChar('O');
0x1230	0x0E4F      	MOVLW       79
0x1232	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1234	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,346 :: 		printChar('P');
0x1238	0x0E50      	MOVLW       80
0x123A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x123C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,347 :: 		printChar('Q');
0x1240	0x0E51      	MOVLW       81
0x1242	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1244	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,348 :: 		printChar('R');
0x1248	0x0E52      	MOVLW       82
0x124A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x124C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,349 :: 		printChar('S');
0x1250	0x0E53      	MOVLW       83
0x1252	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1254	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,350 :: 		printChar('T');
0x1258	0x0E54      	MOVLW       84
0x125A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x125C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,351 :: 		printChar('U');
0x1260	0x0E55      	MOVLW       85
0x1262	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1264	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,352 :: 		printChar('V');
0x1268	0x0E56      	MOVLW       86
0x126A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x126C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,353 :: 		printChar('W');
0x1270	0x0E57      	MOVLW       87
0x1272	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1274	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,354 :: 		printChar('X');
0x1278	0x0E58      	MOVLW       88
0x127A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x127C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,355 :: 		printChar('Y');
0x1280	0x0E59      	MOVLW       89
0x1282	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1284	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,356 :: 		printChar('Z');
0x1288	0x0E5A      	MOVLW       90
0x128A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x128C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,357 :: 		printChar(' ');
0x1290	0x0E20      	MOVLW       32
0x1292	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1294	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,358 :: 		printChar('\t');
0x1298	0x0E09      	MOVLW       9
0x129A	0x6E1D      	MOVWF       FARG_printChar_letter 
0x129C	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,359 :: 		printChar(' ');
0x12A0	0x0E20      	MOVLW       32
0x12A2	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12A4	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,324 :: 		for (repeat=0;repeat<24;repeat++){
0x12A8	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x12AA	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,360 :: 		} //end for repeat
0x12AC	0xD775      	BRA         L_main51
L_main52:
;pov++.c,371 :: 		for (repeat=0;repeat<24;repeat++){
0x12AE	0x6A1B      	CLRF        main_repeat_L0 
0x12B0	0x6A1C      	CLRF        main_repeat_L0+1 
L_main54:
0x12B2	0x0E80      	MOVLW       128
0x12B4	0x181C      	XORWF       main_repeat_L0+1, 0 
0x12B6	0x6E00      	MOVWF       R0 
0x12B8	0x0E80      	MOVLW       128
0x12BA	0x5C00      	SUBWF       R0, 0 
0x12BC	0xE102      	BNZ         L__main285
0x12BE	0x0E18      	MOVLW       24
0x12C0	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main285:
0x12C2	0xB0D8      	BTFSC       STATUS, 0 
0x12C4	0xD081      	BRA         L_main55
;pov++.c,375 :: 		digit_counter = 0;
0x12C6	0x6A15      	CLRF        _digit_counter 
0x12C8	0x6A16      	CLRF        _digit_counter+1 
;pov++.c,376 :: 		printChar(' ');
0x12CA	0x0E20      	MOVLW       32
0x12CC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12CE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,377 :: 		printChar(' ');
0x12D2	0x0E20      	MOVLW       32
0x12D4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12D6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,378 :: 		printChar('[');
0x12DA	0x0E5B      	MOVLW       91
0x12DC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12DE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,379 :: 		printChar('1');
0x12E2	0x0E31      	MOVLW       49
0x12E4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12E6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,380 :: 		printChar('2');
0x12EA	0x0E32      	MOVLW       50
0x12EC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12EE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,381 :: 		printChar('3');
0x12F2	0x0E33      	MOVLW       51
0x12F4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12F6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,382 :: 		printChar('4');
0x12FA	0x0E34      	MOVLW       52
0x12FC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x12FE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,383 :: 		printChar('5');
0x1302	0x0E35      	MOVLW       53
0x1304	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1306	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,384 :: 		printChar('6');
0x130A	0x0E36      	MOVLW       54
0x130C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x130E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,385 :: 		printChar('7');
0x1312	0x0E37      	MOVLW       55
0x1314	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1316	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,386 :: 		printChar('8');
0x131A	0x0E38      	MOVLW       56
0x131C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x131E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,387 :: 		printChar('9');
0x1322	0x0E39      	MOVLW       57
0x1324	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1326	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,388 :: 		printChar('0');
0x132A	0x0E30      	MOVLW       48
0x132C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x132E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,389 :: 		printChar(']');
0x1332	0x0E5D      	MOVLW       93
0x1334	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1336	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,390 :: 		printChar(' ');
0x133A	0x0E20      	MOVLW       32
0x133C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x133E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,391 :: 		printChar('!');
0x1342	0x0E21      	MOVLW       33
0x1344	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1346	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,392 :: 		printChar('@');
0x134A	0x0E40      	MOVLW       64
0x134C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x134E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,393 :: 		printChar('#');
0x1352	0x0E23      	MOVLW       35
0x1354	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1356	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,394 :: 		printChar('$');
0x135A	0x0E24      	MOVLW       36
0x135C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x135E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,395 :: 		printChar('%');
0x1362	0x0E25      	MOVLW       37
0x1364	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1366	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,396 :: 		printChar('^');
0x136A	0x0E5E      	MOVLW       94
0x136C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x136E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,397 :: 		printChar('&');
0x1372	0x0E26      	MOVLW       38
0x1374	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1376	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,398 :: 		printChar('*');
0x137A	0x0E2A      	MOVLW       42
0x137C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x137E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,399 :: 		printChar('(');
0x1382	0x0E28      	MOVLW       40
0x1384	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1386	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,400 :: 		printChar(')');
0x138A	0x0E29      	MOVLW       41
0x138C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x138E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,401 :: 		printChar('-');
0x1392	0x0E2D      	MOVLW       45
0x1394	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1396	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,402 :: 		printChar('+');
0x139A	0x0E2B      	MOVLW       43
0x139C	0x6E1D      	MOVWF       FARG_printChar_letter 
0x139E	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,403 :: 		printChar('_');
0x13A2	0x0E5F      	MOVLW       95
0x13A4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x13A6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,404 :: 		printChar('=');
0x13AA	0x0E3D      	MOVLW       61
0x13AC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x13AE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,405 :: 		printChar('\t');
0x13B2	0x0E09      	MOVLW       9
0x13B4	0x6E1D      	MOVWF       FARG_printChar_letter 
0x13B6	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,406 :: 		printChar(' ');
0x13BA	0x0E20      	MOVLW       32
0x13BC	0x6E1D      	MOVWF       FARG_printChar_letter 
0x13BE	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,371 :: 		for (repeat=0;repeat<24;repeat++){
0x13C2	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x13C4	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,407 :: 		} //end for repeat
0x13C6	0xD775      	BRA         L_main54
L_main55:
;pov++.c,413 :: 		for (repeat=0;repeat<24;repeat++){
0x13C8	0x6A1B      	CLRF        main_repeat_L0 
0x13CA	0x6A1C      	CLRF        main_repeat_L0+1 
L_main57:
0x13CC	0x0E80      	MOVLW       128
0x13CE	0x181C      	XORWF       main_repeat_L0+1, 0 
0x13D0	0x6E00      	MOVWF       R0 
0x13D2	0x0E80      	MOVLW       128
0x13D4	0x5C00      	SUBWF       R0, 0 
0x13D6	0xE102      	BNZ         L__main286
0x13D8	0x0E18      	MOVLW       24
0x13DA	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main286:
0x13DC	0xE249      	BC          L_main58
;pov++.c,416 :: 		for(n=0;n<2;n++){
0x13DE	0x6A17      	CLRF        main_n_L0 
0x13E0	0x6A18      	CLRF        main_n_L0+1 
L_main60:
0x13E2	0x0E80      	MOVLW       128
0x13E4	0x1818      	XORWF       main_n_L0+1, 0 
0x13E6	0x6E00      	MOVWF       R0 
0x13E8	0x0E80      	MOVLW       128
0x13EA	0x5C00      	SUBWF       R0, 0 
0x13EC	0xE102      	BNZ         L__main287
0x13EE	0x0E02      	MOVLW       2
0x13F0	0x5C17      	SUBWF       main_n_L0, 0 
L__main287:
0x13F2	0xE23B      	BC          L_main61
;pov++.c,417 :: 		printChar(' ');
0x13F4	0x0E20      	MOVLW       32
0x13F6	0x6E1D      	MOVWF       FARG_printChar_letter 
0x13F8	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,418 :: 		printChar(' ');
0x13FC	0x0E20      	MOVLW       32
0x13FE	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1400	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,419 :: 		printChar(' ');
0x1404	0x0E20      	MOVLW       32
0x1406	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1408	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,420 :: 		printChar('I');
0x140C	0x0E49      	MOVLW       73
0x140E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1410	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,421 :: 		printChar(' ');
0x1414	0x0E20      	MOVLW       32
0x1416	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1418	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,422 :: 		printChar(174); //heart character is double wide
0x141C	0x0EAE      	MOVLW       174
0x141E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1420	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,423 :: 		printChar(' ');
0x1424	0x0E20      	MOVLW       32
0x1426	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1428	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,424 :: 		printChar('P');
0x142C	0x0E50      	MOVLW       80
0x142E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1430	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,425 :: 		printChar('I');
0x1434	0x0E49      	MOVLW       73
0x1436	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1438	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,426 :: 		printChar('C');
0x143C	0x0E43      	MOVLW       67
0x143E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1440	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,427 :: 		printChar(' ');
0x1444	0x0E20      	MOVLW       32
0x1446	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1448	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,428 :: 		printChar(' ');
0x144C	0x0E20      	MOVLW       32
0x144E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1450	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,429 :: 		printChar(' ');
0x1454	0x0E20      	MOVLW       32
0x1456	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1458	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,430 :: 		printChar('\t');
0x145C	0x0E09      	MOVLW       9
0x145E	0x6E1D      	MOVWF       FARG_printChar_letter 
0x1460	0xF000EC0E  	CALL        _printChar, 0
;pov++.c,416 :: 		for(n=0;n<2;n++){
0x1464	0x4A17      	INFSNZ      main_n_L0, 1 
0x1466	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,432 :: 		}//end for n
0x1468	0xD7BC      	BRA         L_main60
L_main61:
;pov++.c,413 :: 		for (repeat=0;repeat<24;repeat++){
0x146A	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x146C	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,433 :: 		} //end for repeat
0x146E	0xD7AE      	BRA         L_main57
L_main58:
;pov++.c,440 :: 		for (repeat=0;repeat<10;repeat++){
0x1470	0x6A1B      	CLRF        main_repeat_L0 
0x1472	0x6A1C      	CLRF        main_repeat_L0+1 
L_main63:
0x1474	0x0E80      	MOVLW       128
0x1476	0x181C      	XORWF       main_repeat_L0+1, 0 
0x1478	0x6E00      	MOVWF       R0 
0x147A	0x0E80      	MOVLW       128
0x147C	0x5C00      	SUBWF       R0, 0 
0x147E	0xE102      	BNZ         L__main288
0x1480	0x0E0A      	MOVLW       10
0x1482	0x5C1B      	SUBWF       main_repeat_L0, 0 
L__main288:
0x1484	0xE227      	BC          L_main64
;pov++.c,441 :: 		for(n=0;n<32;n++){
0x1486	0x6A17      	CLRF        main_n_L0 
0x1488	0x6A18      	CLRF        main_n_L0+1 
L_main66:
0x148A	0x0E80      	MOVLW       128
0x148C	0x1818      	XORWF       main_n_L0+1, 0 
0x148E	0x6E00      	MOVWF       R0 
0x1490	0x0E80      	MOVLW       128
0x1492	0x5C00      	SUBWF       R0, 0 
0x1494	0xE102      	BNZ         L__main289
0x1496	0x0E20      	MOVLW       32
0x1498	0x5C17      	SUBWF       main_n_L0, 0 
L__main289:
0x149A	0xE219      	BC          L_main67
;pov++.c,442 :: 		PORTA = 15;
0x149C	0x0E0F      	MOVLW       15
0x149E	0x6E80      	MOVWF       PORTA 
;pov++.c,443 :: 		Delay_ms(16);
0x14A0	0x0EA7      	MOVLW       167
0x14A2	0x6E0C      	MOVWF       R12, 0
0x14A4	0x0E3A      	MOVLW       58
0x14A6	0x6E0D      	MOVWF       R13, 0
L_main69:
0x14A8	0x2E0D      	DECFSZ      R13, 1, 0
0x14AA	0xD7FE      	BRA         L_main69
0x14AC	0x2E0C      	DECFSZ      R12, 1, 0
0x14AE	0xD7FC      	BRA         L_main69
0x14B0	0x0000      	NOP
;pov++.c,444 :: 		PORTA = 240;
0x14B2	0x0EF0      	MOVLW       240
0x14B4	0x6E80      	MOVWF       PORTA 
;pov++.c,445 :: 		Delay_ms(16);
0x14B6	0x0EA7      	MOVLW       167
0x14B8	0x6E0C      	MOVWF       R12, 0
0x14BA	0x0E3A      	MOVLW       58
0x14BC	0x6E0D      	MOVWF       R13, 0
L_main70:
0x14BE	0x2E0D      	DECFSZ      R13, 1, 0
0x14C0	0xD7FE      	BRA         L_main70
0x14C2	0x2E0C      	DECFSZ      R12, 1, 0
0x14C4	0xD7FC      	BRA         L_main70
0x14C6	0x0000      	NOP
;pov++.c,441 :: 		for(n=0;n<32;n++){
0x14C8	0x4A17      	INFSNZ      main_n_L0, 1 
0x14CA	0x2A18      	INCF        main_n_L0+1, 1 
;pov++.c,446 :: 		}
0x14CC	0xD7DE      	BRA         L_main66
L_main67:
;pov++.c,440 :: 		for (repeat=0;repeat<10;repeat++){
0x14CE	0x4A1B      	INFSNZ      main_repeat_L0, 1 
0x14D0	0x2A1C      	INCF        main_repeat_L0+1, 1 
;pov++.c,448 :: 		}  //end repeat
0x14D2	0xD7D0      	BRA         L_main63
L_main64:
;pov++.c,452 :: 		} //end while loop
0x14D4	0xD4E6      	BRA         L_main0
;pov++.c,454 :: 		} //end main
0x14D6	0xD7FF      	BRA         $+0
; end of _main
;pov++.c,130 :: _icon_INVERTED_MOUNTAINS
0x14D8	0xFEFE ;_icon_INVERTED_MOUNTAINS+0
0x14DA	0xF8FC ;_icon_INVERTED_MOUNTAINS+2
0x14DC	0xE0F0 ;_icon_INVERTED_MOUNTAINS+4
0x14DE	0x80C0 ;_icon_INVERTED_MOUNTAINS+6
0x14E0	0x0000 ;_icon_INVERTED_MOUNTAINS+8
0x14E2	0xC080 ;_icon_INVERTED_MOUNTAINS+10
0x14E4	0xF0E0 ;_icon_INVERTED_MOUNTAINS+12
0x14E6	0xFCF8 ;_icon_INVERTED_MOUNTAINS+14
0x14E8	0xFEFE ;_icon_INVERTED_MOUNTAINS+16
0x14EA	0x00 ;_icon_INVERTED_MOUNTAINS+18
; end of _icon_INVERTED_MOUNTAINS
;pov++.c,131 :: _icon_CHECKER
0x14EB	0x55AA ;_icon_CHECKER+0
0x14ED	0x55AA ;_icon_CHECKER+2
0x14EF	0x55AA ;_icon_CHECKER+4
0x14F1	0x55AA ;_icon_CHECKER+6
0x14F3	0x55AA ;_icon_CHECKER+8
0x14F5	0x55AA ;_icon_CHECKER+10
0x14F7	0x55AA ;_icon_CHECKER+12
0x14F9	0x55AA ;_icon_CHECKER+14
0x14FB	0x55AA ;_icon_CHECKER+16
0x14FD	0x00 ;_icon_CHECKER+18
; end of _icon_CHECKER
;pov++.c,128 :: _icon_SPC
0x14FE	0xFFFF ;_icon_SPC+0
0x1500	0xFFFF ;_icon_SPC+2
0x1502	0xFFFF ;_icon_SPC+4
0x1504	0xFFFF ;_icon_SPC+6
0x1506	0xFFFF ;_icon_SPC+8
0x1508	0xFFFF ;_icon_SPC+10
0x150A	0xFFFF ;_icon_SPC+12
0x150C	0xFFFF ;_icon_SPC+14
0x150E	0xFFFF ;_icon_SPC+16
0x1510	0x00 ;_icon_SPC+18
; end of _icon_SPC
;pov++.c,129 :: _icon_MOUNTAINS
0x1511	0x0101 ;_icon_MOUNTAINS+0
0x1513	0x0703 ;_icon_MOUNTAINS+2
0x1515	0x1F0F ;_icon_MOUNTAINS+4
0x1517	0x7F3F ;_icon_MOUNTAINS+6
0x1519	0xFFFF ;_icon_MOUNTAINS+8
0x151B	0x3F7F ;_icon_MOUNTAINS+10
0x151D	0x0F1F ;_icon_MOUNTAINS+12
0x151F	0x0307 ;_icon_MOUNTAINS+14
0x1521	0x0101 ;_icon_MOUNTAINS+16
0x1523	0x00 ;_icon_MOUNTAINS+18
; end of _icon_MOUNTAINS
;pov++.c,132 :: _icon_BLOCK
0x1524	0xFF00 ;_icon_BLOCK+0
0x1526	0xC3FF ;_icon_BLOCK+2
0x1528	0xC3C3 ;_icon_BLOCK+4
0x152A	0xC3C3 ;_icon_BLOCK+6
0x152C	0xC3C3 ;_icon_BLOCK+8
0x152E	0xC3C3 ;_icon_BLOCK+10
0x1530	0xC3C3 ;_icon_BLOCK+12
0x1532	0xFFC3 ;_icon_BLOCK+14
0x1534	0x00FF ;_icon_BLOCK+16
0x1536	0x00 ;_icon_BLOCK+18
; end of _icon_BLOCK
;pov++.c,135 :: _icon_HELICAL
0x1537	0xC3C3 ;_icon_HELICAL+0
0x1539	0xE0C0 ;_icon_HELICAL+2
0x153B	0x7060 ;_icon_HELICAL+4
0x153D	0x1C38 ;_icon_HELICAL+6
0x153F	0xC70F ;_icon_HELICAL+8
0x1541	0xC0C0 ;_icon_HELICAL+10
0x1543	0xC0C0 ;_icon_HELICAL+12
0x1545	0x68E0 ;_icon_HELICAL+14
0x1547	0x3E7C ;_icon_HELICAL+16
0x1549	0x00 ;_icon_HELICAL+18
; end of _icon_HELICAL
;pov++.c,136 :: _icon_INVERTED_HELICAL
0x154A	0x3C3C ;_icon_INVERTED_HELICAL+0
0x154C	0x1F3F ;_icon_INVERTED_HELICAL+2
0x154E	0x8F9F ;_icon_INVERTED_HELICAL+4
0x1550	0xE3C7 ;_icon_INVERTED_HELICAL+6
0x1552	0x38F1 ;_icon_INVERTED_HELICAL+8
0x1554	0x3F3C ;_icon_INVERTED_HELICAL+10
0x1556	0x3F3F ;_icon_INVERTED_HELICAL+12
0x1558	0x971F ;_icon_INVERTED_HELICAL+14
0x155A	0xC183 ;_icon_INVERTED_HELICAL+16
0x155C	0x00 ;_icon_INVERTED_HELICAL+18
; end of _icon_INVERTED_HELICAL
;pov++.c,133 :: _icon_SMILEY
0x155D	0x0000 ;_icon_SMILEY+0
0x155F	0x817E ;_icon_SMILEY+2
0x1561	0x8981 ;_icon_SMILEY+4
0x1563	0xA585 ;_icon_SMILEY+6
0x1565	0x8585 ;_icon_SMILEY+8
0x1567	0xA585 ;_icon_SMILEY+10
0x1569	0x8985 ;_icon_SMILEY+12
0x156B	0x8181 ;_icon_SMILEY+14
0x156D	0x007E ;_icon_SMILEY+16
0x156F	0x00 ;_icon_SMILEY+18
; end of _icon_SMILEY
;pov++.c,134 :: _icon_GREEK
0x1570	0xFE02 ;_icon_GREEK+0
0x1572	0x8080 ;_icon_GREEK+2
0x1574	0x929E ;_icon_GREEK+4
0x1576	0xF292 ;_icon_GREEK+6
0x1578	0x0202 ;_icon_GREEK+8
0x157A	0x80FE ;_icon_GREEK+10
0x157C	0x9E80 ;_icon_GREEK+12
0x157E	0x9292 ;_icon_GREEK+14
0x1580	0x02F2 ;_icon_GREEK+16
0x1582	0x00 ;_icon_GREEK+18
; end of _icon_GREEK
;pov++.c,105 :: _letter_UNDERSCORE
0x1583	0x0101 ;_letter_UNDERSCORE+0
0x1585	0x0101 ;_letter_UNDERSCORE+2
0x1587	0x0101 ;_letter_UNDERSCORE+4
0x1589	0x0001 ;_letter_UNDERSCORE+6
; end of _letter_UNDERSCORE
;pov++.c,106 :: _letter_PLUS
0x158B	0x0808 ;_letter_PLUS+0
0x158D	0xFF08 ;_letter_PLUS+2
0x158F	0x0808 ;_letter_PLUS+4
0x1591	0x0008 ;_letter_PLUS+6
; end of _letter_PLUS
;pov++.c,103 :: _letter_RIGHT_PAREN
0x1593	0x0000 ;_letter_RIGHT_PAREN+0
0x1595	0x7E81 ;_letter_RIGHT_PAREN+2
0x1597	0x0000 ;_letter_RIGHT_PAREN+4
0x1599	0x0000 ;_letter_RIGHT_PAREN+6
; end of _letter_RIGHT_PAREN
;pov++.c,104 :: _letter_DASH
0x159B	0x0808 ;_letter_DASH+0
0x159D	0x0808 ;_letter_DASH+2
0x159F	0x0808 ;_letter_DASH+4
0x15A1	0x0008 ;_letter_DASH+6
; end of _letter_DASH
;pov++.c,109 :: _letter_TICK
0x15A3	0x0000 ;_letter_TICK+0
0x15A5	0x7060 ;_letter_TICK+2
0x15A7	0x0000 ;_letter_TICK+4
0x15A9	0x0000 ;_letter_TICK+6
; end of _letter_TICK
;pov++.c,110 :: _letter_COLON
0x15AB	0x0000 ;_letter_COLON+0
0x15AD	0x6666 ;_letter_COLON+2
0x15AF	0x0000 ;_letter_COLON+4
0x15B1	0x0000 ;_letter_COLON+6
; end of _letter_COLON
;pov++.c,107 :: _letter_EQUALS
0x15B3	0x2424 ;_letter_EQUALS+0
0x15B5	0x2424 ;_letter_EQUALS+2
0x15B7	0x2424 ;_letter_EQUALS+4
0x15B9	0x0024 ;_letter_EQUALS+6
; end of _letter_EQUALS
;pov++.c,108 :: _letter_TILDE
0x15BB	0x3010 ;_letter_TILDE+0
0x15BD	0x2020 ;_letter_TILDE+2
0x15BF	0x3010 ;_letter_TILDE+4
0x15C1	0x0020 ;_letter_TILDE+6
; end of _letter_TILDE
;pov++.c,97 :: _letter_DOLLAR
0x15C3	0x5224 ;_letter_DOLLAR+0
0x15C5	0xFF52 ;_letter_DOLLAR+2
0x15C7	0x4A4A ;_letter_DOLLAR+4
0x15C9	0x0024 ;_letter_DOLLAR+6
; end of _letter_DOLLAR
;pov++.c,98 :: _letter_PERCENT
0x15CB	0xA241 ;_letter_PERCENT+0
0x15CD	0x1844 ;_letter_PERCENT+2
0x15CF	0x4522 ;_letter_PERCENT+4
0x15D1	0x0082 ;_letter_PERCENT+6
; end of _letter_PERCENT
;pov++.c,95 :: _letter_AT
0x15D3	0x7E00 ;_letter_AT+0
0x15D5	0xA599 ;_letter_AT+2
0x15D7	0x99A5 ;_letter_AT+4
0x15D9	0x0078 ;_letter_AT+6
; end of _letter_AT
;pov++.c,96 :: _letter_NUM
0x15DB	0xFF24 ;_letter_NUM+0
0x15DD	0x2424 ;_letter_NUM+2
0x15DF	0xFF24 ;_letter_NUM+4
0x15E1	0x0024 ;_letter_NUM+6
; end of _letter_NUM
;pov++.c,101 :: _letter_ASTERISK
0x15E3	0x2AC9 ;_letter_ASTERISK+0
0x15E5	0xFF1C ;_letter_ASTERISK+2
0x15E7	0x2A1C ;_letter_ASTERISK+4
0x15E9	0x00C9 ;_letter_ASTERISK+6
; end of _letter_ASTERISK
;pov++.c,102 :: _letter_LEFT_PAREN
0x15EB	0x0000 ;_letter_LEFT_PAREN+0
0x15ED	0x7E00 ;_letter_LEFT_PAREN+2
0x15EF	0x0081 ;_letter_LEFT_PAREN+4
0x15F1	0x0000 ;_letter_LEFT_PAREN+6
; end of _letter_LEFT_PAREN
;pov++.c,99 :: _letter_CARRAT
0x15F3	0x300C ;_letter_CARRAT+0
0x15F5	0x8040 ;_letter_CARRAT+2
0x15F7	0x3040 ;_letter_CARRAT+4
0x15F9	0x000C ;_letter_CARRAT+6
; end of _letter_CARRAT
;pov++.c,100 :: _letter_AMPERSAND
0x15FB	0xA343 ;_letter_AMPERSAND+0
0x15FD	0x8995 ;_letter_AMPERSAND+2
0x15FF	0x938D ;_letter_AMPERSAND+4
0x1601	0x0072 ;_letter_AMPERSAND+6
; end of _letter_AMPERSAND
;pov++.c,111 :: _letter_SEMICOLON
0x1603	0x0000 ;_letter_SEMICOLON+0
0x1605	0x6766 ;_letter_SEMICOLON+2
0x1607	0x0000 ;_letter_SEMICOLON+4
0x1609	0x0000 ;_letter_SEMICOLON+6
; end of _letter_SEMICOLON
;pov++.c,52 :: _letter_newline
0x160B	0x0000 ;_letter_newline+0
0x160D	0x0000 ;_letter_newline+2
0x160F	0x0000 ;_letter_newline+4
0x1611	0x0000 ;_letter_newline+6
; end of _letter_newline
;pov++.c,122 :: _letter_CENTS
0x1613	0x3C00 ;_letter_CENTS+0
0x1615	0xFF42 ;_letter_CENTS+2
0x1617	0x2442 ;_letter_CENTS+4
0x1619	0x0000 ;_letter_CENTS+6
; end of _letter_CENTS
;pov++.c,119 :: _letter_SMILIE
0x161B	0x897E ;_letter_SMILIE+0
0x161D	0x85A5 ;_letter_SMILIE+2
0x161F	0x89A5 ;_letter_SMILIE+4
0x1621	0x007E ;_letter_SMILIE+6
; end of _letter_SMILIE
;pov++.c,120 :: _letter_HEART
0x1623	0xFC78 ;_letter_HEART+0
0x1625	0x3F7E ;_letter_HEART+2
0x1627	0xFC7E ;_letter_HEART+4
0x1629	0x0078 ;_letter_HEART+6
; end of _letter_HEART
;pov++.c,124 :: _letter_PILCROW
0x162B	0x3000 ;_letter_PILCROW+0
0x162D	0xFF78 ;_letter_PILCROW+2
0x162F	0xFF80 ;_letter_PILCROW+4
0x1631	0x0000 ;_letter_PILCROW+6
; end of _letter_PILCROW
;pov++.c,125 :: _letter_BULLET
0x1633	0x3C00 ;_letter_BULLET+0
0x1635	0x7E7E ;_letter_BULLET+2
0x1637	0x3C7E ;_letter_BULLET+4
0x1639	0x0000 ;_letter_BULLET+6
; end of _letter_BULLET
;pov++.c,121 :: _letter_DEGREE
0x163B	0x3000 ;_letter_DEGREE+0
0x163D	0x4048 ;_letter_DEGREE+2
0x163F	0x0030 ;_letter_DEGREE+4
0x1641	0x0000 ;_letter_DEGREE+6
; end of _letter_DEGREE
;pov++.c,123 :: _letter_EURO
0x1643	0x7E14 ;_letter_EURO+0
0x1645	0x9595 ;_letter_EURO+2
0x1647	0x4281 ;_letter_EURO+4
0x1649	0x0000 ;_letter_EURO+6
; end of _letter_EURO
;pov++.c,114 :: _letter_LEFT_CHEVRON
0x164B	0x2400 ;_letter_LEFT_CHEVRON+0
0x164D	0x8142 ;_letter_LEFT_CHEVRON+2
0x164F	0x0000 ;_letter_LEFT_CHEVRON+4
0x1651	0x0000 ;_letter_LEFT_CHEVRON+6
; end of _letter_LEFT_CHEVRON
;pov++.c,115 :: _letter_RIGHT_CHEVRON
0x1653	0x8100 ;_letter_RIGHT_CHEVRON+0
0x1655	0x2642 ;_letter_RIGHT_CHEVRON+2
0x1657	0x1818 ;_letter_RIGHT_CHEVRON+4
0x1659	0x0000 ;_letter_RIGHT_CHEVRON+6
; end of _letter_RIGHT_CHEVRON
;pov++.c,112 :: _letter_BACK_SLASH
0x165B	0x0201 ;_letter_BACK_SLASH+0
0x165D	0x1804 ;_letter_BACK_SLASH+2
0x165F	0x4020 ;_letter_BACK_SLASH+4
0x1661	0x0080 ;_letter_BACK_SLASH+6
; end of _letter_BACK_SLASH
;pov++.c,113 :: _letter_FORWARD_SLASH
0x1663	0x4080 ;_letter_FORWARD_SLASH+0
0x1665	0x1820 ;_letter_FORWARD_SLASH+2
0x1667	0x0204 ;_letter_FORWARD_SLASH+4
0x1669	0x0001 ;_letter_FORWARD_SLASH+6
; end of _letter_FORWARD_SLASH
;pov++.c,118 :: _letter_RIGHT_BRACKET
0x166B	0x8100 ;_letter_RIGHT_BRACKET+0
0x166D	0xFF81 ;_letter_RIGHT_BRACKET+2
0x166F	0x0000 ;_letter_RIGHT_BRACKET+4
0x1671	0x0000 ;_letter_RIGHT_BRACKET+6
; end of _letter_RIGHT_BRACKET
;pov++.c,51 :: _letter_SPC
0x1673	0x0000 ;_letter_SPC+0
0x1675	0x0000 ;_letter_SPC+2
0x1677	0x0000 ;_letter_SPC+4
0x1679	0x0000 ;_letter_SPC+6
; end of _letter_SPC
;pov++.c,116 :: _letter_TAB
0x167B	0xFFFF ;_letter_TAB+0
0x167D	0xFFFF ;_letter_TAB+2
0x167F	0xFFFF ;_letter_TAB+4
0x1681	0x00FF ;_letter_TAB+6
; end of _letter_TAB
;pov++.c,117 :: _letter_LEFT_BRACKET
0x1683	0x0000 ;_letter_LEFT_BRACKET+0
0x1685	0xFF00 ;_letter_LEFT_BRACKET+2
0x1687	0x8181 ;_letter_LEFT_BRACKET+4
0x1689	0x0000 ;_letter_LEFT_BRACKET+6
; end of _letter_LEFT_BRACKET
;pov++.c,67 :: _letter_O
0x168B	0x817E ;_letter_O+0
0x168D	0x8181 ;_letter_O+2
0x168F	0x8181 ;_letter_O+4
0x1691	0x007E ;_letter_O+6
; end of _letter_O
;pov++.c,68 :: _letter_P
0x1693	0x88FF ;_letter_P+0
0x1695	0x8888 ;_letter_P+2
0x1697	0x8888 ;_letter_P+4
0x1699	0x0070 ;_letter_P+6
; end of _letter_P
;pov++.c,66 :: _letter_N
0x169B	0x40FF ;_letter_N+0
0x169D	0x1020 ;_letter_N+2
0x169F	0x0408 ;_letter_N+4
0x16A1	0x00FF ;_letter_N+6
; end of _letter_N
;pov++.c,64 :: _letter_L
0x16A3	0x01FF ;_letter_L+0
0x16A5	0x0101 ;_letter_L+2
0x16A7	0x0101 ;_letter_L+4
0x16A9	0x0001 ;_letter_L+6
; end of _letter_L
;pov++.c,65 :: _letter_M
0x16AB	0x80FF ;_letter_M+0
0x16AD	0x7080 ;_letter_M+2
0x16AF	0x8080 ;_letter_M+4
0x16B1	0x00FF ;_letter_M+6
; end of _letter_M
;pov++.c,72 :: _letter_T
0x16B3	0x8080 ;_letter_T+0
0x16B5	0xFF80 ;_letter_T+2
0x16B7	0x8080 ;_letter_T+4
0x16B9	0x0080 ;_letter_T+6
; end of _letter_T
;pov++.c,73 :: _letter_U
0x16BB	0x01FF ;_letter_U+0
0x16BD	0x0101 ;_letter_U+2
0x16BF	0x0101 ;_letter_U+4
0x16C1	0x00FF ;_letter_U+6
; end of _letter_U
;pov++.c,71 :: _letter_S
0x16C3	0x9162 ;_letter_S+0
0x16C5	0x9191 ;_letter_S+2
0x16C7	0x8989 ;_letter_S+4
0x16C9	0x0046 ;_letter_S+6
; end of _letter_S
;pov++.c,69 :: _letter_Q
0x16CB	0x827C ;_letter_Q+0
0x16CD	0x868A ;_letter_Q+2
0x16CF	0x8283 ;_letter_Q+4
0x16D1	0x007C ;_letter_Q+6
; end of _letter_Q
;pov++.c,70 :: _letter_R
0x16D3	0x88FF ;_letter_R+0
0x16D5	0x8888 ;_letter_R+2
0x16D7	0x8A8C ;_letter_R+4
0x16D9	0x0071 ;_letter_R+6
; end of _letter_R
;pov++.c,63 :: _letter_K
0x16DB	0x10FF ;_letter_K+0
0x16DD	0x1010 ;_letter_K+2
0x16DF	0x4428 ;_letter_K+4
0x16E1	0x0083 ;_letter_K+6
; end of _letter_K
;pov++.c,56 :: _letter_D
0x16E3	0x81FF ;_letter_D+0
0x16E5	0x8181 ;_letter_D+2
0x16E7	0x4681 ;_letter_D+4
0x16E9	0x003C ;_letter_D+6
; end of _letter_D
;pov++.c,57 :: _letter_E
0x16EB	0x89FF ;_letter_E+0
0x16ED	0x8989 ;_letter_E+2
0x16EF	0x8181 ;_letter_E+4
0x16F1	0x0081 ;_letter_E+6
; end of _letter_E
;pov++.c,55 :: _letter_C
0x16F3	0x817E ;_letter_C+0
0x16F5	0x8181 ;_letter_C+2
0x16F7	0x8181 ;_letter_C+4
0x16F9	0x0042 ;_letter_C+6
; end of _letter_C
;pov++.c,53 :: _letter_A
0x16FB	0x241F ;_letter_A+0
0x16FD	0x8444 ;_letter_A+2
0x16FF	0x2444 ;_letter_A+4
0x1701	0x001F ;_letter_A+6
; end of _letter_A
;pov++.c,54 :: _letter_B
0x1703	0x89FF ;_letter_B+0
0x1705	0x8989 ;_letter_B+2
0x1707	0x8989 ;_letter_B+4
0x1709	0x0076 ;_letter_B+6
; end of _letter_B
;pov++.c,61 :: _letter_I
0x170B	0x8181 ;_letter_I+0
0x170D	0xFF81 ;_letter_I+2
0x170F	0x8181 ;_letter_I+4
0x1711	0x0081 ;_letter_I+6
; end of _letter_I
;pov++.c,62 :: _letter_J
0x1713	0x818E ;_letter_J+0
0x1715	0xFE81 ;_letter_J+2
0x1717	0x8080 ;_letter_J+4
0x1719	0x0080 ;_letter_J+6
; end of _letter_J
;pov++.c,60 :: _letter_H
0x171B	0x08FF ;_letter_H+0
0x171D	0x0808 ;_letter_H+2
0x171F	0x0808 ;_letter_H+4
0x1721	0x00FF ;_letter_H+6
; end of _letter_H
;pov++.c,58 :: _letter_F
0x1723	0x88FF ;_letter_F+0
0x1725	0x8888 ;_letter_F+2
0x1727	0x8088 ;_letter_F+4
0x1729	0x0080 ;_letter_F+6
; end of _letter_F
;pov++.c,59 :: _letter_G
0x172B	0x817E ;_letter_G+0
0x172D	0x8981 ;_letter_G+2
0x172F	0x8F89 ;_letter_G+4
0x1731	0x0048 ;_letter_G+6
; end of _letter_G
;pov++.c,88 :: _letter_9
0x1733	0x8970 ;_letter_9+0
0x1735	0x8189 ;_letter_9+2
0x1737	0x8989 ;_letter_9+4
0x1739	0x007E ;_letter_9+6
; end of _letter_9
;pov++.c,89 :: _letter_PERIOD
0x173B	0x0000 ;_letter_PERIOD+0
0x173D	0x0F00 ;_letter_PERIOD+2
0x173F	0x0007 ;_letter_PERIOD+4
0x1741	0x0000 ;_letter_PERIOD+6
; end of _letter_PERIOD
;pov++.c,87 :: _letter_8
0x1743	0x8976 ;_letter_8+0
0x1745	0x8189 ;_letter_8+2
0x1747	0x8989 ;_letter_8+4
0x1749	0x0076 ;_letter_8+6
; end of _letter_8
;pov++.c,85 :: _letter_6
0x174B	0x897E ;_letter_6+0
0x174D	0x8989 ;_letter_6+2
0x174F	0x8989 ;_letter_6+4
0x1751	0x0086 ;_letter_6+6
; end of _letter_6
;pov++.c,86 :: _letter_7
0x1753	0x8080 ;_letter_7+0
0x1755	0x8F80 ;_letter_7+2
0x1757	0xA090 ;_letter_7+4
0x1759	0x00C0 ;_letter_7+6
; end of _letter_7
;pov++.c,93 :: _letter_QUESTION
0x175B	0x6000 ;_letter_QUESTION+0
0x175D	0x8D80 ;_letter_QUESTION+2
0x175F	0x9090 ;_letter_QUESTION+4
0x1761	0x0060 ;_letter_QUESTION+6
; end of _letter_QUESTION
;pov++.c,94 :: _letter_EXCLAIM
0x1763	0x0000 ;_letter_EXCLAIM+0
0x1765	0xFD00 ;_letter_EXCLAIM+2
0x1767	0x0000 ;_letter_EXCLAIM+4
0x1769	0x0000 ;_letter_EXCLAIM+6
; end of _letter_EXCLAIM
;pov++.c,92 :: _letter_SINGLE_QUOTE
0x176B	0x0000 ;_letter_SINGLE_QUOTE+0
0x176D	0x7800 ;_letter_SINGLE_QUOTE+2
0x176F	0x0078 ;_letter_SINGLE_QUOTE+4
0x1771	0x0000 ;_letter_SINGLE_QUOTE+6
; end of _letter_SINGLE_QUOTE
;pov++.c,90 :: _letter_COMMA
0x1773	0x0000 ;_letter_COMMA+0
0x1775	0x0600 ;_letter_COMMA+2
0x1777	0x0007 ;_letter_COMMA+4
0x1779	0x0000 ;_letter_COMMA+6
; end of _letter_COMMA
;pov++.c,91 :: _letter_QUOTE
0x177B	0x7800 ;_letter_QUOTE+0
0x177D	0x0078 ;_letter_QUOTE+2
0x177F	0x7878 ;_letter_QUOTE+4
0x1781	0x0000 ;_letter_QUOTE+6
; end of _letter_QUOTE
;pov++.c,84 :: _letter_5
0x1783	0x8979 ;_letter_5+0
0x1785	0x8989 ;_letter_5+2
0x1787	0x8989 ;_letter_5+4
0x1789	0x0086 ;_letter_5+6
; end of _letter_5
;pov++.c,77 :: _letter_Y
0x178B	0x0080 ;_letter_Y+0
0x178D	0x1F20 ;_letter_Y+2
0x178F	0x4020 ;_letter_Y+4
0x1791	0x0080 ;_letter_Y+6
; end of _letter_Y
;pov++.c,78 :: _letter_Z
0x1793	0x8583 ;_letter_Z+0
0x1795	0x9189 ;_letter_Z+2
0x1797	0xC1A1 ;_letter_Z+4
0x1799	0x0081 ;_letter_Z+6
; end of _letter_Z
;pov++.c,76 :: _letter_X
0x179B	0x0281 ;_letter_X+0
0x179D	0x1824 ;_letter_X+2
0x179F	0x4224 ;_letter_X+4
0x17A1	0x0081 ;_letter_X+6
; end of _letter_X
;pov++.c,74 :: _letter_V
0x17A3	0x04F8 ;_letter_V+0
0x17A5	0x0102 ;_letter_V+2
0x17A7	0x0402 ;_letter_V+4
0x17A9	0x00F8 ;_letter_V+6
; end of _letter_V
;pov++.c,75 :: _letter_W
0x17AB	0x01FE ;_letter_W+0
0x17AD	0x0E01 ;_letter_W+2
0x17AF	0x0101 ;_letter_W+4
0x17B1	0x00FE ;_letter_W+6
; end of _letter_W
;pov++.c,82 :: _letter_3
0x17B3	0x8142 ;_letter_3+0
0x17B5	0x8981 ;_letter_3+2
0x17B7	0x9589 ;_letter_3+4
0x17B9	0x0062 ;_letter_3+6
; end of _letter_3
;pov++.c,83 :: _letter_4
0x17BB	0x0C00 ;_letter_4+0
0x17BD	0x2414 ;_letter_4+2
0x17BF	0xFF44 ;_letter_4+4
0x17C1	0x0004 ;_letter_4+6
; end of _letter_4
;pov++.c,81 :: _letter_2
0x17C3	0x8341 ;_letter_2+0
0x17C5	0x8985 ;_letter_2+2
0x17C7	0x9189 ;_letter_2+4
0x17C9	0x0063 ;_letter_2+6
; end of _letter_2
;pov++.c,79 :: _letter_0
0x17CB	0x7E00 ;_letter_0+0
0x17CD	0x8985 ;_letter_0+2
0x17CF	0xA191 ;_letter_0+4
0x17D1	0x007E ;_letter_0+6
; end of _letter_0
;pov++.c,80 :: _letter_1
0x17D3	0x2100 ;_letter_1+0
0x17D5	0xFF41 ;_letter_1+2
0x17D7	0x0101 ;_letter_1+4
0x17D9	0x0000 ;_letter_1+6
; end of _letter_1
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C    [3212]    _printChar
0x0CA8     [472]    _printIcon
0x0E80      [16]    ___CC2DW
0x0E90    [1608]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [2]    printIcon_n_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [2]    printChar_n_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memset_pp_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [2]    frexp_pom_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _digit_counter
0x0017       [2]    main_n_L0
0x0019       [2]    main_i_L0
0x001B       [2]    main_repeat_L0
0x001D       [1]    FARG_printIcon_icon
0x001D       [1]    FARG_printChar_letter
0x001E       [2]    FARG_printIcon_wide
0x0D60       [1]    RXF6SIDH
0x0D60       [0]    SID5_bit
0x0D60       [0]    SID6_bit
0x0D60       [0]    SID3_bit
0x0D60       [0]    SID4_bit
0x0D60       [0]    SID9_bit
0x0D60       [0]    SID10_bit
0x0D60       [0]    SID7_bit
0x0D60       [0]    SID8_bit
0x0D61       [0]    SID0_bit
0x0D61       [0]    EXIDE_bit
0x0D61       [0]    SID1_bit
0x0D61       [0]    EXIDEN_bit
0x0D61       [0]    SID2_bit
0x0D61       [1]    RXF6SIDL
0x0D61       [0]    EID16_bit
0x0D61       [0]    EID17_bit
0x0D62       [0]    EID12_bit
0x0D62       [0]    EID11_bit
0x0D62       [0]    EID13_bit
0x0D62       [0]    EID15_bit
0x0D62       [0]    EID14_bit
0x0D62       [0]    EID8_bit
0x0D62       [1]    RXF6EIDH
0x0D62       [0]    EID10_bit
0x0D62       [0]    EID9_bit
0x0D63       [0]    EID1_bit
0x0D63       [0]    EID0_bit
0x0D63       [1]    RXF6EIDL
0x0D63       [0]    EID2_bit
0x0D63       [0]    EID6_bit
0x0D63       [0]    EID7_bit
0x0D63       [0]    EID5_bit
0x0D63       [0]    EID3_bit
0x0D63       [0]    EID4_bit
0x0D64       [0]    SID9_RXF7SIDH_bit
0x0D64       [0]    SID8_RXF7SIDH_bit
0x0D64       [1]    RXF7SIDH
0x0D64       [0]    SID10_RXF7SIDH_bit
0x0D64       [0]    SID7_RXF7SIDH_bit
0x0D64       [0]    SID4_RXF7SIDH_bit
0x0D64       [0]    SID3_RXF7SIDH_bit
0x0D64       [0]    SID6_RXF7SIDH_bit
0x0D64       [0]    SID5_RXF7SIDH_bit
0x0D65       [0]    SID1_RXF7SIDL_bit
0x0D65       [0]    EXIDEN_RXF7SIDL_bit
0x0D65       [0]    SID2_RXF7SIDL_bit
0x0D65       [1]    RXF7SIDL
0x0D65       [0]    EID17_RXF7SIDL_bit
0x0D65       [0]    EID16_RXF7SIDL_bit
0x0D65       [0]    SID0_RXF7SIDL_bit
0x0D65       [0]    EXIDE_RXF7SIDL_bit
0x0D66       [0]    EID12_RXF7EIDH_bit
0x0D66       [0]    EID11_RXF7EIDH_bit
0x0D66       [0]    EID10_RXF7EIDH_bit
0x0D66       [0]    EID15_RXF7EIDH_bit
0x0D66       [0]    EID14_RXF7EIDH_bit
0x0D66       [0]    EID13_RXF7EIDH_bit
0x0D66       [0]    EID9_RXF7EIDH_bit
0x0D66       [1]    RXF7EIDH
0x0D66       [0]    EID8_RXF7EIDH_bit
0x0D67       [0]    EID3_RXF7EIDL_bit
0x0D67       [0]    EID2_RXF7EIDL_bit
0x0D67       [0]    EID4_RXF7EIDL_bit
0x0D67       [0]    EID7_RXF7EIDL_bit
0x0D67       [0]    EID6_RXF7EIDL_bit
0x0D67       [0]    EID5_RXF7EIDL_bit
0x0D67       [1]    RXF7EIDL
0x0D67       [0]    EID0_RXF7EIDL_bit
0x0D67       [0]    EID1_RXF7EIDL_bit
0x0D68       [0]    SID7_RXF8SIDH_bit
0x0D68       [0]    SID6_RXF8SIDH_bit
0x0D68       [0]    SID8_RXF8SIDH_bit
0x0D68       [0]    SID10_RXF8SIDH_bit
0x0D68       [0]    SID9_RXF8SIDH_bit
0x0D68       [0]    SID5_RXF8SIDH_bit
0x0D68       [1]    RXF8SIDH
0x0D68       [0]    SID3_RXF8SIDH_bit
0x0D68       [0]    SID4_RXF8SIDH_bit
0x0D69       [0]    SID1_RXF8SIDL_bit
0x0D69       [0]    SID0_RXF8SIDL_bit
0x0D69       [0]    EXIDEN_RXF8SIDL_bit
0x0D69       [0]    SID2_RXF8SIDL_bit
0x0D69       [0]    EXIDE_RXF8SIDL_bit
0x0D69       [1]    RXF8SIDL
0x0D69       [0]    EID16_RXF8SIDL_bit
0x0D69       [0]    EID17_RXF8SIDL_bit
0x0D6A       [0]    EID13_RXF8EIDH_bit
0x0D6A       [0]    EID12_RXF8EIDH_bit
0x0D6A       [0]    EID15_RXF8EIDH_bit
0x0D6A       [0]    EID14_RXF8EIDH_bit
0x0D6A       [0]    EID11_RXF8EIDH_bit
0x0D6A       [0]    EID8_RXF8EIDH_bit
0x0D6A       [1]    RXF8EIDH
0x0D6A       [0]    EID10_RXF8EIDH_bit
0x0D6A       [0]    EID9_RXF8EIDH_bit
0x0D6B       [0]    EID6_RXF8EIDL_bit
0x0D6B       [0]    EID5_RXF8EIDL_bit
0x0D6B       [1]    RXF8EIDL
0x0D6B       [0]    EID7_RXF8EIDL_bit
0x0D6B       [0]    EID4_RXF8EIDL_bit
0x0D6B       [0]    EID1_RXF8EIDL_bit
0x0D6B       [0]    EID2_RXF8EIDL_bit
0x0D6B       [0]    EID3_RXF8EIDL_bit
0x0D6B       [0]    EID0_RXF8EIDL_bit
0x0D70       [0]    SID9_RXF9SIDH_bit
0x0D70       [0]    SID8_RXF9SIDH_bit
0x0D70       [1]    RXF9SIDH
0x0D70       [0]    SID10_RXF9SIDH_bit
0x0D70       [0]    SID3_RXF9SIDH_bit
0x0D70       [0]    SID4_RXF9SIDH_bit
0x0D70       [0]    SID5_RXF9SIDH_bit
0x0D70       [0]    SID7_RXF9SIDH_bit
0x0D70       [0]    SID6_RXF9SIDH_bit
0x0D71       [0]    SID2_RXF9SIDL_bit
0x0D71       [0]    EXIDEN_RXF9SIDL_bit
0x0D71       [1]    RXF9SIDL
0x0D71       [0]    EID17_RXF9SIDL_bit
0x0D71       [0]    EID16_RXF9SIDL_bit
0x0D71       [0]    EXIDE_RXF9SIDL_bit
0x0D71       [0]    SID1_RXF9SIDL_bit
0x0D71       [0]    SID0_RXF9SIDL_bit
0x0D72       [0]    EID14_RXF9EIDH_bit
0x0D72       [0]    EID15_RXF9EIDH_bit
0x0D72       [1]    RXF9EIDH
0x0D72       [0]    EID9_RXF9EIDH_bit
0x0D72       [0]    EID10_RXF9EIDH_bit
0x0D72       [0]    EID11_RXF9EIDH_bit
0x0D72       [0]    EID13_RXF9EIDH_bit
0x0D72       [0]    EID12_RXF9EIDH_bit
0x0D72       [0]    EID8_RXF9EIDH_bit
0x0D73       [0]    EID7_RXF9EIDL_bit
0x0D73       [1]    RXF9EIDL
0x0D73       [0]    EID6_RXF9EIDL_bit
0x0D73       [0]    EID2_RXF9EIDL_bit
0x0D73       [0]    EID3_RXF9EIDL_bit
0x0D73       [0]    EID4_RXF9EIDL_bit
0x0D73       [0]    EID5_RXF9EIDL_bit
0x0D73       [0]    EID0_RXF9EIDL_bit
0x0D73       [0]    EID1_RXF9EIDL_bit
0x0D74       [0]    SID9_RXF10SIDH_bit
0x0D74       [0]    SID10_RXF10SIDH_bit
0x0D74       [0]    SID7_RXF10SIDH_bit
0x0D74       [0]    SID8_RXF10SIDH_bit
0x0D74       [0]    SID6_RXF10SIDH_bit
0x0D74       [0]    SID4_RXF10SIDH_bit
0x0D74       [0]    SID3_RXF10SIDH_bit
0x0D74       [1]    RXF10SIDH
0x0D74       [0]    SID5_RXF10SIDH_bit
0x0D75       [0]    EXIDE_RXF10SIDL_bit
0x0D75       [0]    SID0_RXF10SIDL_bit
0x0D75       [0]    EID16_RXF10SIDL_bit
0x0D75       [0]    EID17_RXF10SIDL_bit
0x0D75       [0]    EXIDEN_RXF10SIDL_bit
0x0D75       [1]    RXF10SIDL
0x0D75       [0]    SID1_RXF10SIDL_bit
0x0D75       [0]    SID2_RXF10SIDL_bit
0x0D76       [0]    EID8_RXF10EIDH_bit
0x0D76       [0]    EID13_RXF10EIDH_bit
0x0D76       [0]    EID14_RXF10EIDH_bit
0x0D76       [0]    EID15_RXF10EIDH_bit
0x0D76       [0]    EID12_RXF10EIDH_bit
0x0D76       [0]    EID9_RXF10EIDH_bit
0x0D76       [0]    EID10_RXF10EIDH_bit
0x0D76       [0]    EID11_RXF10EIDH_bit
0x0D76       [1]    RXF10EIDH
0x0D77       [0]    EID3_RXF10EIDL_bit
0x0D77       [0]    EID2_RXF10EIDL_bit
0x0D77       [0]    EID1_RXF10EIDL_bit
0x0D77       [0]    EID6_RXF10EIDL_bit
0x0D77       [0]    EID7_RXF10EIDL_bit
0x0D77       [0]    EID4_RXF10EIDL_bit
0x0D77       [0]    EID5_RXF10EIDL_bit
0x0D77       [0]    EID0_RXF10EIDL_bit
0x0D77       [1]    RXF10EIDL
0x0D78       [0]    SID6_RXF11SIDH_bit
0x0D78       [0]    SID5_RXF11SIDH_bit
0x0D78       [0]    SID4_RXF11SIDH_bit
0x0D78       [0]    SID7_RXF11SIDH_bit
0x0D78       [0]    SID10_RXF11SIDH_bit
0x0D78       [0]    SID9_RXF11SIDH_bit
0x0D78       [0]    SID8_RXF11SIDH_bit
0x0D78       [1]    RXF11SIDH
0x0D78       [0]    SID3_RXF11SIDH_bit
0x0D79       [0]    EXIDE_RXF11SIDL_bit
0x0D79       [0]    EID17_RXF11SIDL_bit
0x0D79       [0]    SID0_RXF11SIDL_bit
0x0D79       [0]    EXIDEN_RXF11SIDL_bit
0x0D79       [0]    SID2_RXF11SIDL_bit
0x0D79       [0]    SID1_RXF11SIDL_bit
0x0D79       [1]    RXF11SIDL
0x0D79       [0]    EID16_RXF11SIDL_bit
0x0D7A       [0]    EID12_RXF11EIDH_bit
0x0D7A       [0]    EID11_RXF11EIDH_bit
0x0D7A       [0]    EID10_RXF11EIDH_bit
0x0D7A       [0]    EID15_RXF11EIDH_bit
0x0D7A       [0]    EID14_RXF11EIDH_bit
0x0D7A       [0]    EID13_RXF11EIDH_bit
0x0D7A       [1]    RXF11EIDH
0x0D7A       [0]    EID8_RXF11EIDH_bit
0x0D7A       [0]    EID9_RXF11EIDH_bit
0x0D7B       [0]    EID4_RXF11EIDL_bit
0x0D7B       [0]    EID3_RXF11EIDL_bit
0x0D7B       [0]    EID7_RXF11EIDL_bit
0x0D7B       [0]    EID6_RXF11EIDL_bit
0x0D7B       [0]    EID5_RXF11EIDL_bit
0x0D7B       [0]    EID2_RXF11EIDL_bit
0x0D7B       [1]    RXF11EIDL
0x0D7B       [0]    EID0_RXF11EIDL_bit
0x0D7B       [0]    EID1_RXF11EIDL_bit
0x0D80       [0]    SID7_RXF12SIDH_bit
0x0D80       [0]    SID6_RXF12SIDH_bit
0x0D80       [0]    SID8_RXF12SIDH_bit
0x0D80       [0]    SID10_RXF12SIDH_bit
0x0D80       [0]    SID9_RXF12SIDH_bit
0x0D80       [0]    SID3_RXF12SIDH_bit
0x0D80       [1]    RXF12SIDH
0x0D80       [0]    SID5_RXF12SIDH_bit
0x0D80       [0]    SID4_RXF12SIDH_bit
0x0D81       [0]    SID1_RXF12SIDL_bit
0x0D81       [0]    SID0_RXF12SIDL_bit
0x0D81       [0]    EXIDEN_RXF12SIDL_bit
0x0D81       [0]    SID2_RXF12SIDL_bit
0x0D81       [0]    EID16_RXF12SIDL_bit
0x0D81       [1]    RXF12SIDL
0x0D81       [0]    EXIDE_RXF12SIDL_bit
0x0D81       [0]    EID17_RXF12SIDL_bit
0x0D82       [0]    EID14_RXF12EIDH_bit
0x0D82       [0]    EID13_RXF12EIDH_bit
0x0D82       [1]    RXF12EIDH
0x0D82       [0]    EID15_RXF12EIDH_bit
0x0D82       [0]    EID12_RXF12EIDH_bit
0x0D82       [0]    EID9_RXF12EIDH_bit
0x0D82       [0]    EID8_RXF12EIDH_bit
0x0D82       [0]    EID11_RXF12EIDH_bit
0x0D82       [0]    EID10_RXF12EIDH_bit
0x0D83       [0]    EID6_RXF12EIDL_bit
0x0D83       [0]    EID5_RXF12EIDL_bit
0x0D83       [1]    RXF12EIDL
0x0D83       [0]    EID7_RXF12EIDL_bit
0x0D83       [0]    EID1_RXF12EIDL_bit
0x0D83       [0]    EID0_RXF12EIDL_bit
0x0D83       [0]    EID2_RXF12EIDL_bit
0x0D83       [0]    EID4_RXF12EIDL_bit
0x0D83       [0]    EID3_RXF12EIDL_bit
0x0D84       [0]    SID9_RXF13SIDH_bit
0x0D84       [0]    SID10_RXF13SIDH_bit
0x0D84       [1]    RXF13SIDH
0x0D84       [0]    SID8_RXF13SIDH_bit
0x0D84       [0]    SID4_RXF13SIDH_bit
0x0D84       [0]    SID3_RXF13SIDH_bit
0x0D84       [0]    SID5_RXF13SIDH_bit
0x0D84       [0]    SID7_RXF13SIDH_bit
0x0D84       [0]    SID6_RXF13SIDH_bit
0x0D85       [0]    EXIDEN_RXF13SIDL_bit
0x0D85       [1]    RXF13SIDL
0x0D85       [0]    SID2_RXF13SIDL_bit
0x0D85       [0]    EXIDE_RXF13SIDL_bit
0x0D85       [0]    EID17_RXF13SIDL_bit
0x0D85       [0]    EID16_RXF13SIDL_bit
0x0D85       [0]    SID1_RXF13SIDL_bit
0x0D85       [0]    SID0_RXF13SIDL_bit
0x0D86       [0]    EID15_RXF13EIDH_bit
0x0D86       [1]    RXF13EIDH
0x0D86       [0]    EID14_RXF13EIDH_bit
0x0D86       [0]    EID10_RXF13EIDH_bit
0x0D86       [0]    EID9_RXF13EIDH_bit
0x0D86       [0]    EID8_RXF13EIDH_bit
0x0D86       [0]    EID13_RXF13EIDH_bit
0x0D86       [0]    EID12_RXF13EIDH_bit
0x0D86       [0]    EID11_RXF13EIDH_bit
0x0D87       [0]    EID7_RXF13EIDL_bit
0x0D87       [1]    RXF13EIDL
0x0D87       [0]    EID3_RXF13EIDL_bit
0x0D87       [0]    EID5_RXF13EIDL_bit
0x0D87       [0]    EID4_RXF13EIDL_bit
0x0D87       [0]    EID2_RXF13EIDL_bit
0x0D87       [0]    EID0_RXF13EIDL_bit
0x0D87       [0]    EID6_RXF13EIDL_bit
0x0D87       [0]    EID1_RXF13EIDL_bit
0x0D88       [1]    RXF14SIDH
0x0D88       [0]    SID10_RXF14SIDH_bit
0x0D88       [0]    SID6_RXF14SIDH_bit
0x0D88       [0]    SID5_RXF14SIDH_bit
0x0D88       [0]    SID4_RXF14SIDH_bit
0x0D88       [0]    SID3_RXF14SIDH_bit
0x0D88       [0]    SID9_RXF14SIDH_bit
0x0D88       [0]    SID8_RXF14SIDH_bit
0x0D88       [0]    SID7_RXF14SIDH_bit
0x0D89       [1]    RXF14SIDL
0x0D89       [0]    SID0_RXF14SIDL_bit
0x0D89       [0]    SID1_RXF14SIDL_bit
0x0D89       [0]    SID2_RXF14SIDL_bit
0x0D89       [0]    EID16_RXF14SIDL_bit
0x0D89       [0]    EID17_RXF14SIDL_bit
0x0D89       [0]    EXIDE_RXF14SIDL_bit
0x0D89       [0]    EXIDEN_RXF14SIDL_bit
0x0D8A       [0]    EID10_RXF14EIDH_bit
0x0D8A       [0]    EID9_RXF14EIDH_bit
0x0D8A       [0]    EID11_RXF14EIDH_bit
0x0D8A       [0]    EID8_RXF14EIDH_bit
0x0D8A       [0]    EID12_RXF14EIDH_bit
0x0D8A       [0]    EID14_RXF14EIDH_bit
0x0D8A       [0]    EID15_RXF14EIDH_bit
0x0D8A       [0]    EID13_RXF14EIDH_bit
0x0D8A       [1]    RXF14EIDH
0x0D8B       [0]    EID5_RXF14EIDL_bit
0x0D8B       [0]    EID4_RXF14EIDL_bit
0x0D8B       [0]    EID7_RXF14EIDL_bit
0x0D8B       [0]    EID6_RXF14EIDL_bit
0x0D8B       [0]    EID3_RXF14EIDL_bit
0x0D8B       [0]    EID0_RXF14EIDL_bit
0x0D8B       [1]    RXF14EIDL
0x0D8B       [0]    EID2_RXF14EIDL_bit
0x0D8B       [0]    EID1_RXF14EIDL_bit
0x0D90       [0]    SID8_RXF15SIDH_bit
0x0D90       [0]    SID7_RXF15SIDH_bit
0x0D90       [0]    SID10_RXF15SIDH_bit
0x0D90       [0]    SID9_RXF15SIDH_bit
0x0D90       [0]    SID6_RXF15SIDH_bit
0x0D90       [1]    RXF15SIDH
0x0D90       [0]    SID3_RXF15SIDH_bit
0x0D90       [0]    SID5_RXF15SIDH_bit
0x0D90       [0]    SID4_RXF15SIDH_bit
0x0D91       [0]    EXIDEN_RXF15SIDL_bit
0x0D91       [1]    RXF15SIDL
0x0D91       [0]    SID1_RXF15SIDL_bit
0x0D91       [0]    SID2_RXF15SIDL_bit
0x0D91       [0]    EID17_RXF15SIDL_bit
0x0D91       [0]    EID16_RXF15SIDL_bit
0x0D91       [0]    SID0_RXF15SIDL_bit
0x0D91       [0]    EXIDE_RXF15SIDL_bit
0x0D92       [0]    EID10_RXF15EIDH_bit
0x0D92       [0]    EID9_RXF15EIDH_bit
0x0D92       [0]    EID14_RXF15EIDH_bit
0x0D92       [0]    EID15_RXF15EIDH_bit
0x0D92       [0]    EID13_RXF15EIDH_bit
0x0D92       [0]    EID11_RXF15EIDH_bit
0x0D92       [0]    EID12_RXF15EIDH_bit
0x0D92       [0]    EID8_RXF15EIDH_bit
0x0D92       [1]    RXF15EIDH
0x0D93       [0]    EID3_RXF15EIDL_bit
0x0D93       [0]    EID2_RXF15EIDL_bit
0x0D93       [0]    EID0_RXF15EIDL_bit
0x0D93       [0]    EID1_RXF15EIDL_bit
0x0D93       [0]    EID5_RXF15EIDL_bit
0x0D93       [0]    EID6_RXF15EIDL_bit
0x0D93       [0]    EID7_RXF15EIDL_bit
0x0D93       [0]    EID4_RXF15EIDL_bit
0x0D93       [1]    RXF15EIDL
0x0DD4       [0]    RXF2EN_bit
0x0DD4       [0]    RXF4EN_bit
0x0DD4       [0]    RXF7EN_bit
0x0DD4       [0]    RXF3EN_bit
0x0DD4       [0]    RXF0EN_bit
0x0DD4       [0]    RXF6EN_bit
0x0DD4       [0]    RXF5EN_bit
0x0DD4       [1]    RXFCON0
0x0DD4       [0]    RXF1EN_bit
0x0DD5       [0]    RXF10EN_bit
0x0DD5       [0]    RXF9EN_bit
0x0DD5       [0]    RXF8EN_bit
0x0DD5       [0]    RXF14EN_bit
0x0DD5       [1]    RXFCON1
0x0DD5       [0]    RXF15EN_bit
0x0DD5       [0]    RXF11EN_bit
0x0DD5       [0]    RXF12EN_bit
0x0DD5       [0]    RXF13EN_bit
0x0DD8       [0]    FLC1_bit
0x0DD8       [0]    FLC0_bit
0x0DD8       [0]    DFLC4_bit
0x0DD8       [0]    FLC4_bit
0x0DD8       [0]    FLC3_bit
0x0DD8       [0]    FLC2_bit
0x0DD8       [0]    DFLC1_bit
0x0DD8       [0]    DFLC0_bit
0x0DD8       [1]    SDFLC
0x0DD8       [0]    DFLC2_bit
0x0DD8       [0]    DFLC3_bit
0x0DE0       [0]    F1BP_0_bit
0x0DE0       [0]    F0BP_3_bit
0x0DE0       [0]    F0BP_2_bit
0x0DE0       [0]    F1BP_3_bit
0x0DE0       [1]    RXFBCON0
0x0DE0       [0]    F1BP_1_bit
0x0DE0       [0]    F1BP_2_bit
0x0DE0       [0]    F0BP_1_bit
0x0DE0       [0]    F0BP_0_bit
0x0DE1       [0]    F2BP_3_bit
0x0DE1       [0]    F3BP_0_bit
0x0DE1       [0]    F3BP_1_bit
0x0DE1       [1]    RXFBCON1
0x0DE1       [0]    F2BP_0_bit
0x0DE1       [0]    F2BP_1_bit
0x0DE1       [0]    F2BP_2_bit
0x0DE1       [0]    F3BP_3_bit
0x0DE1       [0]    F3BP_2_bit
0x0DE2       [0]    F5BP_3_bit
0x0DE2       [0]    F4BP_1_bit
0x0DE2       [0]    F4BP_2_bit
0x0DE2       [0]    F4BP_3_bit
0x0DE2       [0]    F4BP_0_bit
0x0DE2       [0]    F5BP_2_bit
0x0DE2       [0]    F5BP_1_bit
0x0DE2       [1]    RXFBCON2
0x0DE2       [0]    F5BP_0_bit
0x0DE3       [0]    F6BP_0_bit
0x0DE3       [0]    F6BP_3_bit
0x0DE3       [0]    F6BP_2_bit
0x0DE3       [0]    F7BP_1_bit
0x0DE3       [0]    F7BP_0_bit
0x0DE3       [1]    RXFBCON3
0x0DE3       [0]    F6BP_1_bit
0x0DE3       [0]    F7BP_3_bit
0x0DE3       [0]    F7BP_2_bit
0x0DE4       [0]    F8BP_2_bit
0x0DE4       [0]    F8BP_1_bit
0x0DE4       [0]    F8BP_0_bit
0x0DE4       [0]    F9BP_1_bit
0x0DE4       [0]    F9BP_3_bit
0x0DE4       [0]    F9BP_2_bit
0x0DE4       [0]    F8BP_3_bit
0x0DE4       [1]    RXFBCON4
0x0DE4       [0]    F9BP_0_bit
0x0DE5       [0]    F11BP_1_bit
0x0DE5       [0]    F11BP_0_bit
0x0DE5       [0]    F10BP_3_bit
0x0DE5       [0]    F11BP_3_bit
0x0DE5       [1]    RXFBCON5
0x0DE5       [0]    F11BP_2_bit
0x0DE5       [0]    F10BP_0_bit
0x0DE5       [0]    F10BP_2_bit
0x0DE5       [0]    F10BP_1_bit
0x0DE6       [0]    F12BP_3_bit
0x0DE6       [0]    F12BP_1_bit
0x0DE6       [0]    F12BP_2_bit
0x0DE6       [1]    RXFBCON6
0x0DE6       [0]    F13BP_2_bit
0x0DE6       [0]    F13BP_3_bit
0x0DE6       [0]    F13BP_0_bit
0x0DE6       [0]    F13BP_1_bit
0x0DE6       [0]    F12BP_0_bit
0x0DE7       [0]    F15BP_3_bit
0x0DE7       [0]    F14BP_0_bit
0x0DE7       [0]    F15BP_2_bit
0x0DE7       [0]    F14BP_1_bit
0x0DE7       [1]    RXFBCON7
0x0DE7       [0]    F14BP_3_bit
0x0DE7       [0]    F14BP_2_bit
0x0DE7       [0]    F15BP_0_bit
0x0DE7       [0]    F15BP_1_bit
0x0DF0       [0]    FIL2_0_bit
0x0DF0       [0]    FIL0_0_bit
0x0DF0       [0]    FIL3_0_bit
0x0DF0       [0]    FIL2_1_bit
0x0DF0       [0]    FIL3_1_bit
0x0DF0       [0]    FIL1_1_bit
0x0DF0       [1]    MSEL0
0x0DF0       [0]    FIL0_1_bit
0x0DF0       [0]    FIL1_0_bit
0x0DF1       [1]    MSEL1
0x0DF1       [0]    FIL6_0_bit
0x0DF1       [0]    FIL6_1_bit
0x0DF1       [0]    FIL4_0_bit
0x0DF1       [0]    FIL7_0_bit
0x0DF1       [0]    FIL5_0_bit
0x0DF1       [0]    FIL4_1_bit
0x0DF1       [0]    FIL5_1_bit
0x0DF1       [0]    FIL7_1_bit
0x0DF2       [0]    FIL11_1_bit
0x0DF2       [1]    MSEL2
0x0DF2       [0]    FIL11_0_bit
0x0DF2       [0]    FIL8_1_bit
0x0DF2       [0]    FIL9_0_bit
0x0DF2       [0]    FIL10_1_bit
0x0DF2       [0]    FIL8_0_bit
0x0DF2       [0]    FIL9_1_bit
0x0DF2       [0]    FIL10_0_bit
0x0DF3       [0]    FIL12_1_bit
0x0DF3       [1]    MSEL3
0x0DF3       [0]    FIL14_1_bit
0x0DF3       [0]    FIL15_0_bit
0x0DF3       [0]    FIL13_1_bit
0x0DF3       [0]    FIL14_0_bit
0x0DF3       [0]    FIL13_0_bit
0x0DF3       [0]    FIL12_0_bit
0x0DF3       [0]    FIL15_1_bit
0x0DF8       [0]    B2TXEN_bit
0x0DF8       [1]    BSEL0
0x0DF8       [0]    B3TXEN_bit
0x0DF8       [0]    B1TXEN_bit
0x0DF8       [0]    B0TXEN_bit
0x0DF8       [0]    B4TXEN_bit
0x0DF8       [0]    B5TXEN_bit
0x0DFA       [0]    B3IE_bit
0x0DFA       [0]    B2IE_bit
0x0DFA       [0]    B5IE_bit
0x0DFA       [0]    B4IE_bit
0x0DFA       [0]    B1IE_bit
0x0DFA       [0]    RXB0IE_bit
0x0DFA       [1]    BIE0
0x0DFA       [0]    B0IE_bit
0x0DFA       [0]    RXB1IE_bit
0x0DFC       [0]    TXB1IE_bit
0x0DFC       [0]    TXB2IE_bit
0x0DFC       [1]    TXBIE
0x0DFC       [0]    TXB0IE_bit
0x0E20       [0]    RXM1_bit
0x0E20       [0]    RTRRO_bit
0x0E20       [0]    TXPRI0_bit
0x0E20       [0]    RXFUL_bit
0x0E20       [0]    FILHIT4_bit
0x0E20       [0]    FILHIT1_bit
0x0E20       [0]    FILHIT0_bit
0x0E20       [0]    FILHIT3_bit
0x0E20       [0]    FILHIT2_bit
0x0E20       [0]    TXBIF_bit
0x0E20       [0]    TXABT_bit
0x0E20       [1]    B0CON
0x0E20       [0]    RXRTRRO_B0CON_bit
0x0E20       [0]    TXLARB_bit
0x0E20       [0]    RTREN_bit
0x0E20       [0]    TXPRI1_bit
0x0E20       [0]    TXERR_bit
0x0E20       [0]    TXREQ_bit
0x0E21       [0]    SID8_B0SIDH_bit
0x0E21       [0]    SID7_B0SIDH_bit
0x0E21       [0]    SID10_B0SIDH_bit
0x0E21       [0]    SID9_B0SIDH_bit
0x0E21       [0]    SID6_B0SIDH_bit
0x0E21       [0]    SID4_B0SIDH_bit
0x0E21       [0]    SID3_B0SIDH_bit
0x0E21       [1]    B0SIDH
0x0E21       [0]    SID5_B0SIDH_bit
0x0E22       [0]    SRR_bit
0x0E22       [0]    SID0_B0SIDL_bit
0x0E22       [0]    EXID_bit
0x0E22       [0]    EID16_B0SIDL_bit
0x0E22       [0]    EID17_B0SIDL_bit
0x0E22       [0]    SID1_B0SIDL_bit
0x0E22       [1]    B0SIDL
0x0E22       [0]    EXIDE_B0SIDL_bit
0x0E22       [0]    SID2_B0SIDL_bit
0x0E23       [0]    EID14_B0EIDH_bit
0x0E23       [0]    EID13_B0EIDH_bit
0x0E23       [1]    B0EIDH
0x0E23       [0]    EID15_B0EIDH_bit
0x0E23       [0]    EID9_B0EIDH_bit
0x0E23       [0]    EID8_B0EIDH_bit
0x0E23       [0]    EID10_B0EIDH_bit
0x0E23       [0]    EID12_B0EIDH_bit
0x0E23       [0]    EID11_B0EIDH_bit
0x0E24       [1]    B0EIDL
0x0E24       [0]    EID5_B0EIDL_bit
0x0E24       [0]    EID4_B0EIDL_bit
0x0E24       [0]    EID7_B0EIDL_bit
0x0E24       [0]    EID6_B0EIDL_bit
0x0E24       [0]    EID1_B0EIDL_bit
0x0E24       [0]    EID0_B0EIDL_bit
0x0E24       [0]    EID3_B0EIDL_bit
0x0E24       [0]    EID2_B0EIDL_bit
0x0E25       [0]    RB0_B0DLC_bit
0x0E25       [0]    TXRTR_bit
0x0E25       [0]    RB1_B0DLC_bit
0x0E25       [0]    DLC0_bit
0x0E25       [1]    B0DLC
0x0E25       [0]    RXRTR_bit
0x0E25       [0]    DLC1_bit
0x0E25       [0]    DLC2_bit
0x0E25       [0]    DLC3_bit
0x0E25       [0]    RESRB1_bit
0x0E25       [0]    RESRB0_bit
0x0E26       [0]    B0D06_bit
0x0E26       [0]    B0D07_bit
0x0E26       [1]    B0D0
0x0E26       [0]    B0D05_bit
0x0E26       [0]    B0D02_bit
0x0E26       [0]    B0D01_bit
0x0E26       [0]    B0D00_bit
0x0E26       [0]    B0D04_bit
0x0E26       [0]    B0D03_bit
0x0E27       [0]    B0D10_bit
0x0E27       [1]    B0D1
0x0E27       [0]    B0D11_bit
0x0E27       [0]    B0D15_bit
0x0E27       [0]    B0D14_bit
0x0E27       [0]    B0D17_bit
0x0E27       [0]    B0D16_bit
0x0E27       [0]    B0D12_bit
0x0E27       [0]    B0D13_bit
0x0E28       [0]    B0D24_bit
0x0E28       [0]    B0D23_bit
0x0E28       [0]    B0D25_bit
0x0E28       [0]    B0D27_bit
0x0E28       [0]    B0D26_bit
0x0E28       [0]    B0D20_bit
0x0E28       [1]    B0D2
0x0E28       [0]    B0D22_bit
0x0E28       [0]    B0D21_bit
0x0E29       [0]    B0D35_bit
0x0E29       [0]    B0D34_bit
0x0E29       [0]    B0D37_bit
0x0E29       [0]    B0D36_bit
0x0E29       [0]    B0D33_bit
0x0E29       [0]    B0D30_bit
0x0E29       [1]    B0D3
0x0E29       [0]    B0D32_bit
0x0E29       [0]    B0D31_bit
0x0E2A       [0]    B0D47_bit
0x0E2A       [0]    B0D44_bit
0x0E2A       [0]    B0D46_bit
0x0E2A       [0]    B0D45_bit
0x0E2A       [0]    B0D43_bit
0x0E2A       [0]    B0D40_bit
0x0E2A       [1]    B0D4
0x0E2A       [0]    B0D42_bit
0x0E2A       [0]    B0D41_bit
0x0E2B       [0]    B0D56_bit
0x0E2B       [0]    B0D55_bit
0x0E2B       [1]    B0D5
0x0E2B       [0]    B0D57_bit
0x0E2B       [0]    B0D54_bit
0x0E2B       [0]    B0D51_bit
0x0E2B       [0]    B0D50_bit
0x0E2B       [0]    B0D53_bit
0x0E2B       [0]    B0D52_bit
0x0E2C       [0]    B0D66_bit
0x0E2C       [0]    B0D65_bit
0x0E2C       [1]    B0D6
0x0E2C       [0]    B0D67_bit
0x0E2C       [0]    B0D61_bit
0x0E2C       [0]    B0D60_bit
0x0E2C       [0]    B0D62_bit
0x0E2C       [0]    B0D64_bit
0x0E2C       [0]    B0D63_bit
0x0E2D       [0]    B0D76_bit
0x0E2D       [0]    B0D77_bit
0x0E2D       [1]    B0D7
0x0E2D       [0]    B0D75_bit
0x0E2D       [0]    B0D71_bit
0x0E2D       [0]    B0D72_bit
0x0E2D       [0]    B0D70_bit
0x0E2D       [0]    B0D74_bit
0x0E2D       [0]    B0D73_bit
0x0E2E       [0]    REQOP1_bit
0x0E2E       [0]    REQOP2_bit
0x0E2E       [1]    CANSTAT_RO9
0x0E2E       [0]    ICODE2_bit
0x0E2E       [0]    ICODE1_bit
0x0E2E       [0]    ICODE0_bit
0x0E2E       [0]    ICODE3_bit
0x0E2E       [0]    OPMODE_bit
0x0E2E       [0]    ICODE4_bit
0x0E2F       [0]    REQOP2_CANCON_RO9_bit
0x0E2F       [1]    CANCON_RO9
0x0E2F       [0]    REQOP1_CANCON_RO9_bit
0x0E2F       [0]    WIN1_bit
0x0E2F       [0]    WIN0_bit
0x0E2F       [0]    WIN2_bit
0x0E2F       [0]    REQOP0_bit
0x0E2F       [0]    ABAT_bit
0x0E30       [0]    TXLARB_B1CON_bit
0x0E30       [0]    TXERR_B1CON_bit
0x0E30       [0]    TXREQ_B1CON_bit
0x0E30       [0]    TXABT_B1CON_bit
0x0E30       [1]    B1CON
0x0E30       [0]    RXRTRRO_B1CON_bit
0x0E30       [0]    TXBIF_B1CON_bit
0x0E30       [0]    FILHIT3_B1CON_bit
0x0E30       [0]    FILHIT4_B1CON_bit
0x0E30       [0]    FILHIT2_B1CON_bit
0x0E30       [0]    FILHIT0_B1CON_bit
0x0E30       [0]    FILHIT1_B1CON_bit
0x0E30       [0]    RTRRO_B1CON_bit
0x0E30       [0]    TXPRI1_B1CON_bit
0x0E30       [0]    RTREN_B1CON_bit
0x0E30       [0]    TXPRI0_B1CON_bit
0x0E30       [0]    RXM1_B1CON_bit
0x0E30       [0]    RXFUL_B1CON_bit
0x0E31       [0]    SID10_B1SIDH_bit
0x0E31       [1]    B1SIDH
0x0E31       [0]    SID6_B1SIDH_bit
0x0E31       [0]    SID8_B1SIDH_bit
0x0E31       [0]    SID7_B1SIDH_bit
0x0E31       [0]    SID5_B1SIDH_bit
0x0E31       [0]    SID9_B1SIDH_bit
0x0E31       [0]    SID3_B1SIDH_bit
0x0E31       [0]    SID4_B1SIDH_bit
0x0E32       [0]    EXIDE_B1SIDL_bit
0x0E32       [1]    B1SIDL
0x0E32       [0]    EXID_B1SIDL_bit
0x0E32       [0]    EID17_B1SIDL_bit
0x0E32       [0]    EID16_B1SIDL_bit
0x0E32       [0]    SRR_B1SIDL_bit
0x0E32       [0]    SID2_B1SIDL_bit
0x0E32       [0]    SID1_B1SIDL_bit
0x0E32       [0]    SID0_B1SIDL_bit
0x0E33       [0]    EID14_B1EIDH_bit
0x0E33       [0]    EID13_B1EIDH_bit
0x0E33       [1]    B1EIDH
0x0E33       [0]    EID15_B1EIDH_bit
0x0E33       [0]    EID12_B1EIDH_bit
0x0E33       [0]    EID9_B1EIDH_bit
0x0E33       [0]    EID8_B1EIDH_bit
0x0E33       [0]    EID11_B1EIDH_bit
0x0E33       [0]    EID10_B1EIDH_bit
0x0E34       [0]    EID6_B1EIDL_bit
0x0E34       [0]    EID5_B1EIDL_bit
0x0E34       [1]    B1EIDL
0x0E34       [0]    EID7_B1EIDL_bit
0x0E34       [0]    EID1_B1EIDL_bit
0x0E34       [0]    EID0_B1EIDL_bit
0x0E34       [0]    EID2_B1EIDL_bit
0x0E34       [0]    EID4_B1EIDL_bit
0x0E34       [0]    EID3_B1EIDL_bit
0x0E35       [0]    RXRTR_B1DLC_bit
0x0E35       [0]    RESRB1_B1DLC_bit
0x0E35       [0]    RB0_B1DLC_bit
0x0E35       [0]    TXRTR_B1DLC_bit
0x0E35       [0]    RB1_B1DLC_bit
0x0E35       [0]    DLC1_B1DLC_bit
0x0E35       [0]    DLC0_B1DLC_bit
0x0E35       [0]    DLC2_B1DLC_bit
0x0E35       [0]    RESRB0_B1DLC_bit
0x0E35       [0]    DLC3_B1DLC_bit
0x0E35       [1]    B1DLC
0x0E36       [0]    B1D01_bit
0x0E36       [1]    B1D0
0x0E36       [0]    B1D02_bit
0x0E36       [0]    B1D05_bit
0x0E36       [0]    B1D03_bit
0x0E36       [0]    B1D00_bit
0x0E36       [0]    B1D06_bit
0x0E36       [0]    B1D04_bit
0x0E36       [0]    B1D07_bit
0x0E37       [0]    B1D16_bit
0x0E37       [0]    B1D15_bit
0x0E37       [0]    B1D14_bit
0x0E37       [0]    B1D11_bit
0x0E37       [0]    B1D10_bit
0x0E37       [1]    B1D1
0x0E37       [0]    B1D12_bit
0x0E37       [0]    B1D13_bit
0x0E37       [0]    B1D17_bit
0x0E38       [0]    B1D20_bit
0x0E38       [0]    B1D21_bit
0x0E38       [0]    B1D23_bit
0x0E38       [0]    B1D25_bit
0x0E38       [1]    B1D2
0x0E38       [0]    B1D24_bit
0x0E38       [0]    B1D26_bit
0x0E38       [0]    B1D22_bit
0x0E38       [0]    B1D27_bit
0x0E39       [0]    B1D30_bit
0x0E39       [0]    B1D32_bit
0x0E39       [0]    B1D31_bit
0x0E39       [0]    B1D33_bit
0x0E39       [0]    B1D37_bit
0x0E39       [1]    B1D3
0x0E39       [0]    B1D36_bit
0x0E39       [0]    B1D34_bit
0x0E39       [0]    B1D35_bit
0x0E3A       [1]    B1D4
0x0E3A       [0]    B1D45_bit
0x0E3A       [0]    B1D47_bit
0x0E3A       [0]    B1D46_bit
0x0E3A       [0]    B1D42_bit
0x0E3A       [0]    B1D41_bit
0x0E3A       [0]    B1D40_bit
0x0E3A       [0]    B1D44_bit
0x0E3A       [0]    B1D43_bit
0x0E3B       [0]    B1D53_bit
0x0E3B       [0]    B1D51_bit
0x0E3B       [0]    B1D50_bit
0x0E3B       [0]    B1D52_bit
0x0E3B       [1]    B1D5
0x0E3B       [0]    B1D55_bit
0x0E3B       [0]    B1D54_bit
0x0E3B       [0]    B1D57_bit
0x0E3B       [0]    B1D56_bit
0x0E3C       [0]    B1D66_bit
0x0E3C       [0]    B1D67_bit
0x0E3C       [1]    B1D6
0x0E3C       [0]    B1D62_bit
0x0E3C       [0]    B1D63_bit
0x0E3C       [0]    B1D60_bit
0x0E3C       [0]    B1D61_bit
0x0E3C       [0]    B1D65_bit
0x0E3C       [0]    B1D64_bit
0x0E3D       [0]    B1D75_bit
0x0E3D       [0]    B1D70_bit
0x0E3D       [0]    B1D76_bit
0x0E3D       [1]    B1D7
0x0E3D       [0]    B1D71_bit
0x0E3D       [0]    B1D72_bit
0x0E3D       [0]    B1D74_bit
0x0E3D       [0]    B1D77_bit
0x0E3D       [0]    B1D73_bit
0x0E3E       [0]    OPMODE_CANSTAT_RO8_bit
0x0E3E       [0]    ICODE4_CANSTAT_RO8_bit
0x0E3E       [0]    ICODE3_CANSTAT_RO8_bit
0x0E3E       [0]    REQOP2_CANSTAT_RO8_bit
0x0E3E       [1]    CANSTAT_RO8
0x0E3E       [0]    REQOP1_CANSTAT_RO8_bit
0x0E3E       [0]    ICODE1_CANSTAT_RO8_bit
0x0E3E       [0]    ICODE0_CANSTAT_RO8_bit
0x0E3E       [0]    ICODE2_CANSTAT_RO8_bit
0x0E3F       [0]    WIN2_CANCON_RO8_bit
0x0E3F       [0]    WIN1_CANCON_RO8_bit
0x0E3F       [1]    CANCON_RO8
0x0E3F       [0]    REQOP2_CANCON_RO8_bit
0x0E3F       [0]    REQOP0_CANCON_RO8_bit
0x0E3F       [0]    REQOP1_CANCON_RO8_bit
0x0E3F       [0]    ABAT_CANCON_RO8_bit
0x0E3F       [0]    WIN0_CANCON_RO8_bit
0x0E40       [0]    TXLARB_B2CON_bit
0x0E40       [0]    FILHIT1_B2CON_bit
0x0E40       [0]    TXPRI0_B2CON_bit
0x0E40       [0]    FILHIT3_B2CON_bit
0x0E40       [0]    TXPRI1_B2CON_bit
0x0E40       [0]    FILHIT2_B2CON_bit
0x0E40       [1]    B2CON
0x0E40       [0]    FILHIT4_B2CON_bit
0x0E40       [0]    RTREN_B2CON_bit
0x0E40       [0]    TXERR_B2CON_bit
0x0E40       [0]    TXREQ_B2CON_bit
0x0E40       [0]    FILHIT0_B2CON_bit
0x0E40       [0]    TXBIF_B2CON_bit
0x0E40       [0]    RXRTRRO_B2CON_bit
0x0E40       [0]    RXM1_B2CON_bit
0x0E40       [0]    TXABT_B2CON_bit
0x0E40       [0]    RTRRO_B2CON_bit
0x0E40       [0]    RXFUL_B2CON_bit
0x0E41       [0]    SID8_B2SIDH_bit
0x0E41       [0]    SID9_B2SIDH_bit
0x0E41       [0]    SID10_B2SIDH_bit
0x0E41       [0]    SID7_B2SIDH_bit
0x0E41       [0]    SID3_B2SIDH_bit
0x0E41       [1]    B2SIDH
0x0E41       [0]    SID4_B2SIDH_bit
0x0E41       [0]    SID6_B2SIDH_bit
0x0E41       [0]    SID5_B2SIDH_bit
0x0E42       [0]    SID2_B2SIDL_bit
0x0E42       [0]    SID1_B2SIDL_bit
0x0E42       [1]    B2SIDL
0x0E42       [0]    EXIDE_B2SIDL_bit
0x0E42       [0]    SID0_B2SIDL_bit
0x0E42       [0]    EID17_B2SIDL_bit
0x0E42       [0]    EID16_B2SIDL_bit
0x0E42       [0]    SRR_B2SIDL_bit
0x0E42       [0]    EXID_B2SIDL_bit
0x0E43       [0]    EID14_B2EIDH_bit
0x0E43       [0]    EID13_B2EIDH_bit
0x0E43       [1]    B2EIDH
0x0E43       [0]    EID15_B2EIDH_bit
0x0E43       [0]    EID9_B2EIDH_bit
0x0E43       [0]    EID8_B2EIDH_bit
0x0E43       [0]    EID10_B2EIDH_bit
0x0E43       [0]    EID11_B2EIDH_bit
0x0E43       [0]    EID12_B2EIDH_bit
0x0E44       [0]    EID5_B2EIDL_bit
0x0E44       [0]    EID4_B2EIDL_bit
0x0E44       [0]    EID7_B2EIDL_bit
0x0E44       [0]    EID6_B2EIDL_bit
0x0E44       [0]    EID3_B2EIDL_bit
0x0E44       [1]    B2EIDL
0x0E44       [0]    EID2_B2EIDL_bit
0x0E44       [0]    EID0_B2EIDL_bit
0x0E44       [0]    EID1_B2EIDL_bit
0x0E45       [0]    DLC0_B2DLC_bit
0x0E45       [0]    DLC3_B2DLC_bit
0x0E45       [0]    TXRTR_B2DLC_bit
0x0E45       [0]    RB0_B2DLC_bit
0x0E45       [0]    RB1_B2DLC_bit
0x0E45       [1]    B2DLC
0x0E45       [0]    RXRTR_B2DLC_bit
0x0E45       [0]    DLC2_B2DLC_bit
0x0E45       [0]    DLC1_B2DLC_bit
0x0E45       [0]    RESRB1_B2DLC_bit
0x0E45       [0]    RESRB0_B2DLC_bit
0x0E46       [0]    B2D03_bit
0x0E46       [0]    B2D04_bit
0x0E46       [0]    B2D01_bit
0x0E46       [0]    B2D02_bit
0x0E46       [0]    B2D07_bit
0x0E46       [1]    B2D0
0x0E46       [0]    B2D05_bit
0x0E46       [0]    B2D06_bit
0x0E46       [0]    B2D00_bit
0x0E47       [1]    B2D1
0x0E47       [0]    B2D16_bit
0x0E47       [0]    B2D15_bit
0x0E47       [0]    B2D10_bit
0x0E47       [0]    B2D14_bit
0x0E47       [0]    B2D11_bit
0x0E47       [0]    B2D12_bit
0x0E47       [0]    B2D17_bit
0x0E47       [0]    B2D13_bit
0x0E48       [0]    B2D25_bit
0x0E48       [1]    B2D2
0x0E48       [0]    B2D27_bit
0x0E48       [0]    B2D26_bit
0x0E48       [0]    B2D21_bit
0x0E48       [0]    B2D24_bit
0x0E48       [0]    B2D23_bit
0x0E48       [0]    B2D20_bit
0x0E48       [0]    B2D22_bit
0x0E49       [0]    B2D34_bit
0x0E49       [0]    B2D30_bit
0x0E49       [0]    B2D37_bit
0x0E49       [0]    B2D32_bit
0x0E49       [0]    B2D31_bit
0x0E49       [0]    B2D33_bit
0x0E49       [1]    B2D3
0x0E49       [0]    B2D36_bit
0x0E49       [0]    B2D35_bit
0x0E4A       [1]    B2D4
0x0E4A       [0]    B2D42_bit
0x0E4A       [0]    B2D43_bit
0x0E4A       [0]    B2D46_bit
0x0E4A       [0]    B2D44_bit
0x0E4A       [0]    B2D41_bit
0x0E4A       [0]    B2D47_bit
0x0E4A       [0]    B2D40_bit
0x0E4A       [0]    B2D45_bit
0x0E4B       [0]    B2D56_bit
0x0E4B       [0]    B2D53_bit
0x0E4B       [0]    B2D51_bit
0x0E4B       [0]    B2D55_bit
0x0E4B       [0]    B2D54_bit
0x0E4B       [0]    B2D50_bit
0x0E4B       [1]    B2D5
0x0E4B       [0]    B2D52_bit
0x0E4B       [0]    B2D57_bit
0x0E4C       [0]    B2D65_bit
0x0E4C       [0]    B2D63_bit
0x0E4C       [1]    B2D6
0x0E4C       [0]    B2D60_bit
0x0E4C       [0]    B2D67_bit
0x0E4C       [0]    B2D61_bit
0x0E4C       [0]    B2D64_bit
0x0E4C       [0]    B2D62_bit
0x0E4C       [0]    B2D66_bit
0x0E4D       [0]    B2D77_bit
0x0E4D       [0]    B2D76_bit
0x0E4D       [0]    B2D71_bit
0x0E4D       [1]    B2D7
0x0E4D       [0]    B2D70_bit
0x0E4D       [0]    B2D72_bit
0x0E4D       [0]    B2D75_bit
0x0E4D       [0]    B2D74_bit
0x0E4D       [0]    B2D73_bit
0x0E4E       [0]    ICODE2_CANSTAT_RO7_bit
0x0E4E       [0]    ICODE3_CANSTAT_RO7_bit
0x0E4E       [0]    ICODE0_CANSTAT_RO7_bit
0x0E4E       [0]    ICODE1_CANSTAT_RO7_bit
0x0E4E       [0]    ICODE4_CANSTAT_RO7_bit
0x0E4E       [0]    REQOP2_CANSTAT_RO7_bit
0x0E4E       [1]    CANSTAT_RO7
0x0E4E       [0]    OPMODE_CANSTAT_RO7_bit
0x0E4E       [0]    REQOP1_CANSTAT_RO7_bit
0x0E4F       [0]    WIN0_CANCON_RO7_bit
0x0E4F       [0]    WIN1_CANCON_RO7_bit
0x0E4F       [0]    WIN2_CANCON_RO7_bit
0x0E4F       [0]    REQOP0_CANCON_RO7_bit
0x0E4F       [0]    ABAT_CANCON_RO7_bit
0x0E4F       [0]    REQOP1_CANCON_RO7_bit
0x0E4F       [1]    CANCON_RO7
0x0E4F       [0]    REQOP2_CANCON_RO7_bit
0x0E50       [0]    TXERR_B3CON_bit
0x0E50       [0]    FILHIT2_B3CON_bit
0x0E50       [0]    RTREN_B3CON_bit
0x0E50       [0]    TXREQ_B3CON_bit
0x0E50       [0]    TXABT_B3CON_bit
0x0E50       [0]    TXBIF_B3CON_bit
0x0E50       [0]    FILHIT1_B3CON_bit
0x0E50       [0]    TXLARB_B3CON_bit
0x0E50       [0]    TXPRI1_B3CON_bit
0x0E50       [0]    RTRRO_B3CON_bit
0x0E50       [0]    RXM1_B3CON_bit
0x0E50       [0]    FILHIT4_B3CON_bit
0x0E50       [1]    B3CON
0x0E50       [0]    FILHIT3_B3CON_bit
0x0E50       [0]    TXPRI0_B3CON_bit
0x0E50       [0]    FILHIT0_B3CON_bit
0x0E50       [0]    RXFUL_B3CON_bit
0x0E50       [0]    RXRTRRO_B3CON_bit
0x0E51       [0]    SID9_B3SIDH_bit
0x0E51       [0]    SID4_B3SIDH_bit
0x0E51       [0]    SID8_B3SIDH_bit
0x0E51       [0]    SID6_B3SIDH_bit
0x0E51       [0]    SID5_B3SIDH_bit
0x0E51       [0]    SID7_B3SIDH_bit
0x0E51       [0]    SID3_B3SIDH_bit
0x0E51       [1]    B3SIDH
0x0E51       [0]    SID10_B3SIDH_bit
0x0E52       [0]    EXIDE_B3SIDL_bit
0x0E52       [0]    SID2_B3SIDL_bit
0x0E52       [0]    EXID_B3SIDL_bit
0x0E52       [1]    B3SIDL
0x0E52       [0]    EID16_B3SIDL_bit
0x0E52       [0]    EID17_B3SIDL_bit
0x0E52       [0]    SRR_B3SIDL_bit
0x0E52       [0]    SID0_B3SIDL_bit
0x0E52       [0]    SID1_B3SIDL_bit
0x0E53       [0]    EID11_B3EIDH_bit
0x0E53       [1]    B3EIDH
0x0E53       [0]    EID15_B3EIDH_bit
0x0E53       [0]    EID13_B3EIDH_bit
0x0E53       [0]    EID12_B3EIDH_bit
0x0E53       [0]    EID14_B3EIDH_bit
0x0E53       [0]    EID10_B3EIDH_bit
0x0E53       [0]    EID9_B3EIDH_bit
0x0E53       [0]    EID8_B3EIDH_bit
0x0E54       [0]    EID3_B3EIDL_bit
0x0E54       [0]    EID6_B3EIDL_bit
0x0E54       [0]    EID2_B3EIDL_bit
0x0E54       [0]    EID7_B3EIDL_bit
0x0E54       [1]    B3EIDL
0x0E54       [0]    EID0_B3EIDL_bit
0x0E54       [0]    EID4_B3EIDL_bit
0x0E54       [0]    EID5_B3EIDL_bit
0x0E54       [0]    EID1_B3EIDL_bit
0x0E55       [0]    DLC3_B3DLC_bit
0x0E55       [0]    RESRB0_B3DLC_bit
0x0E55       [0]    DLC2_B3DLC_bit
0x0E55       [0]    DLC0_B3DLC_bit
0x0E55       [0]    DLC1_B3DLC_bit
0x0E55       [0]    RESRB1_B3DLC_bit
0x0E55       [0]    RB0_B3DLC_bit
0x0E55       [1]    B3DLC
0x0E55       [0]    TXRTR_B3DLC_bit
0x0E55       [0]    RB1_B3DLC_bit
0x0E55       [0]    RXRTR_B3DLC_bit
0x0E56       [0]    B3D07_bit
0x0E56       [1]    B3D0
0x0E56       [0]    B3D03_bit
0x0E56       [0]    B3D01_bit
0x0E56       [0]    B3D02_bit
0x0E56       [0]    B3D00_bit
0x0E56       [0]    B3D06_bit
0x0E56       [0]    B3D04_bit
0x0E56       [0]    B3D05_bit
0x0E57       [0]    B3D14_bit
0x0E57       [0]    B3D13_bit
0x0E57       [0]    B3D10_bit
0x0E57       [0]    B3D11_bit
0x0E57       [0]    B3D12_bit
0x0E57       [1]    B3D1
0x0E57       [0]    B3D17_bit
0x0E57       [0]    B3D16_bit
0x0E57       [0]    B3D15_bit
0x0E58       [0]    B3D21_bit
0x0E58       [1]    B3D2
0x0E58       [0]    B3D20_bit
0x0E58       [0]    B3D22_bit
0x0E58       [0]    B3D25_bit
0x0E58       [0]    B3D26_bit
0x0E58       [0]    B3D27_bit
0x0E58       [0]    B3D23_bit
0x0E58       [0]    B3D24_bit
0x0E59       [0]    B3D33_bit
0x0E59       [0]    B3D32_bit
0x0E59       [0]    B3D35_bit
0x0E59       [0]    B3D34_bit
0x0E59       [0]    B3D31_bit
0x0E59       [0]    B3D37_bit
0x0E59       [0]    B3D36_bit
0x0E59       [1]    B3D3
0x0E59       [0]    B3D30_bit
0x0E5A       [0]    B3D46_bit
0x0E5A       [0]    B3D45_bit
0x0E5A       [1]    B3D4
0x0E5A       [0]    B3D47_bit
0x0E5A       [0]    B3D44_bit
0x0E5A       [0]    B3D41_bit
0x0E5A       [0]    B3D40_bit
0x0E5A       [0]    B3D43_bit
0x0E5A       [0]    B3D42_bit
0x0E5B       [0]    B3D56_bit
0x0E5B       [0]    B3D55_bit
0x0E5B       [1]    B3D5
0x0E5B       [0]    B3D57_bit
0x0E5B       [0]    B3D51_bit
0x0E5B       [0]    B3D50_bit
0x0E5B       [0]    B3D52_bit
0x0E5B       [0]    B3D54_bit
0x0E5B       [0]    B3D53_bit
0x0E5C       [0]    B3D66_bit
0x0E5C       [0]    B3D67_bit
0x0E5C       [1]    B3D6
0x0E5C       [0]    B3D65_bit
0x0E5C       [0]    B3D60_bit
0x0E5C       [0]    B3D61_bit
0x0E5C       [0]    B3D62_bit
0x0E5C       [0]    B3D64_bit
0x0E5C       [0]    B3D63_bit
0x0E5D       [0]    B3D76_bit
0x0E5D       [0]    B3D77_bit
0x0E5D       [1]    B3D7
0x0E5D       [0]    B3D72_bit
0x0E5D       [0]    B3D71_bit
0x0E5D       [0]    B3D70_bit
0x0E5D       [0]    B3D75_bit
0x0E5D       [0]    B3D74_bit
0x0E5D       [0]    B3D73_bit
0x0E5E       [0]    REQOP2_CANSTAT_RO6_bit
0x0E5E       [1]    CANSTAT_RO6
0x0E5E       [0]    REQOP1_CANSTAT_RO6_bit
0x0E5E       [0]    ICODE1_CANSTAT_RO6_bit
0x0E5E       [0]    ICODE0_CANSTAT_RO6_bit
0x0E5E       [0]    ICODE2_CANSTAT_RO6_bit
0x0E5E       [0]    ICODE4_CANSTAT_RO6_bit
0x0E5E       [0]    ICODE3_CANSTAT_RO6_bit
0x0E5E       [0]    OPMODE_CANSTAT_RO6_bit
0x0E5F       [0]    WIN0_CANCON_RO6_bit
0x0E5F       [0]    WIN1_CANCON_RO6_bit
0x0E5F       [1]    CANCON_RO6
0x0E5F       [0]    REQOP0_CANCON_RO6_bit
0x0E5F       [0]    REQOP2_CANCON_RO6_bit
0x0E5F       [0]    REQOP1_CANCON_RO6_bit
0x0E5F       [0]    WIN2_CANCON_RO6_bit
0x0E5F       [0]    ABAT_CANCON_RO6_bit
0x0E60       [0]    TXABT_B4CON_bit
0x0E60       [0]    TXLARB_B4CON_bit
0x0E60       [0]    TXERR_B4CON_bit
0x0E60       [1]    B4CON
0x0E60       [0]    RXRTRRO_B4CON_bit
0x0E60       [0]    TXBIF_B4CON_bit
0x0E60       [0]    FILHIT3_B4CON_bit
0x0E60       [0]    FILHIT2_B4CON_bit
0x0E60       [0]    FILHIT1_B4CON_bit
0x0E60       [0]    RXM1_B4CON_bit
0x0E60       [0]    RTRRO_B4CON_bit
0x0E60       [0]    FILHIT4_B4CON_bit
0x0E60       [0]    TXPRI1_B4CON_bit
0x0E60       [0]    RTREN_B4CON_bit
0x0E60       [0]    TXREQ_B4CON_bit
0x0E60       [0]    FILHIT0_B4CON_bit
0x0E60       [0]    RXFUL_B4CON_bit
0x0E60       [0]    TXPRI0_B4CON_bit
0x0E61       [1]    B4SIDH
0x0E61       [0]    SID5_B4SIDH_bit
0x0E61       [0]    SID6_B4SIDH_bit
0x0E61       [0]    SID3_B4SIDH_bit
0x0E61       [0]    SID4_B4SIDH_bit
0x0E61       [0]    SID9_B4SIDH_bit
0x0E61       [0]    SID10_B4SIDH_bit
0x0E61       [0]    SID7_B4SIDH_bit
0x0E61       [0]    SID8_B4SIDH_bit
0x0E62       [0]    SID2_B4SIDL_bit
0x0E62       [0]    SID1_B4SIDL_bit
0x0E62       [1]    B4SIDL
0x0E62       [0]    EXIDE_B4SIDL_bit
0x0E62       [0]    SID0_B4SIDL_bit
0x0E62       [0]    EID17_B4SIDL_bit
0x0E62       [0]    EID16_B4SIDL_bit
0x0E62       [0]    SRR_B4SIDL_bit
0x0E62       [0]    EXID_B4SIDL_bit
0x0E63       [0]    EID14_B4EIDH_bit
0x0E63       [0]    EID13_B4EIDH_bit
0x0E63       [1]    B4EIDH
0x0E63       [0]    EID15_B4EIDH_bit
0x0E63       [0]    EID9_B4EIDH_bit
0x0E63       [0]    EID8_B4EIDH_bit
0x0E63       [0]    EID10_B4EIDH_bit
0x0E63       [0]    EID12_B4EIDH_bit
0x0E63       [0]    EID11_B4EIDH_bit
0x0E64       [0]    EID6_B4EIDL_bit
0x0E64       [0]    EID7_B4EIDL_bit
0x0E64       [1]    B4EIDL
0x0E64       [0]    EID5_B4EIDL_bit
0x0E64       [0]    EID1_B4EIDL_bit
0x0E64       [0]    EID2_B4EIDL_bit
0x0E64       [0]    EID0_B4EIDL_bit
0x0E64       [0]    EID4_B4EIDL_bit
0x0E64       [0]    EID3_B4EIDL_bit
0x0E65       [0]    RB0_B4DLC_bit
0x0E65       [0]    TXRTR_B4DLC_bit
0x0E65       [1]    B4DLC
0x0E65       [0]    RB1_B4DLC_bit
0x0E65       [0]    DLC2_B4DLC_bit
0x0E65       [0]    DLC1_B4DLC_bit
0x0E65       [0]    DLC0_B4DLC_bit
0x0E65       [0]    DLC3_B4DLC_bit
0x0E65       [0]    RXRTR_B4DLC_bit
0x0E65       [0]    RESRB1_B4DLC_bit
0x0E65       [0]    RESRB0_B4DLC_bit
0x0E66       [0]    B4D07_bit
0x0E66       [1]    B4D0
0x0E66       [0]    B4D06_bit
0x0E66       [0]    B4D02_bit
0x0E66       [0]    B4D01_bit
0x0E66       [0]    B4D00_bit
0x0E66       [0]    B4D03_bit
0x0E66       [0]    B4D05_bit
0x0E66       [0]    B4D04_bit
0x0E67       [0]    B4D17_bit
0x0E67       [1]    B4D1
0x0E67       [0]    B4D12_bit
0x0E67       [0]    B4D11_bit
0x0E67       [0]    B4D10_bit
0x0E67       [0]    B4D13_bit
0x0E67       [0]    B4D16_bit
0x0E67       [0]    B4D15_bit
0x0E67       [0]    B4D14_bit
0x0E68       [1]    B4D2
0x0E68       [0]    B4D27_bit
0x0E68       [0]    B4D24_bit
0x0E68       [0]    B4D25_bit
0x0E68       [0]    B4D26_bit
0x0E68       [0]    B4D23_bit
0x0E68       [0]    B4D20_bit
0x0E68       [0]    B4D21_bit
0x0E68       [0]    B4D22_bit
0x0E69       [1]    B4D3
0x0E69       [0]    B4D32_bit
0x0E69       [0]    B4D33_bit
0x0E69       [0]    B4D30_bit
0x0E69       [0]    B4D31_bit
0x0E69       [0]    B4D36_bit
0x0E69       [0]    B4D37_bit
0x0E69       [0]    B4D34_bit
0x0E69       [0]    B4D35_bit
0x0E6A       [0]    B4D42_bit
0x0E6A       [0]    B4D47_bit
0x0E6A       [0]    B4D40_bit
0x0E6A       [0]    B4D41_bit
0x0E6A       [1]    B4D4
0x0E6A       [0]    B4D44_bit
0x0E6A       [0]    B4D45_bit
0x0E6A       [0]    B4D43_bit
0x0E6A       [0]    B4D46_bit
0x0E6B       [0]    B4D54_bit
0x0E6B       [0]    B4D55_bit
0x0E6B       [0]    B4D50_bit
0x0E6B       [0]    B4D53_bit
0x0E6B       [0]    B4D56_bit
0x0E6B       [0]    B4D52_bit
0x0E6B       [1]    B4D5
0x0E6B       [0]    B4D51_bit
0x0E6B       [0]    B4D57_bit
0x0E6C       [0]    B4D67_bit
0x0E6C       [0]    B4D66_bit
0x0E6C       [0]    B4D65_bit
0x0E6C       [0]    B4D61_bit
0x0E6C       [0]    B4D60_bit
0x0E6C       [0]    B4D62_bit
0x0E6C       [0]    B4D64_bit
0x0E6C       [0]    B4D63_bit
0x0E6C       [1]    B4D6
0x0E6D       [0]    B4D72_bit
0x0E6D       [0]    B4D73_bit
0x0E6D       [0]    B4D71_bit
0x0E6D       [1]    B4D7
0x0E6D       [0]    B4D70_bit
0x0E6D       [0]    B46D77_bit
0x0E6D       [0]    B4D77_bit
0x0E6D       [0]    B4D76_bit
0x0E6D       [0]    B4D74_bit
0x0E6D       [0]    B4D75_bit
0x0E6E       [0]    OPMODE_CANSTAT_RO5_bit
0x0E6E       [0]    ICODE4_CANSTAT_RO5_bit
0x0E6E       [0]    REQOP2_CANSTAT_RO5_bit
0x0E6E       [0]    REQOP1_CANSTAT_RO5_bit
0x0E6E       [0]    ICODE3_CANSTAT_RO5_bit
0x0E6E       [0]    ICODE1_CANSTAT_RO5_bit
0x0E6E       [0]    ICODE0_CANSTAT_RO5_bit
0x0E6E       [0]    ICODE2_CANSTAT_RO5_bit
0x0E6E       [1]    CANSTAT_RO5
0x0E6F       [0]    WIN1_CANCON_RO5_bit
0x0E6F       [0]    ABAT_CANCON_RO5_bit
0x0E6F       [0]    REQOP1_CANCON_RO5_bit
0x0E6F       [0]    WIN2_CANCON_RO5_bit
0x0E6F       [0]    WIN0_CANCON_RO5_bit
0x0E6F       [0]    REQOP2_CANCON_RO5_bit
0x0E6F       [1]    CANCON_RO5
0x0E6F       [0]    REQOP0_CANCON_RO5_bit
0x0E70       [0]    FILHIT4_B5CON_bit
0x0E70       [0]    RTRRO_B5CON_bit
0x0E70       [0]    TXBIF_B5CON_bit
0x0E70       [1]    B5CON
0x0E70       [0]    FILHIT1_B5CON_bit
0x0E70       [0]    RXRTRRO_B5CON_bit
0x0E70       [0]    FILHIT3_B5CON_bit
0x0E70       [0]    FILHIT2_B5CON_bit
0x0E70       [0]    RTREN_B5CON_bit
0x0E70       [0]    TXREQ_B5CON_bit
0x0E70       [0]    TXPRI1_B5CON_bit
0x0E70       [0]    RXFUL_B5CON_bit
0x0E70       [0]    TXPRI0_B5CON_bit
0x0E70       [0]    TXABT_B5CON_bit
0x0E70       [0]    FILHIT0_B5CON_bit
0x0E70       [0]    RXM1_B5CON_bit
0x0E70       [0]    TXERR_B5CON_bit
0x0E70       [0]    TXLARB_B5CON_bit
0x0E71       [0]    SID3_B5SIDH_bit
0x0E71       [0]    SID4_B5SIDH_bit
0x0E71       [0]    SID8_B5SIDH_bit
0x0E71       [0]    SID7_B5SIDH_bit
0x0E71       [1]    B5SIDH
0x0E71       [0]    SID10_B5SIDH_bit
0x0E71       [0]    SID9_B5SIDH_bit
0x0E71       [0]    SID6_B5SIDH_bit
0x0E71       [0]    SID5_B5SIDH_bit
0x0E72       [1]    B5SIDL
0x0E72       [0]    EID17_B5SIDL_bit
0x0E72       [0]    SRR_B5SIDL_bit
0x0E72       [0]    EXIDEN_B5SIDL_bit
0x0E72       [0]    EID16_B5SIDL_bit
0x0E72       [0]    SID2_B5SIDL_bit
0x0E72       [0]    SID1_B5SIDL_bit
0x0E72       [0]    SID0_B5SIDL_bit
0x0E72       [0]    EXID_B5SIDL_bit
0x0E73       [1]    B5EIDH
0x0E73       [0]    EID12_B5EIDH_bit
0x0E73       [0]    EID15_B5EIDH_bit
0x0E73       [0]    EID11_B5EIDH_bit
0x0E73       [0]    EID14_B5EIDH_bit
0x0E73       [0]    EID9_B5EIDH_bit
0x0E73       [0]    EID8_B5EIDH_bit
0x0E73       [0]    EID10_B5EIDH_bit
0x0E73       [0]    EID13_B5EIDH_bit
0x0E74       [1]    B5EIDL
0x0E74       [0]    EID3_B5EIDL_bit
0x0E74       [0]    EID4_B5EIDL_bit
0x0E74       [0]    EID7_B5EIDL_bit
0x0E74       [0]    EID0_B5EIDL_bit
0x0E74       [0]    EID2_B5EIDL_bit
0x0E74       [0]    EID1_B5EIDL_bit
0x0E74       [0]    EID5_B5EIDL_bit
0x0E74       [0]    EID6_B5EIDL_bit
0x0E75       [0]    DLC2_B5DLC_bit
0x0E75       [0]    DLC3_B5DLC_bit
0x0E75       [0]    DLC1_B5DLC_bit
0x0E75       [1]    B5DLC
0x0E75       [0]    DLC0_B5DLC_bit
0x0E75       [0]    RB0_B5DLC_bit
0x0E75       [0]    RB1_B5DLC_bit
0x0E75       [0]    RXRTR_B5DLC_bit
0x0E75       [0]    RESRB0_B5DLC_bit
0x0E75       [0]    RESRB1_B5DLC_bit
0x0E76       [0]    B5D07_bit
0x0E76       [0]    B5D01_bit
0x0E76       [0]    B5D02_bit
0x0E76       [1]    B5D0
0x0E76       [0]    B5D00_bit
0x0E76       [0]    B5D03_bit
0x0E76       [0]    B5D06_bit
0x0E76       [0]    B57D07_bit
0x0E76       [0]    B5D04_bit
0x0E76       [0]    B5D05_bit
0x0E77       [0]    B5D14_bit
0x0E77       [0]    B5D13_bit
0x0E77       [0]    B5D15_bit
0x0E77       [0]    B5D17_bit
0x0E77       [0]    B5D16_bit
0x0E77       [0]    B5D10_bit
0x0E77       [1]    B5D1
0x0E77       [0]    B5D12_bit
0x0E77       [0]    B5D11_bit
0x0E78       [0]    B5D25_bit
0x0E78       [0]    B5D24_bit
0x0E78       [0]    B5D26_bit
0x0E78       [0]    B5D23_bit
0x0E78       [0]    B5D27_bit
0x0E78       [0]    B5D20_bit
0x0E78       [1]    B5D2
0x0E78       [0]    B5D21_bit
0x0E78       [0]    B57D23_bit
0x0E78       [0]    B5D22_bit
0x0E79       [0]    B5D31_bit
0x0E79       [0]    B5D30_bit
0x0E79       [0]    B5D37_bit
0x0E79       [0]    B5D33_bit
0x0E79       [0]    B5D34_bit
0x0E79       [0]    B5D35_bit
0x0E79       [0]    B5D36_bit
0x0E79       [0]    B5D32_bit
0x0E79       [1]    B5D3
0x0E7A       [1]    B5D4
0x0E7A       [0]    B5D43_bit
0x0E7A       [0]    B5D44_bit
0x0E7A       [0]    B5D46_bit
0x0E7A       [0]    B5D41_bit
0x0E7A       [0]    B5D40_bit
0x0E7A       [0]    B5D45_bit
0x0E7A       [0]    B5D42_bit
0x0E7A       [0]    B5D47_bit
0x0E7B       [0]    B5D50_bit
0x0E7B       [0]    B5D56_bit
0x0E7B       [0]    B5D54_bit
0x0E7B       [1]    B5D5
0x0E7B       [0]    B5D55_bit
0x0E7B       [0]    B5D57_bit
0x0E7B       [0]    B5D52_bit
0x0E7B       [0]    B5D53_bit
0x0E7B       [0]    B5D51_bit
0x0E7C       [0]    B5D67_bit
0x0E7C       [0]    B5D66_bit
0x0E7C       [0]    B5D61_bit
0x0E7C       [0]    B5D60_bit
0x0E7C       [1]    B5D6
0x0E7C       [0]    B5D62_bit
0x0E7C       [0]    B5D64_bit
0x0E7C       [0]    B5D65_bit
0x0E7C       [0]    B5D63_bit
0x0E7D       [0]    B5D71_bit
0x0E7D       [0]    B5D70_bit
0x0E7D       [0]    B5D72_bit
0x0E7D       [0]    B5D76_bit
0x0E7D       [0]    B5D77_bit
0x0E7D       [1]    B5D7
0x0E7D       [0]    B5D73_bit
0x0E7D       [0]    B5D74_bit
0x0E7D       [0]    B5D75_bit
0x0E7E       [0]    REQOP1_CANSTAT_RO4_bit
0x0E7E       [0]    OPMODE_CANSTAT_RO4_bit
0x0E7E       [1]    CANSTAT_RO4
0x0E7E       [0]    REQOP2_CANSTAT_RO4_bit
0x0E7E       [0]    ICODE0_CANSTAT_RO4_bit
0x0E7E       [0]    ICODE1_CANSTAT_RO4_bit
0x0E7E       [0]    ICODE2_CANSTAT_RO4_bit
0x0E7E       [0]    ICODE4_CANSTAT_RO4_bit
0x0E7E       [0]    ICODE3_CANSTAT_RO4_bit
0x0E7F       [0]    REQOP1_CANCON_RO4_bit
0x0E7F       [0]    REQOP2_CANCON_RO4_bit
0x0E7F       [1]    CANCON_RO4
0x0E7F       [0]    WIN1_CANCON_RO4_bit
0x0E7F       [0]    WIN0_CANCON_RO4_bit
0x0E7F       [0]    WIN2_CANCON_RO4_bit
0x0E7F       [0]    REQOP0_CANCON_RO4_bit
0x0E7F       [0]    ABAT_CANCON_RO4_bit
0x0F00       [0]    SID9_RXF0SIDH_bit
0x0F00       [0]    SID10_RXF0SIDH_bit
0x0F00       [1]    RXF0SIDH
0x0F00       [0]    SID8_RXF0SIDH_bit
0x0F00       [0]    SID6_RXF0SIDH_bit
0x0F00       [0]    SID5_RXF0SIDH_bit
0x0F00       [0]    SID4_RXF0SIDH_bit
0x0F00       [0]    SID7_RXF0SIDH_bit
0x0F00       [0]    SID3_RXF0SIDH_bit
0x0F01       [0]    SID1_RXF0SIDL_bit
0x0F01       [0]    EXIDEN_RXF0SIDL_bit
0x0F01       [0]    SID2_RXF0SIDL_bit
0x0F01       [1]    RXF0SIDL
0x0F01       [0]    EXIDE_RXF0SIDL_bit
0x0F01       [0]    EID17_RXF0SIDL_bit
0x0F01       [0]    EID16_RXF0SIDL_bit
0x0F01       [0]    SID0_RXF0SIDL_bit
0x0F02       [0]    EID12_RXF0EIDH_bit
0x0F02       [0]    EID11_RXF0EIDH_bit
0x0F02       [0]    EID15_RXF0EIDH_bit
0x0F02       [0]    EID14_RXF0EIDH_bit
0x0F02       [0]    EID13_RXF0EIDH_bit
0x0F02       [0]    EID8_RXF0EIDH_bit
0x0F02       [1]    RXF0EIDH
0x0F02       [0]    EID10_RXF0EIDH_bit
0x0F02       [0]    EID9_RXF0EIDH_bit
0x0F03       [0]    EID0_RXF0EIDL_bit
0x0F03       [1]    RXF0EIDL
0x0F03       [0]    EID1_RXF0EIDL_bit
0x0F03       [0]    EID5_RXF0EIDL_bit
0x0F03       [0]    EID6_RXF0EIDL_bit
0x0F03       [0]    EID7_RXF0EIDL_bit
0x0F03       [0]    EID2_RXF0EIDL_bit
0x0F03       [0]    EID3_RXF0EIDL_bit
0x0F03       [0]    EID4_RXF0EIDL_bit
0x0F04       [0]    SID9_RXF1SIDH_bit
0x0F04       [0]    SID8_RXF1SIDH_bit
0x0F04       [1]    RXF1SIDH
0x0F04       [0]    SID10_RXF1SIDH_bit
0x0F04       [0]    SID7_RXF1SIDH_bit
0x0F04       [0]    SID4_RXF1SIDH_bit
0x0F04       [0]    SID3_RXF1SIDH_bit
0x0F04       [0]    SID6_RXF1SIDH_bit
0x0F04       [0]    SID5_RXF1SIDH_bit
0x0F05       [0]    SID0_RXF1SIDL_bit
0x0F05       [0]    SID1_RXF1SIDL_bit
0x0F05       [0]    EXIDEN_RXF1SIDL_bit
0x0F05       [0]    SID2_RXF1SIDL_bit
0x0F05       [0]    EID17_RXF1SIDL_bit
0x0F05       [0]    EID16_RXF1SIDL_bit
0x0F05       [0]    EXIDE_RXF1SIDL_bit
0x0F05       [1]    RXF1SIDL
0x0F06       [0]    EID13_RXF1EIDH_bit
0x0F06       [0]    EID12_RXF1EIDH_bit
0x0F06       [0]    EID15_RXF1EIDH_bit
0x0F06       [0]    EID14_RXF1EIDH_bit
0x0F06       [0]    EID11_RXF1EIDH_bit
0x0F06       [0]    EID8_RXF1EIDH_bit
0x0F06       [1]    RXF1EIDH
0x0F06       [0]    EID10_RXF1EIDH_bit
0x0F06       [0]    EID9_RXF1EIDH_bit
0x0F07       [0]    EID6_RXF1EIDL_bit
0x0F07       [0]    EID5_RXF1EIDL_bit
0x0F07       [1]    RXF1EIDL
0x0F07       [0]    EID7_RXF1EIDL_bit
0x0F07       [0]    EID4_RXF1EIDL_bit
0x0F07       [0]    EID1_RXF1EIDL_bit
0x0F07       [0]    EID0_RXF1EIDL_bit
0x0F07       [0]    EID3_RXF1EIDL_bit
0x0F07       [0]    EID2_RXF1EIDL_bit
0x0F08       [1]    RXF2SIDH
0x0F08       [0]    SID6_RXF2SIDH_bit
0x0F08       [0]    SID3_RXF2SIDH_bit
0x0F08       [0]    SID4_RXF2SIDH_bit
0x0F08       [0]    SID5_RXF2SIDH_bit
0x0F08       [0]    SID7_RXF2SIDH_bit
0x0F08       [0]    SID9_RXF2SIDH_bit
0x0F08       [0]    SID10_RXF2SIDH_bit
0x0F08       [0]    SID8_RXF2SIDH_bit
0x0F09       [0]    SID1_RXF2SIDL_bit
0x0F09       [0]    SID0_RXF2SIDL_bit
0x0F09       [0]    EXIDEN_RXF2SIDL_bit
0x0F09       [0]    SID2_RXF2SIDL_bit
0x0F09       [0]    EXIDE_RXF2SIDL_bit
0x0F09       [1]    RXF2SIDL
0x0F09       [0]    EID16_RXF2SIDL_bit
0x0F09       [0]    EID17_RXF2SIDL_bit
0x0F0A       [0]    EID13_RXF2EIDH_bit
0x0F0A       [0]    EID12_RXF2EIDH_bit
0x0F0A       [0]    EID15_RXF2EIDH_bit
0x0F0A       [0]    EID14_RXF2EIDH_bit
0x0F0A       [0]    EID11_RXF2EIDH_bit
0x0F0A       [0]    EID9_RXF2EIDH_bit
0x0F0A       [0]    EID10_RXF2EIDH_bit
0x0F0A       [1]    RXF2EIDH
0x0F0A       [0]    EID8_RXF2EIDH_bit
0x0F0B       [0]    EID0_RXF2EIDL_bit
0x0F0B       [0]    EID1_RXF2EIDL_bit
0x0F0B       [0]    EID7_RXF2EIDL_bit
0x0F0B       [0]    EID6_RXF2EIDL_bit
0x0F0B       [0]    EID4_RXF2EIDL_bit
0x0F0B       [0]    EID3_RXF2EIDL_bit
0x0F0B       [0]    EID5_RXF2EIDL_bit
0x0F0B       [0]    EID2_RXF2EIDL_bit
0x0F0B       [1]    RXF2EIDL
0x0F0C       [0]    SID5_RXF3SIDH_bit
0x0F0C       [0]    SID6_RXF3SIDH_bit
0x0F0C       [0]    SID3_RXF3SIDH_bit
0x0F0C       [0]    SID4_RXF3SIDH_bit
0x0F0C       [0]    SID10_RXF3SIDH_bit
0x0F0C       [0]    SID8_RXF3SIDH_bit
0x0F0C       [1]    RXF3SIDH
0x0F0C       [0]    SID7_RXF3SIDH_bit
0x0F0C       [0]    SID9_RXF3SIDH_bit
0x0F0D       [0]    SID0_RXF3SIDL_bit
0x0F0D       [0]    SID1_RXF3SIDL_bit
0x0F0D       [1]    RXF3SIDL
0x0F0D       [0]    EID16_RXF3SIDL_bit
0x0F0D       [0]    EID17_RXF3SIDL_bit
0x0F0D       [0]    EXIDE_RXF3SIDL_bit
0x0F0D       [0]    SID2_RXF3SIDL_bit
0x0F0D       [0]    EXIDEN_RXF3SIDL_bit
0x0F0E       [0]    EID8_RXF3EIDH_bit
0x0F0E       [0]    EID11_RXF3EIDH_bit
0x0F0E       [0]    EID15_RXF3EIDH_bit
0x0F0E       [0]    EID9_RXF3EIDH_bit
0x0F0E       [1]    RXF3EIDH
0x0F0E       [0]    EID10_RXF3EIDH_bit
0x0F0E       [0]    EID13_RXF3EIDH_bit
0x0F0E       [0]    EID14_RXF3EIDH_bit
0x0F0E       [0]    EID12_RXF3EIDH_bit
0x0F0F       [0]    EID1_RXF3EIDL_bit
0x0F0F       [0]    EID5_RXF3EIDL_bit
0x0F0F       [0]    EID0_RXF3EIDL_bit
0x0F0F       [1]    RXF3EIDL
0x0F0F       [0]    EID7_RXF3EIDL_bit
0x0F0F       [0]    EID6_RXF3EIDL_bit
0x0F0F       [0]    EID2_RXF3EIDL_bit
0x0F0F       [0]    EID3_RXF3EIDL_bit
0x0F0F       [0]    EID4_RXF3EIDL_bit
0x0F10       [0]    SID7_RXF4SIDH_bit
0x0F10       [0]    SID8_RXF4SIDH_bit
0x0F10       [0]    SID9_RXF4SIDH_bit
0x0F10       [1]    RXF4SIDH
0x0F10       [0]    SID6_RXF4SIDH_bit
0x0F10       [0]    SID5_RXF4SIDH_bit
0x0F10       [0]    SID4_RXF4SIDH_bit
0x0F10       [0]    SID3_RXF4SIDH_bit
0x0F10       [0]    SID10_RXF4SIDH_bit
0x0F11       [0]    SID2_RXF4SIDL_bit
0x0F11       [0]    SID1_RXF4SIDL_bit
0x0F11       [1]    RXF4SIDL
0x0F11       [0]    EXIDEN_RXF4SIDL_bit
0x0F11       [0]    EID17_RXF4SIDL_bit
0x0F11       [0]    EID16_RXF4SIDL_bit
0x0F11       [0]    SID0_RXF4SIDL_bit
0x0F11       [0]    EXIDE_RXF4SIDL_bit
0x0F12       [0]    EID15_RXF4EIDH_bit
0x0F12       [0]    EID10_RXF4EIDH_bit
0x0F12       [0]    EID11_RXF4EIDH_bit
0x0F12       [0]    EID14_RXF4EIDH_bit
0x0F12       [0]    EID12_RXF4EIDH_bit
0x0F12       [0]    EID8_RXF4EIDH_bit
0x0F12       [1]    RXF4EIDH
0x0F12       [0]    EID9_RXF4EIDH_bit
0x0F12       [0]    EID13_RXF4EIDH_bit
0x0F13       [0]    EID0_RXF4EIDL_bit
0x0F13       [1]    RXF4EIDL
0x0F13       [0]    EID2_RXF4EIDL_bit
0x0F13       [0]    EID1_RXF4EIDL_bit
0x0F13       [0]    EID7_RXF4EIDL_bit
0x0F13       [0]    EID4_RXF4EIDL_bit
0x0F13       [0]    EID3_RXF4EIDL_bit
0x0F13       [0]    EID5_RXF4EIDL_bit
0x0F13       [0]    EID6_RXF4EIDL_bit
0x0F14       [0]    SID9_RXF5SIDH_bit
0x0F14       [0]    SID10_RXF5SIDH_bit
0x0F14       [1]    RXF5SIDH
0x0F14       [0]    SID4_RXF5SIDH_bit
0x0F14       [0]    SID5_RXF5SIDH_bit
0x0F14       [0]    SID6_RXF5SIDH_bit
0x0F14       [0]    SID3_RXF5SIDH_bit
0x0F14       [0]    SID8_RXF5SIDH_bit
0x0F14       [0]    SID7_RXF5SIDH_bit
0x0F15       [0]    EXIDEN_RXF5SIDL_bit
0x0F15       [1]    RXF5SIDL
0x0F15       [0]    EXIDE_RXF5SIDL_bit
0x0F15       [0]    EID17_RXF5SIDL_bit
0x0F15       [0]    EID16_RXF5SIDL_bit
0x0F15       [0]    SID2_RXF5SIDL_bit
0x0F15       [0]    SID1_RXF5SIDL_bit
0x0F15       [0]    SID0_RXF5SIDL_bit
0x0F16       [0]    EID15_RXF5EIDH_bit
0x0F16       [1]    RXF5EIDH
0x0F16       [0]    EID11_RXF5EIDH_bit
0x0F16       [0]    EID12_RXF5EIDH_bit
0x0F16       [0]    EID13_RXF5EIDH_bit
0x0F16       [0]    EID10_RXF5EIDH_bit
0x0F16       [0]    EID14_RXF5EIDH_bit
0x0F16       [0]    EID8_RXF5EIDH_bit
0x0F16       [0]    EID9_RXF5EIDH_bit
0x0F17       [1]    RXF5EIDL
0x0F17       [0]    EID7_RXF5EIDL_bit
0x0F17       [0]    EID2_RXF5EIDL_bit
0x0F17       [0]    EID3_RXF5EIDL_bit
0x0F17       [0]    EID0_RXF5EIDL_bit
0x0F17       [0]    EID1_RXF5EIDL_bit
0x0F17       [0]    EID6_RXF5EIDL_bit
0x0F17       [0]    EID5_RXF5EIDL_bit
0x0F17       [0]    EID4_RXF5EIDL_bit
0x0F18       [1]    RXM0SIDH
0x0F18       [0]    SID7_RXM0SIDH_bit
0x0F18       [0]    SID8_RXM0SIDH_bit
0x0F18       [0]    SID9_RXM0SIDH_bit
0x0F18       [0]    SID6_RXM0SIDH_bit
0x0F18       [0]    SID3_RXM0SIDH_bit
0x0F18       [0]    SID4_RXM0SIDH_bit
0x0F18       [0]    SID5_RXM0SIDH_bit
0x0F18       [0]    SID10_RXM0SIDH_bit
0x0F19       [0]    EID17_RXM0SIDL_bit
0x0F19       [0]    EID16_RXM0SIDL_bit
0x0F19       [1]    RXM0SIDL
0x0F19       [0]    EXIDEN_RXM0SIDL_bit
0x0F19       [0]    SID2_RXM0SIDL_bit
0x0F19       [0]    SID1_RXM0SIDL_bit
0x0F19       [0]    SID0_RXM0SIDL_bit
0x0F1A       [1]    RXM0EIDH
0x0F1A       [0]    EID10_RXM0EIDH_bit
0x0F1A       [0]    EID11_RXM0EIDH_bit
0x0F1A       [0]    EID8_RXM0EIDH_bit
0x0F1A       [0]    EID9_RXM0EIDH_bit
0x0F1A       [0]    EID12_RXM0EIDH_bit
0x0F1A       [0]    EID15_RXM0EIDH_bit
0x0F1A       [0]    EID14_RXM0EIDH_bit
0x0F1A       [0]    EID13_RXM0EIDH_bit
0x0F1B       [1]    RXM0EIDL
0x0F1B       [0]    EID6_RXM0EIDL_bit
0x0F1B       [0]    EID7_RXM0EIDL_bit
0x0F1B       [0]    EID3_RXM0EIDL_bit
0x0F1B       [0]    EID4_RXM0EIDL_bit
0x0F1B       [0]    EID5_RXM0EIDL_bit
0x0F1B       [0]    EID0_RXM0EIDL_bit
0x0F1B       [0]    EID1_RXM0EIDL_bit
0x0F1B       [0]    EID2_RXM0EIDL_bit
0x0F1C       [0]    SID4_RXM1SIDH_bit
0x0F1C       [1]    RXM1SIDH
0x0F1C       [0]    SID8_RXM1SIDH_bit
0x0F1C       [0]    SID7_RXM1SIDH_bit
0x0F1C       [0]    SID6_RXM1SIDH_bit
0x0F1C       [0]    SID10_RXM1SIDH_bit
0x0F1C       [0]    SID5_RXM1SIDH_bit
0x0F1C       [0]    SID9_RXM1SIDH_bit
0x0F1C       [0]    SID3_RXM1SIDH_bit
0x0F1D       [0]    SID0_RXM1SIDL_bit
0x0F1D       [0]    EXIDEN_RXM1SIDL_bit
0x0F1D       [0]    SID1_RXM1SIDL_bit
0x0F1D       [0]    SID2_RXM1SIDL_bit
0x0F1D       [1]    RXM1SIDL
0x0F1D       [0]    EID16_RXM1SIDL_bit
0x0F1D       [0]    EID17_RXM1SIDL_bit
0x0F1E       [0]    EID11_RXM1EIDH_bit
0x0F1E       [0]    EID10_RXM1EIDH_bit
0x0F1E       [0]    EID13_RXM1EIDH_bit
0x0F1E       [0]    EID12_RXM1EIDH_bit
0x0F1E       [1]    RXM1EIDH
0x0F1E       [0]    EID15_RXM1EIDH_bit
0x0F1E       [0]    EID9_RXM1EIDH_bit
0x0F1E       [0]    EID8_RXM1EIDH_bit
0x0F1E       [0]    EID14_RXM1EIDH_bit
0x0F1F       [0]    EID0_RXM1EIDL_bit
0x0F1F       [0]    EID1_RXM1EIDL_bit
0x0F1F       [0]    EID4_RXM1EIDL_bit
0x0F1F       [1]    RXM1EIDL
0x0F1F       [0]    EID7_RXM1EIDL_bit
0x0F1F       [0]    EID5_RXM1EIDL_bit
0x0F1F       [0]    EID6_RXM1EIDL_bit
0x0F1F       [0]    EID3_RXM1EIDL_bit
0x0F1F       [0]    EID2_RXM1EIDL_bit
0x0F20       [0]    TXERR_TXB2CON_bit
0x0F20       [0]    TXBIFBXB2CON_bit
0x0F20       [0]    TXREQ_TXB2CON_bit
0x0F20       [0]    TXPRI0_TXB2CON_bit
0x0F20       [0]    TXPRI1_TXB2CON_bit
0x0F20       [1]    TXB2CON
0x0F20       [0]    TXBIF_TXB2CON_bit
0x0F20       [0]    TXLARB_TXB2CON_bit
0x0F20       [0]    TXABT_TXB2CON_bit
0x0F21       [1]    TXB2SIDH
0x0F21       [0]    SID9_TXB2SIDH_bit
0x0F21       [0]    SID5_TXB2SIDH_bit
0x0F21       [0]    SID10_TXB2SIDH_bit
0x0F21       [0]    SID7_TXB2SIDH_bit
0x0F21       [0]    SID4_TXB2SIDH_bit
0x0F21       [0]    SID8_TXB2SIDH_bit
0x0F21       [0]    SID3_TXB2SIDH_bit
0x0F21       [0]    SID6_TXB2SIDH_bit
0x0F22       [0]    SID0_TXB2SIDL_bit
0x0F22       [0]    SID1_TXB2SIDL_bit
0x0F22       [0]    SID2_TXB2SIDL_bit
0x0F22       [0]    EID16_TXB2SIDL_bit
0x0F22       [0]    EID17_TXB2SIDL_bit
0x0F22       [1]    TXB2SIDL
0x0F22       [0]    EXIDE_TXB2SIDL_bit
0x0F23       [0]    EID13_TXB2EIDH_bit
0x0F23       [1]    TXB2EIDH
0x0F23       [0]    EID14_TXB2EIDH_bit
0x0F23       [0]    EID12_TXB2EIDH_bit
0x0F23       [0]    EID15_TXB2EIDH_bit
0x0F23       [0]    EID9_TXB2EIDH_bit
0x0F23       [0]    EID8_TXB2EIDH_bit
0x0F23       [0]    EID11_TXB2EIDH_bit
0x0F23       [0]    EID10_TXB2EIDH_bit
0x0F24       [0]    EID3_TXB2EIDL_bit
0x0F24       [0]    EID2_TXB2EIDL_bit
0x0F24       [0]    EID4_TXB2EIDL_bit
0x0F24       [0]    EID6_TXB2EIDL_bit
0x0F24       [0]    EID5_TXB2EIDL_bit
0x0F24       [0]    EID7_TXB2EIDL_bit
0x0F24       [1]    TXB2EIDL
0x0F24       [0]    EID0_TXB2EIDL_bit
0x0F24       [0]    EID1_TXB2EIDL_bit
0x0F25       [0]    TXRTR_TXB2DLC_bit
0x0F25       [0]    DLC2_TXB2DLC_bit
0x0F25       [0]    DLC3_TXB2DLC_bit
0x0F25       [0]    DLC1_TXB2DLC_bit
0x0F25       [1]    TXB2DLC
0x0F25       [0]    DLC0_TXB2DLC_bit
0x0F26       [0]    TXB2D01_bit
0x0F26       [0]    TXB2D06_bit
0x0F26       [1]    TXB2D0
0x0F26       [0]    TXB2D05_bit
0x0F26       [0]    TXB2D04_bit
0x0F26       [0]    TXB2D03_bit
0x0F26       [0]    TXB2D00_bit
0x0F26       [0]    TXB2D07_bit
0x0F26       [0]    TXB2D02_bit
0x0F27       [0]    TXB2D15_bit
0x0F27       [0]    TXB2D16_bit
0x0F27       [0]    TXB2D11_bit
0x0F27       [0]    TXB2D17_bit
0x0F27       [0]    TXB2D14_bit
0x0F27       [0]    TXB2D10_bit
0x0F27       [1]    TXB2D1
0x0F27       [0]    TXB2D12_bit
0x0F27       [0]    TXB2D13_bit
0x0F28       [0]    TXB2D27_bit
0x0F28       [0]    TXB2D22_bit
0x0F28       [0]    TXB2D20_bit
0x0F28       [0]    TXB2D21_bit
0x0F28       [0]    TXB2D26_bit
0x0F28       [0]    TXB2D24_bit
0x0F28       [0]    TXB2D23_bit
0x0F28       [0]    TXB2D25_bit
0x0F28       [1]    TXB2D2
0x0F29       [0]    TXB2D37_bit
0x0F29       [0]    TXB2D36_bit
0x0F29       [0]    TXB2D33_bit
0x0F29       [1]    TXB2D3
0x0F29       [0]    TXB2D30_bit
0x0F29       [0]    TXB2D32_bit
0x0F29       [0]    TXB2D34_bit
0x0F29       [0]    TXB2D35_bit
0x0F29       [0]    TXB2D31_bit
0x0F2A       [0]    TXB2D44_bit
0x0F2A       [0]    TXB2D46_bit
0x0F2A       [0]    TXB2D43_bit
0x0F2A       [0]    TXB2D42_bit
0x0F2A       [0]    TXB2D45_bit
0x0F2A       [0]    TXB2D41_bit
0x0F2A       [0]    TXB2D40_bit
0x0F2A       [1]    TXB2D4
0x0F2A       [0]    TXB2D47_bit
0x0F2B       [0]    TXB2D54_bit
0x0F2B       [1]    TXB2D5
0x0F2B       [0]    TXB2D55_bit
0x0F2B       [0]    TXB2D56_bit
0x0F2B       [0]    TXB2D52_bit
0x0F2B       [0]    TXB2D57_bit
0x0F2B       [0]    TXB2D50_bit
0x0F2B       [0]    TXB2D51_bit
0x0F2B       [0]    TXB2D53_bit
0x0F2C       [0]    TXB2D63_bit
0x0F2C       [0]    TXB2D66_bit
0x0F2C       [0]    TXB2D62_bit
0x0F2C       [0]    TXB2D61_bit
0x0F2C       [0]    TXB2D60_bit
0x0F2C       [0]    TXB2D65_bit
0x0F2C       [0]    TXB2D67_bit
0x0F2C       [0]    TXB2D64_bit
0x0F2C       [1]    TXB2D6
0x0F2D       [0]    TXB2D75_bit
0x0F2D       [0]    TXB2D76_bit
0x0F2D       [0]    TXB2D77_bit
0x0F2D       [0]    TXB2D74_bit
0x0F2D       [0]    TXB2D70_bit
0x0F2D       [1]    TXB2D7
0x0F2D       [0]    TXB2D71_bit
0x0F2D       [0]    TXB2D73_bit
0x0F2D       [0]    TXB2D72_bit
0x0F2E       [0]    OPMODE_CANSTAT_RO3_bit
0x0F2E       [0]    ICODE4_CANSTAT_RO3_bit
0x0F2E       [0]    ICODE3_CANSTAT_RO3_bit
0x0F2E       [1]    CANSTAT_RO3
0x0F2E       [0]    REQOP2_CANSTAT_RO3_bit
0x0F2E       [0]    REQOP1_CANSTAT_RO3_bit
0x0F2E       [0]    ICODE2_CANSTAT_RO3_bit
0x0F2E       [0]    ICODE0_CANSTAT_RO3_bit
0x0F2E       [0]    ICODE1_CANSTAT_RO3_bit
0x0F2F       [0]    REQOP2_CANCON_RO3_bit
0x0F2F       [1]    CANCON_RO3
0x0F2F       [0]    WIN1_CANCON_RO3_bit
0x0F2F       [0]    WIN2_CANCON_RO3_bit
0x0F2F       [0]    ABAT_CANCON_RO3_bit
0x0F2F       [0]    REQOP0_CANCON_RO3_bit
0x0F2F       [0]    WIN0_CANCON_RO3_bit
0x0F2F       [0]    REQOP1_CANCON_RO3_bit
0x0F30       [1]    TXB1CON
0x0F30       [0]    TXREQ_TXB1CON_bit
0x0F30       [0]    TXERR_TXB1CON_bit
0x0F30       [0]    TXPRI1_TXB1CON_bit
0x0F30       [0]    TXPRI0_TXB1CON_bit
0x0F30       [0]    TXABT_TXB1CON_bit
0x0F30       [0]    TXBIF_TXB1CON_bit
0x0F30       [0]    TXLARB_TXB1CON_bit
0x0F30       [0]    TXBIFTXB1CON_bit
0x0F31       [0]    SID3_TXB1SIDH_bit
0x0F31       [0]    SID6_TXB1SIDH_bit
0x0F31       [0]    SID5_TXB1SIDH_bit
0x0F31       [0]    SID10_TXB1SIDH_bit
0x0F31       [0]    SID4_TXB1SIDH_bit
0x0F31       [0]    SID9_TXB1SIDH_bit
0x0F31       [0]    SID7_TXB1SIDH_bit
0x0F31       [0]    SID8_TXB1SIDH_bit
0x0F31       [1]    TXB1SIDH
0x0F32       [0]    SID2_TXB1SIDL_bit
0x0F32       [0]    EXIDE_TXB1SIDL_bit
0x0F32       [0]    EID16_TXB1SIDL_bit
0x0F32       [0]    EID17_TXB1SIDL_bit
0x0F32       [0]    SID1_TXB1SIDL_bit
0x0F32       [1]    TXB1SIDL
0x0F32       [0]    SID0_TXB1SIDL_bit
0x0F33       [0]    EID15_TXB1EIDH_bit
0x0F33       [0]    EID14_TXB1EIDH_bit
0x0F33       [1]    TXB1EIDH
0x0F33       [0]    EID10_TXB1EIDH_bit
0x0F33       [0]    EID11_TXB1EIDH_bit
0x0F33       [0]    EID8_TXB1EIDH_bit
0x0F33       [0]    EID9_TXB1EIDH_bit
0x0F33       [0]    EID12_TXB1EIDH_bit
0x0F33       [0]    EID13_TXB1EIDH_bit
0x0F34       [0]    EID1_TXB1EIDL_bit
0x0F34       [1]    TXB1EIDL
0x0F34       [0]    EID2_TXB1EIDL_bit
0x0F34       [0]    EID7_TXB1EIDL_bit
0x0F34       [0]    EID0_TXB1EIDL_bit
0x0F34       [0]    EID3_TXB1EIDL_bit
0x0F34       [0]    EID4_TXB1EIDL_bit
0x0F34       [0]    EID5_TXB1EIDL_bit
0x0F34       [0]    EID6_TXB1EIDL_bit
0x0F35       [1]    TXB1DLC
0x0F35       [0]    DLC0_TXB1DLC_bit
0x0F35       [0]    TXRTR_TXB1DLC_bit
0x0F35       [0]    DLC2_TXB1DLC_bit
0x0F35       [0]    DLC3_TXB1DLC_bit
0x0F35       [0]    DLC1_TXB1DLC_bit
0x0F36       [1]    TXB1D0
0x0F36       [0]    TXB1D03_bit
0x0F36       [0]    TXB1D04_bit
0x0F36       [0]    TXB1D02_bit
0x0F36       [0]    TXB1D01_bit
0x0F36       [0]    TXB1D00_bit
0x0F36       [0]    TXB1D07_bit
0x0F36       [0]    TXB1D06_bit
0x0F36       [0]    TXB1D05_bit
0x0F37       [0]    TXB1D13_bit
0x0F37       [1]    TXB1D1
0x0F37       [0]    TXB1D15_bit
0x0F37       [0]    TXB1D17_bit
0x0F37       [0]    TXB1D10_bit
0x0F37       [0]    TXB1D11_bit
0x0F37       [0]    TXB1D16_bit
0x0F37       [0]    TXB1D12_bit
0x0F37       [0]    TXB1D14_bit
0x0F38       [0]    TXB1D21_bit
0x0F38       [0]    TXB1D22_bit
0x0F38       [0]    TXB1D26_bit
0x0F38       [0]    TXB1D27_bit
0x0F38       [0]    TXB1D20_bit
0x0F38       [1]    TXB1D2
0x0F38       [0]    TXB1D23_bit
0x0F38       [0]    TXB1D24_bit
0x0F38       [0]    TXB1D25_bit
0x0F39       [0]    TXB1D32_bit
0x0F39       [0]    TXB1D33_bit
0x0F39       [0]    TXB1D35_bit
0x0F39       [0]    TXB1D31_bit
0x0F39       [0]    TXB1D37_bit
0x0F39       [0]    TXB1D34_bit
0x0F39       [0]    TXB1D30_bit
0x0F39       [1]    TXB1D3
0x0F39       [0]    TXB1D36_bit
0x0F3A       [0]    TXB1D44_bit
0x0F3A       [0]    TXB1D47_bit
0x0F3A       [0]    TXB1D46_bit
0x0F3A       [1]    TXB1D4
0x0F3A       [0]    TXB1D42_bit
0x0F3A       [0]    TXB1D43_bit
0x0F3A       [0]    TXB1D40_bit
0x0F3A       [0]    TXB1D41_bit
0x0F3A       [0]    TXB1D45_bit
0x0F3B       [1]    TXB1D5
0x0F3B       [0]    TXB1D52_bit
0x0F3B       [0]    TXB1D57_bit
0x0F3B       [0]    TXB1D51_bit
0x0F3B       [0]    TXB1D50_bit
0x0F3B       [0]    TXB1D54_bit
0x0F3B       [0]    TXB1D53_bit
0x0F3B       [0]    TXB1D56_bit
0x0F3B       [0]    TXB1D55_bit
0x0F3C       [1]    TXB1D6
0x0F3C       [0]    TXB1D65_bit
0x0F3C       [0]    TXB1D63_bit
0x0F3C       [0]    TXB1D67_bit
0x0F3C       [0]    TXB1D61_bit
0x0F3C       [0]    TXB1D62_bit
0x0F3C       [0]    TXB1D66_bit
0x0F3C       [0]    TXB1D64_bit
0x0F3C       [0]    TXB1D60_bit
0x0F3D       [1]    TXB1D7
0x0F3D       [0]    TXB1D70_bit
0x0F3D       [0]    TXB1D71_bit
0x0F3D       [0]    TXB1D77_bit
0x0F3D       [0]    TXB1D73_bit
0x0F3D       [0]    TXB1D72_bit
0x0F3D       [0]    TXB1D76_bit
0x0F3D       [0]    TXB1D75_bit
0x0F3D       [0]    TXB1D74_bit
0x0F3E       [0]    ICODE3_CANSTAT_RO2_bit
0x0F3E       [0]    ICODE4_CANSTAT_RO2_bit
0x0F3E       [0]    ICODE2_CANSTAT_RO2_bit
0x0F3E       [0]    ICODE0_CANSTAT_RO2_bit
0x0F3E       [0]    ICODE1_CANSTAT_RO2_bit
0x0F3E       [0]    REQOP2_CANSTAT_RO2_bit
0x0F3E       [1]    CANSTAT_RO2
0x0F3E       [0]    OPMODE_CANSTAT_RO2_bit
0x0F3E       [0]    REQOP1_CANSTAT_RO2_bit
0x0F3F       [0]    REQOP0_CANCON_RO2_bit
0x0F3F       [0]    REQOP1_CANCON_RO2_bit
0x0F3F       [0]    REQOP2_CANCON_RO2_bit
0x0F3F       [0]    WIN1_CANCON_RO2_bit
0x0F3F       [0]    WIN0_CANCON_RO2_bit
0x0F3F       [0]    ABAT_CANCON_RO2_bit
0x0F3F       [0]    WIN2_CANCON_RO2_bit
0x0F3F       [1]    CANCON_RO2
0x0F40       [1]    TXB0CON
0x0F40       [0]    TXBIF_TXB0CON_bit
0x0F40       [0]    TXPRI0_TXB0CON_bit
0x0F40       [0]    TXABT_TXB0CON_bit
0x0F40       [0]    TXREQ_TXB0CON_bit
0x0F40       [0]    TXERR_TXB0CON_bit
0x0F40       [0]    TXLARB_TXB0CON_bit
0x0F40       [0]    TXPRI1_TXB0CON_bit
0x0F41       [0]    SID7_TXB0SIDH_bit
0x0F41       [0]    SID8_TXB0SIDH_bit
0x0F41       [0]    SID4_TXB0SIDH_bit
0x0F41       [0]    SID5_TXB0SIDH_bit
0x0F41       [0]    SID6_TXB0SIDH_bit
0x0F41       [0]    SID3_TXB0SIDH_bit
0x0F41       [1]    TXB0SIDH
0x0F41       [0]    SID10_TXB0SIDH_bit
0x0F41       [0]    SID9_TXB0SIDH_bit
0x0F42       [0]    SID0_TXB0SIDL_bit
0x0F42       [0]    EXIDE_TXB0SIDL_bit
0x0F42       [1]    TXB0SIDL
0x0F42       [0]    EID17_TXB0SIDL_bit
0x0F42       [0]    SID2_TXB0SIDL_bit
0x0F42       [0]    SID1_TXB0SIDL_bit
0x0F42       [0]    EID16_TXB0SIDL_bit
0x0F43       [0]    EID10_TXB0EIDH_bit
0x0F43       [0]    EID9_TXB0EIDH_bit
0x0F43       [0]    EID8_TXB0EIDH_bit
0x0F43       [0]    EID13_TXB0EIDH_bit
0x0F43       [0]    EID14_TXB0EIDH_bit
0x0F43       [0]    EID15_TXB0EIDH_bit
0x0F43       [1]    TXB0EIDH
0x0F43       [0]    EID11_TXB0EIDH_bit
0x0F43       [0]    EID12_TXB0EIDH_bit
0x0F44       [0]    EID3_TXB0EIDL_bit
0x0F44       [0]    EID4_TXB0EIDL_bit
0x0F44       [0]    EID5_TXB0EIDL_bit
0x0F44       [0]    EID7_TXB0EIDL_bit
0x0F44       [0]    EID6_TXB0EIDL_bit
0x0F44       [0]    EID0_TXB0EIDL_bit
0x0F44       [1]    TXB0EIDL
0x0F44       [0]    EID2_TXB0EIDL_bit
0x0F44       [0]    EID1_TXB0EIDL_bit
0x0F45       [0]    DLC1_TXB0DLC_bit
0x0F45       [0]    DLC0_TXB0DLC_bit
0x0F45       [0]    DLC2_TXB0DLC_bit
0x0F45       [1]    TXB0DLC
0x0F45       [0]    TXRTR_TXB0DLC_bit
0x0F45       [0]    DLC3_TXB0DLC_bit
0x0F46       [0]    TXB0D05_bit
0x0F46       [0]    TXB0D04_bit
0x0F46       [0]    TXB0D07_bit
0x0F46       [0]    TXB0D06_bit
0x0F46       [0]    TXB0D03_bit
0x0F46       [1]    TXB0D0
0x0F46       [0]    TXB0D00_bit
0x0F46       [0]    TXB0D02_bit
0x0F46       [0]    TXB0D01_bit
0x0F47       [0]    TXB0D14_bit
0x0F47       [0]    TXB0D11_bit
0x0F47       [0]    TXB0D15_bit
0x0F47       [0]    TXB0D12_bit
0x0F47       [1]    TXB0D1
0x0F47       [0]    TXB0D13_bit
0x0F47       [0]    TXB0D10_bit
0x0F47       [0]    TXB0D17_bit
0x0F47       [0]    TXB0D16_bit
0x0F48       [0]    TXB0D21_bit
0x0F48       [0]    TXB0D20_bit
0x0F48       [1]    TXB0D2
0x0F48       [0]    TXB0D27_bit
0x0F48       [0]    TXB0D22_bit
0x0F48       [0]    TXB0D24_bit
0x0F48       [0]    TXB0D23_bit
0x0F48       [0]    TXB0D26_bit
0x0F48       [0]    TXB0D25_bit
0x0F49       [0]    TXB0D36_bit
0x0F49       [0]    TXB0D35_bit
0x0F49       [1]    TXB0D3
0x0F49       [0]    TXB0D37_bit
0x0F49       [0]    TXB0D34_bit
0x0F49       [0]    TXB0D31_bit
0x0F49       [0]    TXB0D30_bit
0x0F49       [0]    TXB0D33_bit
0x0F49       [0]    TXB0D32_bit
0x0F4A       [0]    TXB0D46_bit
0x0F4A       [0]    TXB0D45_bit
0x0F4A       [1]    TXB0D4
0x0F4A       [0]    TXB0D47_bit
0x0F4A       [0]    TXB0D41_bit
0x0F4A       [0]    TXB0D40_bit
0x0F4A       [0]    TXB0D42_bit
0x0F4A       [0]    TXB0D44_bit
0x0F4A       [0]    TXB0D43_bit
0x0F4B       [0]    TXB0D56_bit
0x0F4B       [0]    TXB0D57_bit
0x0F4B       [1]    TXB0D5
0x0F4B       [0]    TXB0D55_bit
0x0F4B       [0]    TXB0D51_bit
0x0F4B       [0]    TXB0D52_bit
0x0F4B       [0]    TXB0D50_bit
0x0F4B       [0]    TXB0D54_bit
0x0F4B       [0]    TXB0D53_bit
0x0F4C       [0]    TXB0D66_bit
0x0F4C       [0]    TXB0D67_bit
0x0F4C       [1]    TXB0D6
0x0F4C       [0]    TXB0D62_bit
0x0F4C       [0]    TXB0D61_bit
0x0F4C       [0]    TXB0D60_bit
0x0F4C       [0]    TXB0D65_bit
0x0F4C       [0]    TXB0D64_bit
0x0F4C       [0]    TXB0D63_bit
0x0F4D       [0]    TXB0D75_bit
0x0F4D       [0]    TXB0D74_bit
0x0F4D       [0]    TXB0D77_bit
0x0F4D       [0]    TXB0D76_bit
0x0F4D       [0]    TXB0D73_bit
0x0F4D       [0]    TXB0D70_bit
0x0F4D       [1]    TXB0D7
0x0F4D       [0]    TXB0D72_bit
0x0F4D       [0]    TXB0D71_bit
0x0F4E       [0]    ICODE2_CANSTAT_RO1_bit
0x0F4E       [0]    ICODE3_CANSTAT_RO1_bit
0x0F4E       [0]    ICODE0_CANSTAT_RO1_bit
0x0F4E       [0]    ICODE1_CANSTAT_RO1_bit
0x0F4E       [0]    ICODE4_CANSTAT_RO1_bit
0x0F4E       [0]    REQOP2_CANSTAT_RO1_bit
0x0F4E       [1]    CANSTAT_RO1
0x0F4E       [0]    OPMODE_CANSTAT_RO1_bit
0x0F4E       [0]    REQOP1_CANSTAT_RO1_bit
0x0F4F       [0]    REQOP1_CANCON_RO1_bit
0x0F4F       [0]    REQOP2_CANCON_RO1_bit
0x0F4F       [1]    CANCON_RO1
0x0F4F       [0]    REQOP0_CANCON_RO1_bit
0x0F4F       [0]    WIN1_CANCON_RO1_bit
0x0F4F       [0]    WIN0_CANCON_RO1_bit
0x0F4F       [0]    ABAT_CANCON_RO1_bit
0x0F4F       [0]    WIN2_CANCON_RO1_bit
0x0F50       [0]    RXFUL_RXB1CON_bit
0x0F50       [0]    RXM1_RXB1CON_bit
0x0F50       [0]    RXM0_bit
0x0F50       [0]    RTRRO_RXB1CON_bit
0x0F50       [0]    FILHIT4_RXB1CON_bit
0x0F50       [0]    FILHIT3_RXB1CON_bit
0x0F50       [0]    RXRTRRO_RXB1CON_bit
0x0F50       [0]    FILHIT0_RXB1CON_bit
0x0F50       [1]    RXB1CON
0x0F50       [0]    FILHIT1_RXB1CON_bit
0x0F50       [0]    FILHIT2_RXB1CON_bit
0x0F51       [0]    SID6_RXB1SIDH_bit
0x0F51       [0]    SID7_RXB1SIDH_bit
0x0F51       [0]    SID8_RXB1SIDH_bit
0x0F51       [0]    SID10_RXB1SIDH_bit
0x0F51       [0]    SID9_RXB1SIDH_bit
0x0F51       [0]    SID3_RXB1SIDH_bit
0x0F51       [1]    RXB1SIDH
0x0F51       [0]    SID5_RXB1SIDH_bit
0x0F51       [0]    SID4_RXB1SIDH_bit
0x0F52       [0]    SID0_RXB1SIDL_bit
0x0F52       [0]    SRR_RXB1SIDL_bit
0x0F52       [0]    SID2_RXB1SIDL_bit
0x0F52       [0]    SID1_RXB1SIDL_bit
0x0F52       [0]    EID16_RXB1SIDL_bit
0x0F52       [1]    RXB1SIDL
0x0F52       [0]    EXID_RXB1SIDL_bit
0x0F52       [0]    EID17_RXB1SIDL_bit
0x0F53       [0]    EID14_RXB1EIDH_bit
0x0F53       [0]    EID13_RXB1EIDH_bit
0x0F53       [1]    RXB1EIDH
0x0F53       [0]    EID15_RXB1EIDH_bit
0x0F53       [0]    EID12_RXB1EIDH_bit
0x0F53       [0]    EID9_RXB1EIDH_bit
0x0F53       [0]    EID8_RXB1EIDH_bit
0x0F53       [0]    EID11_RXB1EIDH_bit
0x0F53       [0]    EID10_RXB1EIDH_bit
0x0F54       [0]    EID6_RXB1EIDL_bit
0x0F54       [0]    EID5_RXB1EIDL_bit
0x0F54       [1]    RXB1EIDL
0x0F54       [0]    EID7_RXB1EIDL_bit
0x0F54       [0]    EID0_RXB1EIDL_bit
0x0F54       [0]    EID1_RXB1EIDL_bit
0x0F54       [0]    EID2_RXB1EIDL_bit
0x0F54       [0]    EID4_RXB1EIDL_bit
0x0F54       [0]    EID3_RXB1EIDL_bit
0x0F55       [0]    RXRTR_RXB1DLC_bit
0x0F55       [0]    RB0_RXB1DLC_bit
0x0F55       [1]    RXB1DLC
0x0F55       [0]    RB1_RXB1DLC_bit
0x0F55       [0]    DLC2_RXB1DLC_bit
0x0F55       [0]    DLC1_RXB1DLC_bit
0x0F55       [0]    DLC0_RXB1DLC_bit
0x0F55       [0]    RESRB1_RXB1DLC_bit
0x0F55       [0]    RESRB0_RXB1DLC_bit
0x0F55       [0]    DLC3_RXB1DLC_bit
0x0F56       [0]    RXB1D04_bit
0x0F56       [0]    RXB1D03_bit
0x0F56       [0]    RXB1D06_bit
0x0F56       [0]    RXB1D05_bit
0x0F56       [0]    RXB1D00_bit
0x0F56       [1]    RXB1D0
0x0F56       [0]    RXB1D02_bit
0x0F56       [0]    RXB1D01_bit
0x0F56       [0]    RXB1D07_bit
0x0F57       [0]    RXB1D16_bit
0x0F57       [0]    RXB1D15_bit
0x0F57       [0]    RXB1D17_bit
0x0F57       [1]    RXB1D1
0x0F57       [0]    RXB1D14_bit
0x0F57       [0]    RXB1D11_bit
0x0F57       [0]    RXB1D10_bit
0x0F57       [0]    RXB1D13_bit
0x0F57       [0]    RXB1D12_bit
0x0F58       [0]    RXB1D24_bit
0x0F58       [0]    RXB1D23_bit
0x0F58       [0]    RXB1D22_bit
0x0F58       [0]    RXB1D27_bit
0x0F58       [0]    RXB1D26_bit
0x0F58       [0]    RXB1D25_bit
0x0F58       [1]    RXB1D2
0x0F58       [0]    RXB1D20_bit
0x0F58       [0]    RXB1D21_bit
0x0F59       [0]    RXB1D34_bit
0x0F59       [0]    RXB1D33_bit
0x0F59       [0]    RXB1D35_bit
0x0F59       [0]    RXB1D36_bit
0x0F59       [0]    RXB1D37_bit
0x0F59       [0]    RXB1D32_bit
0x0F59       [1]    RXB1D3
0x0F59       [0]    RXB1D30_bit
0x0F59       [0]    RXB1D31_bit
0x0F5A       [0]    RXB1D44_bit
0x0F5A       [0]    RXB1D43_bit
0x0F5A       [0]    RXB1D45_bit
0x0F5A       [0]    RXB1D47_bit
0x0F5A       [0]    RXB1D46_bit
0x0F5A       [0]    RXB1D40_bit
0x0F5A       [1]    RXB1D4
0x0F5A       [0]    RXB1D42_bit
0x0F5A       [0]    RXB1D41_bit
0x0F5B       [0]    RXB1D52_bit
0x0F5B       [0]    RXB1D53_bit
0x0F5B       [0]    RXB1D54_bit
0x0F5B       [1]    RXB1D5
0x0F5B       [0]    RXB1D50_bit
0x0F5B       [0]    RXB1D51_bit
0x0F5B       [0]    RXB1D55_bit
0x0F5B       [0]    RXB1D57_bit
0x0F5B       [0]    RXB1D56_bit
0x0F5C       [0]    RXB1D66_bit
0x0F5C       [0]    RXB1D65_bit
0x0F5C       [1]    RXB1D6
0x0F5C       [0]    RXB1D67_bit
0x0F5C       [0]    RXB1D64_bit
0x0F5C       [0]    RXB1D61_bit
0x0F5C       [0]    RXB1D60_bit
0x0F5C       [0]    RXB1D63_bit
0x0F5C       [0]    RXB1D62_bit
0x0F5D       [0]    RXB1D76_bit
0x0F5D       [0]    RXB1D75_bit
0x0F5D       [1]    RXB1D7
0x0F5D       [0]    RXB1D77_bit
0x0F5D       [0]    RXB1D71_bit
0x0F5D       [0]    RXB1D70_bit
0x0F5D       [0]    RXB1D72_bit
0x0F5D       [0]    RXB1D74_bit
0x0F5D       [0]    RXB1D73_bit
0x0F5E       [0]    REQOP1_CANSTAT_RO0_bit
0x0F5E       [0]    REQOP2_CANSTAT_RO0_bit
0x0F5E       [1]    CANSTAT_RO0
0x0F5E       [0]    OPMODE_CANSTAT_RO0_bit
0x0F5E       [0]    ICODE2_CANSTAT_RO0_bit
0x0F5E       [0]    ICODE1_CANSTAT_RO0_bit
0x0F5E       [0]    ICODE0_CANSTAT_RO0_bit
0x0F5E       [0]    ICODE3_CANSTAT_RO0_bit
0x0F5E       [0]    ICODE4_CANSTAT_RO0_bit
0x0F5F       [0]    REQOP0_CANCON_RO0_bit
0x0F5F       [0]    ABAT_CANCON_RO0_bit
0x0F5F       [0]    REQOP2_CANCON_RO0_bit
0x0F5F       [0]    REQOP1_CANCON_RO0_bit
0x0F5F       [0]    WIN0_CANCON_RO0_bit
0x0F5F       [1]    CANCON_RO0
0x0F5F       [0]    WIN1_CANCON_RO0_bit
0x0F5F       [0]    WIN2_CANCON_RO0_bit
0x0F60       [0]    RXM0_RXB0CON_bit
0x0F60       [0]    RXM1_RXB0CON_bit
0x0F60       [0]    RXRTRRO_RXB0CON_bit
0x0F60       [0]    JTOFF_bit
0x0F60       [0]    RXB0DBEN_bit
0x0F60       [0]    RXFUL_RXB0CON_bit
0x0F60       [0]    FILHIT4_RXB0CON_bit
0x0F60       [0]    RTRRO_RXB0CON_bit
0x0F60       [0]    FILHIT3_RXB0CON_bit
0x0F60       [0]    FILHIT1_RXB0CON_bit
0x0F60       [0]    FILHIT2_RXB0CON_bit
0x0F60       [1]    RXB0CON
0x0F60       [0]    RXBODBEN_bit
0x0F60       [0]    FILHIT0_RXB0CON_bit
0x0F61       [0]    SID8_RXB0SIDH_bit
0x0F61       [0]    SID9_RXB0SIDH_bit
0x0F61       [0]    SID10_RXB0SIDH_bit
0x0F61       [0]    SID7_RXB0SIDH_bit
0x0F61       [0]    SID4_RXB0SIDH_bit
0x0F61       [0]    SID3_RXB0SIDH_bit
0x0F61       [0]    SID6_RXB0SIDH_bit
0x0F61       [0]    SID5_RXB0SIDH_bit
0x0F61       [1]    RXB0SIDH
0x0F62       [0]    EXID_RXB0SIDL_bit
0x0F62       [0]    EID17_RXB0SIDL_bit
0x0F62       [0]    EID16_RXB0SIDL_bit
0x0F62       [0]    SID1_RXB0SIDL_bit
0x0F62       [0]    SID2_RXB0SIDL_bit
0x0F62       [0]    SRR_RXB0SIDL_bit
0x0F62       [0]    SID0_RXB0SIDL_bit
0x0F62       [1]    RXB0SIDL
0x0F63       [0]    EID11_RXB0EIDH_bit
0x0F63       [0]    EID10_RXB0EIDH_bit
0x0F63       [0]    EID9_RXB0EIDH_bit
0x0F63       [0]    EID12_RXB0EIDH_bit
0x0F63       [0]    EID15_RXB0EIDH_bit
0x0F63       [0]    EID14_RXB0EIDH_bit
0x0F63       [0]    EID13_RXB0EIDH_bit
0x0F63       [0]    EID8_RXB0EIDH_bit
0x0F63       [1]    RXB0EIDH
0x0F64       [0]    EID6_RXB0EIDL_bit
0x0F64       [0]    EID7_RXB0EIDL_bit
0x0F64       [0]    EID1_RXB0EIDL_bit
0x0F64       [0]    EID3_RXB0EIDL_bit
0x0F64       [0]    EID2_RXB0EIDL_bit
0x0F64       [0]    EID5_RXB0EIDL_bit
0x0F64       [0]    EID4_RXB0EIDL_bit
0x0F64       [1]    RXB0EIDL
0x0F64       [0]    EID0_RXB0EIDL_bit
0x0F65       [0]    RESRB0_RXB0DLC_bit
0x0F65       [0]    DLC2_RXB0DLC_bit
0x0F65       [0]    DLC3_RXB0DLC_bit
0x0F65       [0]    RB0_RXB0DLC_bit
0x0F65       [0]    RB1_RXB0DLC_bit
0x0F65       [0]    RESRB1_RXB0DLC_bit
0x0F65       [0]    RXRTR_RXB0DLC_bit
0x0F65       [1]    RXB0DLC
0x0F65       [0]    DLC0_RXB0DLC_bit
0x0F65       [0]    DLC1_RXB0DLC_bit
0x0F66       [0]    RXB0D07_bit
0x0F66       [0]    RXB0D03_bit
0x0F66       [0]    RXB0D02_bit
0x0F66       [0]    RXB0D04_bit
0x0F66       [0]    RXB0D05_bit
0x0F66       [0]    RXB0D06_bit
0x0F66       [1]    RXB0D0
0x0F66       [0]    RXB0D00_bit
0x0F66       [0]    RXB0D01_bit
0x0F67       [0]    RXB0D14_bit
0x0F67       [0]    RXB0D13_bit
0x0F67       [0]    RXB0D15_bit
0x0F67       [0]    RXB0D17_bit
0x0F67       [0]    RXB0D16_bit
0x0F67       [0]    RXB0D12_bit
0x0F67       [1]    RXB0D1
0x0F67       [0]    RXB0D10_bit
0x0F67       [0]    RXB0D11_bit
0x0F68       [0]    RXB0D24_bit
0x0F68       [0]    RXB0D23_bit
0x0F68       [0]    RXB0D25_bit
0x0F68       [0]    RXB0D26_bit
0x0F68       [0]    RXB0D27_bit
0x0F68       [0]    RXB0D20_bit
0x0F68       [1]    RXB0D2
0x0F68       [0]    RXB0D22_bit
0x0F68       [0]    RXB0D21_bit
0x0F69       [0]    RXB0D35_bit
0x0F69       [0]    RXB0D34_bit
0x0F69       [0]    RXB0D37_bit
0x0F69       [0]    RXB0D36_bit
0x0F69       [0]    RXB0D33_bit
0x0F69       [0]    RXB0D30_bit
0x0F69       [1]    RXB0D3
0x0F69       [0]    RXB0D32_bit
0x0F69       [0]    RXB0D31_bit
0x0F6A       [0]    RXB0D42_bit
0x0F6A       [0]    RXB0D43_bit
0x0F6A       [0]    RXB0D40_bit
0x0F6A       [0]    RXB0D41_bit
0x0F6A       [0]    RXB0D44_bit
0x0F6A       [0]    RXB0D47_bit
0x0F6A       [1]    RXB0D4
0x0F6A       [0]    RXB0D45_bit
0x0F6A       [0]    RXB0D46_bit
0x0F6B       [0]    RXB0D56_bit
0x0F6B       [0]    RXB0D55_bit
0x0F6B       [1]    RXB0D5
0x0F6B       [0]    RXB0D57_bit
0x0F6B       [0]    RXB0D50_bit
0x0F6B       [0]    RXB0D51_bit
0x0F6B       [0]    RXB0D52_bit
0x0F6B       [0]    RXB0D54_bit
0x0F6B       [0]    RXB0D53_bit
0x0F6C       [0]    RXB0D66_bit
0x0F6C       [0]    RXB0D67_bit
0x0F6C       [1]    RXB0D6
0x0F6C       [0]    RXB0D65_bit
0x0F6C       [0]    RXB0D62_bit
0x0F6C       [0]    RXB0D61_bit
0x0F6C       [0]    RXB0D60_bit
0x0F6C       [0]    RXB0D64_bit
0x0F6C       [0]    RXB0D63_bit
0x0F6D       [0]    RXB0D76_bit
0x0F6D       [0]    RXB0D77_bit
0x0F6D       [1]    RXB0D7
0x0F6D       [0]    RXB0D72_bit
0x0F6D       [0]    RXB0D71_bit
0x0F6D       [0]    RXB0D70_bit
0x0F6D       [0]    RXB0D75_bit
0x0F6D       [0]    RXB0D74_bit
0x0F6D       [0]    RXB0D73_bit
0x0F6E       [0]    EICODE3_bit
0x0F6E       [0]    EICODE2_bit
0x0F6E       [1]    CANSTAT
0x0F6E       [0]    EICODE4_bit
0x0F6E       [0]    ICODE3_CANSTAT_bit
0x0F6E       [0]    OPMODE0_bit
0x0F6E       [0]    ICODE1_CANSTAT_bit
0x0F6E       [0]    ICODE2_CANSTAT_bit
0x0F6E       [0]    OPMODE1_bit
0x0F6E       [0]    EICODE0_bit
0x0F6E       [0]    EICODE1_bit
0x0F6E       [0]    OPMODE2_bit
0x0F6F       [0]    FP2_bit
0x0F6F       [0]    FP3_bit
0x0F6F       [1]    CANCON
0x0F6F       [0]    FP1_bit
0x0F6F       [0]    WIN2_CANCON_bit
0x0F6F       [0]    ABAT_CANCON_bit
0x0F6F       [0]    WIN0_CANCON_bit
0x0F6F       [0]    WIN1_CANCON_bit
0x0F6F       [0]    REQOP2_CANCON_bit
0x0F6F       [0]    FP0_bit
0x0F6F       [0]    REQOP0_CANCON_bit
0x0F6F       [0]    REQOP1_CANCON_bit
0x0F70       [1]    BRGCON1
0x0F70       [0]    SJW1_bit
0x0F70       [0]    BRP2_bit
0x0F70       [0]    BRP3_bit
0x0F70       [0]    BRP0_bit
0x0F70       [0]    BRP1_bit
0x0F70       [0]    SJW0_bit
0x0F70       [0]    BRP5_bit
0x0F70       [0]    BRP4_bit
0x0F71       [1]    BRGCON2
0x0F71       [0]    SEG2PHT_bit
0x0F71       [0]    PRSEG2_bit
0x0F71       [0]    SEG1PH0_bit
0x0F71       [0]    PRSEG0_bit
0x0F71       [0]    PRSEG1_bit
0x0F71       [0]    SEG2PHTS_bit
0x0F71       [0]    SAM_bit
0x0F71       [0]    SEG1PH1_bit
0x0F71       [0]    SEG1PH2_bit
0x0F72       [1]    BRGCON3
0x0F72       [0]    SEG2PH2_bit
0x0F72       [0]    WAKFIL_bit
0x0F72       [0]    SEG2PH0_bit
0x0F72       [0]    SEG2PH1_bit
0x0F72       [0]    WAKDIS_bit
0x0F73       [1]    CIOCON
0x0F73       [0]    ENDRHI_bit
0x0F73       [0]    CANCAP_bit
0x0F74       [1]    COMSTAT
0x0F74       [0]    RXBP_bit
0x0F74       [0]    TXBP_bit
0x0F74       [0]    TXBO_bit
0x0F74       [0]    EWARN_bit
0x0F74       [0]    RXWARN_bit
0x0F74       [0]    TXWARN_bit
0x0F74       [0]    RXBnOVFL_bit
0x0F74       [0]    FIFOEMPTY_bit
0x0F74       [0]    RXB1OVFL_bit
0x0F74       [0]    RXB0OVFL_bit
0x0F75       [0]    REC6_bit
0x0F75       [0]    REC7_bit
0x0F75       [0]    REC2_bit
0x0F75       [0]    REC3_bit
0x0F75       [0]    REC0_bit
0x0F75       [0]    REC1_bit
0x0F75       [1]    RXERRCNT
0x0F75       [0]    REC5_bit
0x0F75       [0]    REC4_bit
0x0F76       [0]    TEC5_bit
0x0F76       [0]    TEC4_bit
0x0F76       [0]    TEC7_bit
0x0F76       [0]    TEC6_bit
0x0F76       [0]    TEC3_bit
0x0F76       [0]    TEC0_bit
0x0F76       [1]    TXERRCNT
0x0F76       [0]    TEC2_bit
0x0F76       [0]    TEC1_bit
0x0F77       [0]    FIFOWM_bit
0x0F77       [0]    EWIN4_bit
0x0F77       [0]    MDSEL0_bit
0x0F77       [0]    F__bit
0x0F77       [0]    MDSEL1_bit
0x0F77       [0]    EWIN0_bit
0x0F77       [1]    ECANCON
0x0F77       [0]    EWIN1_bit
0x0F77       [0]    EWIN3_bit
0x0F77       [0]    EWIN2_bit
0x0F80       [0]    AN2_bit
0x0F80       [0]    AN3_bit
0x0F80       [0]    AN0_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    CLKI_bit
0x0F80       [0]    CLKO_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    HLVDIN_bit
0x0F80       [0]    NOT_SS_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    VREFP_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    VREFM_bit
0x0F80       [0]    CVREF_bit
0x0F80       [0]    OSC1_bit
0x0F80       [0]    RA5_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA7_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA2_bit
0x0F81       [0]    KBI3_bit
0x0F81       [0]    KBI2_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    RB1_PORTB_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    RB0_PORTB_bit
0x0F81       [0]    KBI0_bit
0x0F81       [0]    KBI1_bit
0x0F81       [1]    PORTB
0x0F81       [0]    CANRX_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    CANTX_bit
0x0F81       [0]    AN8_bit
0x0F81       [0]    FLT0_bit
0x0F81       [0]    AN9_bit
0x0F81       [0]    PGD_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    AN10_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    RX__bit
0x0F82       [1]    PORTC
0x0F82       [0]    SDO_bit
0x0F82       [0]    T13CKI_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC6_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE3_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA0_bit
0x0F89       [1]    LATA
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB3_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA7_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA2_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC6_bit
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    INTSRC_bit
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [0]    TUN0_bit
0x0F9B       [0]    TUN3_bit
0x0F9B       [0]    TUN4_bit
0x0F9B       [0]    PLLEN_bit
0x0F9B       [0]    INTSCR_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TXBIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [1]    IPR1
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    HLVDIE_bit
0x0FA0       [0]    OSCFIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    HLVDIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA2       [0]    HLVDIP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA3       [0]    TXB1IE_PIE3_bit
0x0FA3       [0]    TXB2IE_PIE3_bit
0x0FA3       [0]    RXB0IE_PIE3_bit
0x0FA3       [0]    RXB1IE_PIE3_bit
0x0FA3       [0]    TXB0IE_PIE3_bit
0x0FA3       [0]    TXBnIE_bit
0x0FA3       [0]    RXBnIE_bit
0x0FA3       [1]    PIE3
0x0FA3       [0]    FIFOMWIE_bit
0x0FA3       [0]    WAKIE_bit
0x0FA3       [0]    ERRIE_bit
0x0FA3       [0]    FIFOWMIE_bit
0x0FA3       [0]    IRXIE_bit
0x0FA4       [0]    IRXIF_bit
0x0FA4       [0]    WAKIF_bit
0x0FA4       [0]    FIFOWMIF_bit
0x0FA4       [0]    TXBnIF_bit
0x0FA4       [0]    RXBnIF_bit
0x0FA4       [0]    TXB0IF_bit
0x0FA4       [0]    RXB1IF_bit
0x0FA4       [0]    RXB0IF_bit
0x0FA4       [0]    ERRIF_bit
0x0FA4       [0]    TXB2IF_bit
0x0FA4       [0]    TXB1IF_bit
0x0FA4       [1]    PIR3
0x0FA5       [0]    TXB0IP_bit
0x0FA5       [0]    TXB1IP_bit
0x0FA5       [0]    RXB1IP_bit
0x0FA5       [1]    IPR3
0x0FA5       [0]    RXB0IP_bit
0x0FA5       [0]    TXB2IP_bit
0x0FA5       [0]    FIFOWMIP_bit
0x0FA5       [0]    RXBnIP_bit
0x0FA5       [0]    TXBnIP_bit
0x0FA5       [0]    ERRIP_bit
0x0FA5       [0]    WAKIP_bit
0x0FA5       [0]    IRXIP_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    RD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [1]    EECON1
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    ADEN_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [1]    RCSTA
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    SENDB_bit
0x0FAC       [0]    SYNC_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3ECCP1_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3NSYNC_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB8       [0]    SCKP_bit
0x0FB8       [0]    BRG16_bit
0x0FB8       [0]    RCIDL_bit
0x0FB8       [0]    ABDOVF_bit
0x0FB8       [1]    BAUDCON
0x0FB8       [0]    ABDEN_bit
0x0FB8       [0]    WUE_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC0       [0]    ACQT1_bit
0x0FC0       [0]    ACQT0_bit
0x0FC0       [0]    ADFM_bit
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ADCS2_bit
0x0FC0       [0]    ADCS1_bit
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    VCFG0_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    VCFG1_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    CHS3_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    CHS1_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    ACKEN_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPEN_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    R_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    D_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2OUTPS1_bit
0x0FCA       [0]    T2OUTPS2_bit
0x0FCA       [0]    T2OUTPS3_bit
0x0FCA       [0]    T2OUTPS0_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TMR2ON_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    SBOREN_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    PD_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    RI_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTE_bit
0x0FD2       [1]    LVDCON
0x0FD2       [1]    HLVDCON
0x0FD2       [0]    LVV0_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVV2_bit
0x0FD2       [0]    LVV1_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    HLVDEN_bit
0x0FD2       [0]    HLVDL3_bit
0x0FD2       [0]    IVRST_bit
0x0FD2       [0]    VDIRMAG_bit
0x0FD2       [0]    HLVDL2_bit
0x0FD2       [0]    BGST_bit
0x0FD2       [0]    LVV3_bit
0x0FD2       [0]    HLVDL1_bit
0x0FD2       [0]    HLVDL0_bit
0x0FD3       [0]    OSTS_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    SCS0_bit
0x0FD3       [0]    SCS1_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    IRCF1_bit
0x0FD3       [0]    IRCF2_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS3_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0PS2_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    OV_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    N_bit
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD8       [0]    Z_bit
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0PTR
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2IP_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    GIEH_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FF9       [1]    PC
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU0_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP2_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x14D8      [19]    _icon_INVERTED_MOUNTAINS
0x14EB      [19]    _icon_CHECKER
0x14FE      [19]    _icon_SPC
0x1511      [19]    _icon_MOUNTAINS
0x1524      [19]    _icon_BLOCK
0x1537      [19]    _icon_HELICAL
0x154A      [19]    _icon_INVERTED_HELICAL
0x155D      [19]    _icon_SMILEY
0x1570      [19]    _icon_GREEK
0x1583       [8]    _letter_UNDERSCORE
0x158B       [8]    _letter_PLUS
0x1593       [8]    _letter_RIGHT_PAREN
0x159B       [8]    _letter_DASH
0x15A3       [8]    _letter_TICK
0x15AB       [8]    _letter_COLON
0x15B3       [8]    _letter_EQUALS
0x15BB       [8]    _letter_TILDE
0x15C3       [8]    _letter_DOLLAR
0x15CB       [8]    _letter_PERCENT
0x15D3       [8]    _letter_AT
0x15DB       [8]    _letter_NUM
0x15E3       [8]    _letter_ASTERISK
0x15EB       [8]    _letter_LEFT_PAREN
0x15F3       [8]    _letter_CARRAT
0x15FB       [8]    _letter_AMPERSAND
0x1603       [8]    _letter_SEMICOLON
0x160B       [8]    _letter_newline
0x1613       [8]    _letter_CENTS
0x161B       [8]    _letter_SMILIE
0x1623       [8]    _letter_HEART
0x162B       [8]    _letter_PILCROW
0x1633       [8]    _letter_BULLET
0x163B       [8]    _letter_DEGREE
0x1643       [8]    _letter_EURO
0x164B       [8]    _letter_LEFT_CHEVRON
0x1653       [8]    _letter_RIGHT_CHEVRON
0x165B       [8]    _letter_BACK_SLASH
0x1663       [8]    _letter_FORWARD_SLASH
0x166B       [8]    _letter_RIGHT_BRACKET
0x1673       [8]    _letter_SPC
0x167B       [8]    _letter_TAB
0x1683       [8]    _letter_LEFT_BRACKET
0x168B       [8]    _letter_O
0x1693       [8]    _letter_P
0x169B       [8]    _letter_N
0x16A3       [8]    _letter_L
0x16AB       [8]    _letter_M
0x16B3       [8]    _letter_T
0x16BB       [8]    _letter_U
0x16C3       [8]    _letter_S
0x16CB       [8]    _letter_Q
0x16D3       [8]    _letter_R
0x16DB       [8]    _letter_K
0x16E3       [8]    _letter_D
0x16EB       [8]    _letter_E
0x16F3       [8]    _letter_C
0x16FB       [8]    _letter_A
0x1703       [8]    _letter_B
0x170B       [8]    _letter_I
0x1713       [8]    _letter_J
0x171B       [8]    _letter_H
0x1723       [8]    _letter_F
0x172B       [8]    _letter_G
0x1733       [8]    _letter_9
0x173B       [8]    _letter_PERIOD
0x1743       [8]    _letter_8
0x174B       [8]    _letter_6
0x1753       [8]    _letter_7
0x175B       [8]    _letter_QUESTION
0x1763       [8]    _letter_EXCLAIM
0x176B       [8]    _letter_SINGLE_QUOTE
0x1773       [8]    _letter_COMMA
0x177B       [8]    _letter_QUOTE
0x1783       [8]    _letter_5
0x178B       [8]    _letter_Y
0x1793       [8]    _letter_Z
0x179B       [8]    _letter_X
0x17A3       [8]    _letter_V
0x17AB       [8]    _letter_W
0x17B3       [8]    _letter_3
0x17BB       [8]    _letter_4
0x17C3       [8]    _letter_2
0x17CB       [8]    _letter_0
0x17D3       [8]    _letter_1
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_printChar71
  L_printChar72
  L_printChar73
  L_printChar74
  L_printChar75
  L_printChar76
  L_printChar77
  L_printChar78
  L_printChar79
  L_printChar80
  L_printChar81
  L_printChar82
  L_printChar83
  L_printChar84
  L_printChar85
  L_printChar86
  L_printChar87
  L_printChar88
  L_printChar89
  L_printChar90
  L_printChar91
  L_printChar92
  L_printChar93
  L_printChar94
  L_printChar95
  L_printChar96
  L_printChar97
  L_printChar98
  L_printChar99
  L_printChar100
  L_printChar101
  L_printChar102
  L_printChar103
  L_printChar104
  L_printChar105
  L_printChar106
  L_printChar107
  L_printChar108
  L_printChar109
  L_printChar110
  L_printChar111
  L_printChar112
  L_printChar113
  L_printChar114
  L_printChar115
  L_printChar116
  L_printChar117
  L_printChar118
  L_printChar119
  L_printChar120
  L_printChar121
  L_printChar122
  L_printChar123
  L_printChar124
  L_printChar125
  L_printChar126
  L_printChar127
  L_printChar128
  L_printChar129
  L_printChar130
  L_printChar131
  L_printChar132
  L_printChar133
  L_printChar134
  L_printChar135
  L_printChar136
  L_printChar137
  L_printChar138
  L_printChar139
  L_printChar140
  L_printChar141
  L_printChar142
  L_printChar143
  L_printChar144
  L_printChar145
  L_printChar146
  L_printChar147
  L_printChar148
  L_printChar149
  L_printChar150
  L_printChar151
  L_printChar152
  L_printChar153
  L_printChar154
  L_printChar155
  L_printChar156
  L_printChar157
  L_printChar158
  L_printChar159
  L_printChar160
  L_printChar161
  L_printChar162
  L_printChar163
  L_printChar164
  L_printChar165
  L_printChar166
  L_printChar167
  L_printChar168
  L_printChar169
  L_printChar170
  L_printChar171
  L_printChar172
  L_printChar173
  L_printChar174
  L_printChar175
  L_printChar176
  L_printChar177
  L_printChar178
  L_printChar179
  L_printChar180
  L_printChar181
  L_printChar182
  L_printChar183
  L_printChar184
  L_printChar185
  L_printChar186
  L_printChar187
  L_printChar188
  L_printChar189
  L_printChar190
  L_printChar191
  L_printChar192
  L_printChar193
  L_printChar194
  L_printChar195
  L_printChar196
  L_printChar197
  L_printChar198
  L_printChar199
  L_printChar200
  L_printChar201
  L_printChar202
  L_printChar203
  L_printChar204
  L_printChar205
  L_printChar206
  L_printChar207
  L_printChar208
  L_printChar209
  L_printChar210
  L_printChar211
  L_printChar212
  L_printChar213
  L_printChar214
  L_printChar215
  L_printChar216
  L_printChar217
  L_printChar218
  L_printChar219
  L_printChar220
  L_printChar221
  L_printChar222
  L_printChar223
  L_printChar224
  L_printChar225
  L_printChar226
  L_printChar227
  L_printChar228
  L_printChar229
  L_printChar230
  L_printChar231
  L_printChar232
  L_printChar233
  L_printChar234
  L_printChar235
  L_printChar236
  L_printChar237
  L_printChar238
  L_printChar239
  L_printIcon240
  L_printIcon241
  L_printIcon242
  L_printIcon243
  L_printIcon244
  L_printIcon245
  L_printIcon246
  L_printIcon247
  L_printIcon248
  L_printIcon249
  L_printIcon250
  L_printIcon251
  L_printIcon252
  L_printIcon253
  L_printIcon254
  L_printIcon255
  L_printIcon256
  L_printIcon257
  L_printIcon258
  L_printIcon259
  L_printIcon260
  L_printIcon261
  L_printIcon262
  L_printIcon263
  L_printIcon264
  L_printIcon265
  L_printIcon266
  _main
  L__main267
  L__main268
  L__main269
  L__main270
  L__main271
  L__main272
  L__main273
  L__main274
  L__main275
  L__main276
  L__main277
  L__main278
  L__main279
  L__main280
  L__main281
  L__main282
  L__main283
  L__main284
  L__main285
  L__main286
  L__main287
  L__main288
  L__main289
  _printChar
  L__printChar290
  _printIcon
  L__printIcon291
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
